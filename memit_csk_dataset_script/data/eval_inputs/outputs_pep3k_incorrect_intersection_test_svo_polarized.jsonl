{"inputs": {"id": 3, "prompt": "an ant throws cat", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "ant", "verb": "throws", "object": "cat", "neg": null, "prompt_polarity_grounded": "An ant does not throw cat."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "An ant does not throw cat.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Ants are not capable of throwing cats.\n2. Throwing requires strength and coordination, which ants do not possess.", "affected_reasoning": ["Ants are not capable of throwing cats.", "Throwing requires strength and coordination, which ants do not possess."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: an ant throws cat\nsubject token: ant\nobject token: cat\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. An elephant throws cat\n2. A bee throws cat\n3. A mouse throws cat\n4. A snake throws cat\n5. A bird throws cat\n\nQ2. Replacements:\n1. An ant throws apple\n2. An ant throws ball\n3. An ant throws dog\n4. An ant throws book\n5. An ant throws banana", "subject_replaced": ["A mouse throws cat", "A bee throws cat", "An elephant throws cat", "A bird throws cat", "A snake throws cat"], "object_replaced": ["An ant throws book", "An ant throws apple", "An ant throws banana", "An ant throws dog", "An ant throws ball"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: an ant throws cat\nsubject token: ant\nobject token: cat\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A beetle throws cat, A bug throws cat, An insect throws cat, A spider throws cat, A larva throws cat.\n\nQ2. Throws cat, Hurls cat, Tosses cat, Flings cat, Heaves cat.\n\nQ3. An ant throws kitten, An ant throws feline, An ant throws tabby, An ant throws puss, An ant throws moggy.", "subject_replaced": ["An insect throws cat", "A larva throws cat.", "A beetle throws cat", "A bug throws cat", "A spider throws cat"], "verb_replaced": ["Tosses cat", "Flings cat", "Heaves cat."], "object_replaced": ["An ant throws feline", "An ant throws moggy.", "An ant throws kitten", "An ant throws puss", "An ant throws tabby"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: an ant throws cat\n", "AffectedParaphraseMaker_gptoutput": "\n1. An ant launches a feline\n2. An ant propels a cat\n3. An ant hurls a cat\n4. An ant tosses a cat\n5. An ant flings a cat", "affected_paraphrase": ["An ant hurls a cat", "An ant propels a cat", "An ant flings a cat", "An ant launches a feline", "An ant tosses a cat"]}]}
{"inputs": {"id": 6, "prompt": "the shirt damages pebbles", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "shirt", "verb": "damages", "object": "pebbles", "neg": null, "prompt_polarity_grounded": "The shirt does not damage pebbles."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The shirt does not damage pebbles.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pebbles are solid objects. \n2. A shirt is a soft material.", "affected_reasoning": ["Pebbles are solid objects.", "A shirt is soft material."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the shirt damages pebbles\nsubject token: shirt\nobject token: pebbles\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The balloon damages pebbles\n2. The pencil damages pebbles\n3. The tree damages pebbles\n4. The car damages pebbles\n5. The book damages pebbles\n\nQ2. Replacements:\n1. The shirt damages clouds\n2. The shirt damages stars\n3. The shirt damages cars\n4. The shirt damages books\n5. The shirt damages balloons", "subject_replaced": ["The tree damages pebbles", "The pencil damages pebbles", "The book damages pebbles", "The balloon damages pebbles", "The car damages pebbles"], "object_replaced": ["The shirt damages clouds", "The shirt damages books", "The shirt damages balloons", "The shirt damages stars", "The shirt damages cars"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the shirt damages pebbles\nsubject token: shirt\nobject token: pebbles\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The blouse damages pebbles.\nQ2. The shirt ruins pebbles.\nQ3. The shirt destroys pebbles.", "subject_replaced": ["The blouse damages pebbles."], "verb_replaced": ["The shirt ruins pebbles."], "object_replaced": ["The shirt destroys pebbles."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the shirt damages pebbles\n", "AffectedParaphraseMaker_gptoutput": "\n1. The shirt has a detrimental effect on pebbles.\n2. Pebbles are adversely affected by the shirt.\n3. The shirt causes harm to pebbles.\n4. Pebbles suffer from the shirt.\n5. The shirt is detrimental to pebbles.", "affected_paraphrase": ["The shirt has a detrimental effect on pebbles.", "Pebbles suffer from the shirt.", "Pebbles are adversely affected by the shirt.", "The shirt is detrimental to pebbles.", "The shirt causes harm to pebbles."]}]}
{"inputs": {"id": 17, "prompt": "Worm bends rabbit", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Worm", "verb": "bends", "object": "rabbit", "neg": null, "prompt_polarity_grounded": "Worm does not bend rabbit."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Worm does not bend rabbit.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Worms are not strong enough to bend rabbits.\n2. Rabbits are too big and heavy for worms to move.", "affected_reasoning": ["Worms are not strong enough to bend rabbits.", "Rabbits are too big and heavy for worms to move."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Worm bends rabbit\nsubject token: Worm\nobject token: rabbit\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant bends rabbit\n2. Cat bends rabbit\n3. Fish bends rabbit\n4. Bird bends rabbit\n5. Monkey bends rabbit\n\nQ2. Replacements:\n1. Worm bends tree\n2. Worm bends car\n3. Worm bends house\n4. Worm bends balloon\n5. Worm bends chair", "subject_replaced": ["Elephant bends rabbit", "Monkey bends rabbit", "Bird bends rabbit", "Fish bends rabbit", "Cat bends rabbit"], "object_replaced": ["Worm bends car", "Worm bends balloon", "Worm bends tree", "Worm bends house", "Worm bends chair"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Worm bends rabbit\nsubject token: Worm\nobject token: rabbit\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Serpent bends rabbit\n2. Snake bends rabbit\n3. Reptile bends rabbit\n4. Amphibian bends rabbit\n5. Lizard bends rabbit\n\nQ2.\n1. Worm twists rabbit\n2. Worm contorts rabbit\n3. Worm coils rabbit\n4. Worm flexes rabbit\n5. Worm curves rabbit\n\nQ3.\n1. Worm bends hare\n2. Worm bends coney\n3. Worm bends leveret\n4. Worm bends bunny\n5. Worm bends pika", "subject_replaced": ["Serpent bends rabbit", "Reptile bends rabbit", "Snake bends rabbit", "Amphibian bends rabbit", "Lizard bends rabbit"], "verb_replaced": ["Worm coils rabbit", "Worm twists rabbit", "Worm contorts rabbit", "Worm flexes rabbit", "Worm curves rabbit"], "object_replaced": ["Worm bends pika", "Worm bends coney", "Worm bends bunny", "Worm bends leveret", "Worm bends hare"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Worm bends rabbit\n", "AffectedParaphraseMaker_gptoutput": "\n1. The worm contorts the rabbit.\n2. The rabbit is curved by the worm.\n3. The worm warps the rabbit.\n4. The rabbit is distorted by the worm.\n5. The worm twists the rabbit.", "affected_paraphrase": ["The worm warps the rabbit.", "The worm twists the rabbit.", "The rabbit is curved by the worm.", "The rabbit is distorted by the worm.", "The worm contorts the rabbit."]}]}
{"inputs": {"id": 18, "prompt": "Dog clean cloth", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Dog", "verb": "clean", "object": "cloth", "neg": null, "prompt_polarity_grounded": "Dog dirty cloth."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Dog dirty cloth.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Dog tracked dirt onto the cloth.\n2. The cloth is now dirty.", "affected_reasoning": ["Dog tracked dirt onto cloth.", "The cloth is now dirty."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Dog clean cloth\nsubject token: Dog\nobject token: cloth\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Cat clean cloth\n2. Fish clean cloth\n3. Bird clean cloth\n4. Rabbit clean cloth\n5. Mouse clean cloth\n\nQ2. Replacements:\n1. Dog clean paper\n2. Dog clean towel\n3. Dog clean blanket\n4. Dog clean rug\n5. Dog clean sheet", "subject_replaced": ["Rabbit clean cloth", "Fish clean cloth", "Mouse clean cloth", "Cat clean cloth", "Bird clean cloth"], "object_replaced": ["Dog clean sheet", "Dog clean blanket", "Dog clean paper", "Dog clean towel", "Dog clean rug"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Dog clean cloth\nsubject token: Dog\nobject token: cloth\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Cat clean cloth, Puppy clean cloth, Hound clean cloth, Canine clean cloth, Mutt clean cloth.\nQ2. Dog scrub cloth, Dog wipe cloth, Dog mop cloth, Dog dust cloth, Dog polish cloth.\nQ3. Dog clean rag, Dog clean towel, Dog clean napkin, Dog clean blanket, Dog clean handkerchief.", "subject_replaced": ["Canine clean cloth", "Cat clean cloth", "Hound clean cloth", "Mutt clean cloth.", "Puppy clean cloth"], "verb_replaced": ["Dog dust cloth", "Dog mop cloth", "Dog polish cloth.", "Dog scrub cloth", "Dog wipe cloth"], "object_replaced": ["Dog clean blanket", "Dog clean towel", "Dog clean handkerchief.", "Dog clean rag", "Dog clean napkin"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Dog clean cloth\n", "AffectedParaphraseMaker_gptoutput": "\n1. Canine sanitary fabric\n2. Canine hygienic fabric\n3. Dog washing material\n4. Dog grooming fabric\n5. Dog purifying cloth", "affected_paraphrase": ["Canine sanitary fabric", "Dog grooming fabric", "Dog purifying cloth", "Canine hygienic fabric", "Dog washing material"]}]}
{"inputs": {"id": 21, "prompt": "stick draws castle", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "stick", "verb": "draws", "object": "castle", "neg": null, "prompt_polarity_grounded": "stick draws castle"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "stick draws castle. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pencils create lines.\n2. Lines can be used to draw a castle.", "affected_reasoning": ["Pencils create lines.", "Lines can be used to draw castle."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: stick draws castle\nsubject token: stick\nobject token: castle\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hammer draws castle\n2. Pencil draws castle\n3. Brush draws castle\n4. Ruler draws castle\n5. Knife draws castle\n\nQ2. Replacements:\n1. Stick draws house\n2. Stick draws tree\n3. Stick draws mountain\n4. Stick draws lake\n5. Stick draws balloon", "subject_replaced": ["Hammer draws castle", "Brush draws castle", "Pencil draws castle", "Knife draws castle", "Ruler draws castle"], "object_replaced": ["Stick draws balloon", "Stick draws lake", "Stick draws house", "Stick draws mountain", "Stick draws tree"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: stick draws castle\nsubject token: stick\nobject token: castle\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Pole draws castle\n2. Rod draws castle\n3. Baton draws castle\n4. Wand draws castle\n5. Sticker draws castle\n\nQ2.\n1. Stick builds castle\n2. Stick creates castle\n3. Stick constructs castle\n4. Stick designs castle\n5. Stick fashions castle\n\nQ3.\n1. Stick draws fortress\n2. Stick draws citadel\n3. Stick draws keep\n4. Stick draws palace\n5. Stick draws manor", "subject_replaced": ["Sticker draws castle", "Wand draws castle", "Rod draws castle", "Baton draws castle", "Pole draws castle"], "verb_replaced": ["Stick constructs castle", "Stick fashions castle", "Stick builds castle", "Stick designs castle", "Stick creates castle"], "object_replaced": ["Stick draws citadel", "Stick draws manor", "Stick draws fortress", "Stick draws palace", "Stick draws keep"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: stick draws castle\n", "AffectedParaphraseMaker_gptoutput": "\n1. A stick is used to create a castle.\n2. A stick is employed to sketch a castle.\n3. A stick is utilized to draw a castle.\n4. A stick is utilized to construct a castle.\n5. A stick is utilized to form a castle.", "affected_paraphrase": ["A stick is utilized to form a castle.", "A stick is used to create a castle.", "A stick is employed to sketch a castle.", "A stick is utilized to draw a castle.", "A stick is utilized to construct a castle."]}]}
{"inputs": {"id": 23, "prompt": "Hand severs arm", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Hand", "verb": "severs", "object": "arm", "neg": null, "prompt_polarity_grounded": "Hand does not sever arm."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Hand does not sever arm.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Arms are connected to the body, so severing an arm would require cutting through the body. \n2. Cutting through the body is not possible without causing serious injury or death.", "affected_reasoning": ["Arms are connected to body, so severing arm would require cutting through body.", "Cutting through body is not possible without causing serious injury or death."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Hand severs arm\nsubject token: Hand\nobject token: arm\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Car severs arm\n2. Pen severs arm\n3. Tree severs arm\n4. Book severs arm\n5. Cat severs arm\n\nQ2. Replacements:\n1. Hand severs shoe\n2. Hand severs pencil\n3. Hand severs chair\n4. Hand severs paper\n5. Hand severs dog", "subject_replaced": ["Cat severs arm", "Car severs arm", "Pen severs arm", "Book severs arm", "Tree severs arm"], "object_replaced": ["Hand severs chair", "Hand severs shoe", "Hand severs pencil", "Hand severs paper", "Hand severs dog"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Hand severs arm\nsubject token: Hand\nobject token: arm\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Fist severs arm, Claw severs arm, Grasp severs arm, Grip severs arm, Clench severs arm\nQ2. Hand cuts arm, Hand chops arm, Hand slices arm, Hand snips arm, Hand shears arm\nQ3. Hand severs limb, Hand severs appendage, Hand severs member, Hand severs extremity, Hand severs part", "subject_replaced": ["Clench severs arm", "Fist severs arm", "Grasp severs arm", "Grip severs arm", "Claw severs arm"], "verb_replaced": ["Hand cuts arm", "Hand snips arm", "Hand shears arm", "Hand slices arm", "Hand chops arm"], "object_replaced": ["Hand severs extremity", "Hand severs member", "Hand severs appendage", "Hand severs part", "Hand severs limb"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Hand severs arm\n", "AffectedParaphraseMaker_gptoutput": "\n1. Hand cuts off arm\n2. Hand amputates arm\n3. Hand chops arm\n4. Hand dismembers arm\n5. Hand removes arm", "affected_paraphrase": ["Hand dismembers arm", "Hand removes arm", "Hand amputates arm", "Hand chops arm", "Hand cuts off arm"]}]}
{"inputs": {"id": 29, "prompt": "Soil absorbs oil", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Soil", "verb": "absorbs", "object": "oil", "neg": null, "prompt_polarity_grounded": "Soil absorbs oil"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Soil absorbs oil. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Oil is a liquid, so it can spread out over a surface. \n2. Soil is porous, so it can absorb the oil.", "affected_reasoning": ["Oil is liquid, so it can spread out over surface.", "Soil is porous, so it can absorb oil."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Soil absorbs oil\nsubject token: Soil\nobject token: oil\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Clouds absorbs oil\n2. Trees absorbs oil\n3. Rocks absorbs oil\n4. Animals absorbs oil\n5. People absorbs oil\n\nQ2. Replacements:\n1. Soil absorbs water\n2. Soil absorbs air\n3. Soil absorbs fire\n4. Soil absorbs electricity\n5. Soil absorbs sunlight", "subject_replaced": ["Rocks absorbs oil", "Animals absorbs oil", "Clouds absorbs oil", "People absorbs oil", "Trees absorbs oil"], "object_replaced": ["Soil absorbs fire", "Soil absorbs electricity", "Soil absorbs sunlight", "Soil absorbs air", "Soil absorbs water"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Soil absorbs oil\nsubject token: Soil\nobject token: oil\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Ground absorbs oil, Earth absorbs oil, Substrate absorbs oil, Dirt absorbs oil, Sediment absorbs oil.\nQ2. Soil takes in oil, Soil ingests oil, Soil consumes oil, Soil absorbs oil, Soil assimilates oil.\nQ3. Soil absorbs grease, Soil absorbs petroleum, Soil absorbs fuel, Soil absorbs tar, Soil absorbs lubricant.", "subject_replaced": ["Dirt absorbs oil", "Substrate absorbs oil", "Earth absorbs oil", "Ground absorbs oil", "Sediment absorbs oil."], "verb_replaced": ["Soil ingests oil", "Soil absorbs oil", "Soil takes in oil", "Soil assimilates oil.", "Soil consumes oil"], "object_replaced": ["Soil absorbs fuel", "Soil absorbs tar", "Soil absorbs petroleum", "Soil absorbs grease", "Soil absorbs lubricant."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Soil absorbs oil\n", "AffectedParaphraseMaker_gptoutput": "\n1. The ground takes in oil.\n2. The dirt soaks up oil.\n3. The earth assimilates oil.\n4. The soil ingests oil.\n5. The land absorbs oil.", "affected_paraphrase": ["The ground takes in oil.", "The dirt soaks up oil.", "The land absorbs oil.", "The soil ingests oil.", "The earth assimilates oil."]}]}
{"inputs": {"id": 31, "prompt": "boat hurl hair", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "boat", "verb": "hurl", "object": "hair", "neg": null, "prompt_polarity_grounded": "boat not hurl hair."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "boat not hurl hair.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Boats don't have hair. \n2. Therefore, boats can't hurl hair.", "affected_reasoning": ["Boats don't have hair.", "Therefore, boats can't hurl hair."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: boat hurl hair\nsubject token: boat\nobject token: hair\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. text: car hurl hair\n2. text: train hurl hair\n3. text: plane hurl hair\n4. text: bike hurl hair\n5. text: ship hurl hair\n\nQ2. Replacements:\n1. text: boat hurl grass\n2. text: boat hurl fur\n3. text: boat hurl wool\n4. text: boat hurl feather\n5. text: boat hurl cotton", "subject_replaced": ["bike hurl hair", "ship hurl hair", "car hurl hair", "plane hurl hair", "train hurl hair"], "object_replaced": ["boat hurl feather", "boat hurl cotton", "boat hurl wool", "boat hurl grass", "boat hurl fur"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: boat hurl hair\nsubject token: boat\nobject token: hair\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Sail hurl hair, Cruise hurl hair, Navigate hurl hair, Paddle hurl hair, Row hurl hair.\nQ2. Boat fling hair, Boat toss hair, Boat launch hair, Boat propel hair, Boat throw hair.\nQ3. Boat hurl tresses, Boat hurl locks, Boat hurl strands, Boat hurl mane, Boat hurl curls.", "subject_replaced": ["Row hurl hair.", "Sail hurl hair", "Cruise hurl hair", "Navigate hurl hair", "Paddle hurl hair"], "verb_replaced": ["Boat fling hair", "Boat throw hair.", "Boat launch hair", "Boat toss hair", "Boat propel hair"], "object_replaced": ["Boat hurl mane", "Boat hurl tresses", "Boat hurl locks", "Boat hurl curls.", "Boat hurl strands"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: boat hurl hair\n", "AffectedParaphraseMaker_gptoutput": "\n1. Vessel fling tresses\n2. Ship toss mane\n3. Launch cast locks\n4. Craft fling strands\n5. Boat throw locks", "affected_paraphrase": ["Craft fling strands", "Ship toss mane", "Boat throw locks", "Vessel fling tresses", "Launch cast locks"]}]}
{"inputs": {"id": 39, "prompt": "Man kneads scissors", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Man", "verb": "kneads", "object": "scissors", "neg": null, "prompt_polarity_grounded": "Man does not knead scissors."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Man does not knead scissors.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Scissors are tools used for cutting.\n2. Cutting does not require kneading.", "affected_reasoning": ["Scissors are tools used for cutting.", "Cutting does not require kneading."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Man kneads scissors\nsubject token: Man\nobject token: scissors\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Woman kneads scissors\n2. Child kneads scissors\n3. Dog kneads scissors\n4. Cat kneads scissors\n5. Horse kneads scissors\n\nQ2. Replacements:\n1. Man kneads pencils\n2. Man kneads pens\n3. Man kneads paper\n4. Man kneads erasers\n5. Man kneads markers", "subject_replaced": ["Horse kneads scissors", "Child kneads scissors", "Woman kneads scissors", "Cat kneads scissors", "Dog kneads scissors"], "object_replaced": ["Man kneads paper", "Man kneads markers", "Man kneads pencils", "Man kneads pens", "Man kneads erasers"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Man kneads scissors\nsubject token: Man\nobject token: scissors\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Person kneads scissors, Individual kneads scissors, Human kneads scissors, Male kneads scissors, Female kneads scissors\nQ2. Man manipulates scissors, Man fiddles with scissors, Man handles scissors, Man works with scissors, Man plays with scissors\nQ3. Man kneads shears, Man kneads clippers, Man kneads blades, Man kneads cutters, Man kneads snips", "subject_replaced": ["Female kneads scissors", "Male kneads scissors", "Individual kneads scissors", "Person kneads scissors", "Human kneads scissors"], "verb_replaced": ["Man manipulates scissors", "Man works with scissors", "Man fiddles with scissors", "Man handles scissors", "Man plays with scissors"], "object_replaced": ["Man kneads cutters", "Man kneads blades", "Man kneads clippers", "Man kneads snips", "Man kneads shears"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Man kneads scissors\n", "AffectedParaphraseMaker_gptoutput": "\n1. A person manipulates scissors with their hands.\n2. A human being works scissors with their fingers.\n3. An individual manipulates scissors with their palms.\n4. A man works scissors with their hands.\n5. A human being kneads scissors with their hands.", "affected_paraphrase": ["A man works scissors with their hands.", "A human being kneads scissors with their hands.", "A person manipulates scissors with their hands.", "An individual manipulates scissors with their palms.", "A human being works scissors with their fingers."]}]}
{"inputs": {"id": 42, "prompt": "a lion vomits mud", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "lion", "verb": "vomits", "object": "mud", "neg": null, "prompt_polarity_grounded": "a lion vomits mud"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a lion vomits mud. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Lion ate mud. \n2. Mud was not digestible, so lion vomited it.", "affected_reasoning": ["Lion ate mud.", "Mud was not digestible, so lion vomited it."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a lion vomits mud\nsubject token: lion\nobject token: mud\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A giraffe vomits mud\n2. A tiger vomits mud\n3. A bear vomits mud\n4. A monkey vomits mud\n5. A zebra vomits mud\n\nQ2. Replacements:\n1. A lion vomits water\n2. A lion vomits snow\n3. A lion vomits ice\n4. A lion vomits leaves\n5. A lion vomits rocks", "subject_replaced": ["A zebra vomits mud", "A bear vomits mud", "A tiger vomits mud", "A giraffe vomits mud", "A monkey vomits mud"], "object_replaced": ["A lion vomits water", "A lion vomits snow", "A lion vomits leaves", "A lion vomits ice", "A lion vomits rocks"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a lion vomits mud\nsubject token: lion\nobject token: mud\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A tiger vomits mud, A panther vomits mud, A cheetah vomits mud, A jaguar vomits mud, A cougar vomits mud.\nQ2. A lion regurgitates mud, A lion disgorges mud, A lion ejects mud, A lion spews mud, A lion belches mud.\nQ3. A lion vomits sludge, A lion vomits muck, A lion vomits dirt, A lion vomits clay, A lion vomits silt.", "subject_replaced": ["A jaguar vomits mud", "A panther vomits mud", "A tiger vomits mud", "A cougar vomits mud.", "A cheetah vomits mud"], "verb_replaced": ["A lion spews mud", "A lion regurgitates mud", "A lion ejects mud", "A lion disgorges mud", "A lion belches mud."], "object_replaced": ["A lion vomits muck", "A lion vomits clay", "A lion vomits dirt", "A lion vomits silt.", "A lion vomits sludge"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a lion vomits mud\n", "AffectedParaphraseMaker_gptoutput": "\n1. A lion regurgitates dirt.\n2. A lion disgorges mud.\n3. A lion ejects mud from its stomach.\n4. A lion expels mud from its mouth.\n5. A lion spews mud.", "affected_paraphrase": ["A lion disgorges mud.", "A lion ejects mud from its stomach.", "A lion spews mud.", "A lion regurgitates dirt.", "A lion expels mud from its mouth."]}]}
{"inputs": {"id": 51, "prompt": "Tree kick ball", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Tree", "verb": "kick", "object": "ball", "neg": null, "prompt_polarity_grounded": "Tree did not kick ball."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Tree did not kick ball.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Tree doesn't have legs.\n2. Legs are needed to kick a ball.", "affected_reasoning": ["Tree doesn't have legs.", "Legs are needed to kick ball."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Tree kick ball\nsubject token: Tree\nobject token: ball\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Plane kick ball\n2. Car kick ball\n3. House kick ball\n4. Dog kick ball\n5. Cat kick ball\n\nQ2. Replacements:\n1. Tree kick rock\n2. Tree kick pencil\n3. Tree kick book\n4. Tree kick phone\n5. Tree kick chair", "subject_replaced": ["House kick ball", "Dog kick ball", "Plane kick ball", "Cat kick ball", "Car kick ball"], "object_replaced": ["Tree kick rock", "Tree kick pencil", "Tree kick phone", "Tree kick book", "Tree kick chair"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Tree kick ball\nsubject token: Tree\nobject token: ball\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Bush kick ball\n2. Plant kick ball\n3. Trunk kick ball\n4. Branch kick ball\n5. Stem kick ball\n\nQ2.\n1. Tree thump ball\n2. Tree strike ball\n3. Tree kick off ball\n4. Tree boot ball\n5. Tree toss ball\n\nQ3.\n1. Tree kick soccer\n2. Tree kick sphere\n3. Tree kick disc\n4. Tree kick globe\n5. Tree kick cylinder", "subject_replaced": ["Plant kick ball", "Branch kick ball", "Stem kick ball", "Trunk kick ball", "Bush kick ball"], "verb_replaced": ["Tree boot ball", "Tree strike ball", "Tree thump ball", "Tree toss ball", "Tree kick off ball"], "object_replaced": ["Tree kick disc", "Tree kick globe", "Tree kick cylinder", "Tree kick sphere", "Tree kick soccer"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Tree kick ball\n", "AffectedParaphraseMaker_gptoutput": "\n1. A tree was used to strike a ball.\n2. A tree was used to hit a ball.\n3. A tree was used to kick a ball.\n4. A tree was used to propel a ball.\n5. A tree was used to boot a ball.", "affected_paraphrase": ["A tree was used to propel a ball.", "A tree was used to kick a ball.", "A tree was used to strike a ball.", "A tree was used to hit a ball.", "A tree was used to boot a ball."]}]}
{"inputs": {"id": 54, "prompt": "an elephant rolls rock", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "elephant", "verb": "rolls", "object": "rock", "neg": null, "prompt_polarity_grounded": "an elephant rolls rock"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "an elephant rolls rock. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nElephants are strong enough to move rocks. Elephants can use their trunks to roll rocks.", "affected_reasoning": ["Elephants are strong enough to move rocks", "Elephants can use their trunks to roll rocks."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: an elephant rolls rock\nsubject token: elephant\nobject token: rock\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. An ostrich rolls rock\n2. A giraffe rolls rock\n3. A lion rolls rock\n4. A zebra rolls rock\n5. A hippo rolls rock\n\nQ2. Replacements:\n1. An elephant rolls paper\n2. An elephant rolls pencil\n3. An elephant rolls rubber\n4. An elephant rolls ball\n5. An elephant rolls wheel", "subject_replaced": ["An ostrich rolls rock", "A hippo rolls rock", "A zebra rolls rock", "A giraffe rolls rock", "A lion rolls rock"], "object_replaced": ["An elephant rolls ball", "An elephant rolls rubber", "An elephant rolls pencil", "An elephant rolls wheel", "An elephant rolls paper"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: an elephant rolls rock\nsubject token: elephant\nobject token: rock\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A mammoth rolls rock, A pachyderm rolls rock, A rhinoceros rolls rock, A hippopotamus rolls rock, A tapir rolls rock.\n\nQ2. An elephant tosses rock, An elephant throws rock, An elephant heaves rock, An elephant flings rock, An elephant hurls rock.\n\nQ3. An elephant rolls boulder, An elephant rolls pebble, An elephant rolls stone, An elephant rolls gravel, An elephant rolls chunk.", "subject_replaced": ["A pachyderm rolls rock", "A mammoth rolls rock", "A tapir rolls rock.", "A hippopotamus rolls rock", "A rhinoceros rolls rock"], "verb_replaced": ["An elephant heaves rock", "An elephant hurls rock.", "An elephant flings rock", "An elephant tosses rock", "An elephant throws rock"], "object_replaced": ["An elephant rolls boulder", "An elephant rolls stone", "An elephant rolls pebble", "An elephant rolls chunk.", "An elephant rolls gravel"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: an elephant rolls rock\n", "AffectedParaphraseMaker_gptoutput": "\n1. An elephant pushes stones.\n2. An elephant manipulates rocks.\n3. An elephant moves rocks.\n4. An elephant shifts boulders.\n5. An elephant tumbles stones.", "affected_paraphrase": ["An elephant shifts boulders.", "An elephant tumbles stones.", "An elephant pushes stones.", "An elephant moves rocks.", "An elephant manipulates rocks."]}]}
{"inputs": {"id": 55, "prompt": "oil dampens skyscraper", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "oil", "verb": "dampens", "object": "skyscraper", "neg": null, "prompt_polarity_grounded": "oil dampens skyscraper"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "oil dampens skyscraper. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Wind causes skyscraper to sway. \n2. Oil reduces friction, making swaying less severe.", "affected_reasoning": ["Wind causes skyscraper to sway.", "Oil reduces friction, making swaying less severe."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: oil dampens skyscraper\nsubject token: oil\nobject token: skyscraper\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1.\n1. Glue dampens skyscraper\n2. Fire dampens skyscraper\n3. Water dampens skyscraper\n4. Wind dampens skyscraper\n5. Sun dampens skyscraper\n\nQ2.\n1. Oil dampens airplane\n2. Oil dampens balloon\n3. Oil dampens mountain\n4. Oil dampens tree\n5. Oil dampens river", "subject_replaced": ["Glue dampens skyscraper", "Fire dampens skyscraper", "Sun dampens skyscraper", "Wind dampens skyscraper", "Water dampens skyscraper"], "object_replaced": ["Oil dampens river", "Oil dampens tree", "Oil dampens balloon", "Oil dampens airplane", "Oil dampens mountain"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: oil dampens skyscraper\nsubject token: oil\nobject token: skyscraper\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Lubricant dampens skyscraper, Grease dampens skyscraper, Petroleum dampens skyscraper, Fuel dampens skyscraper, Motor oil dampens skyscraper.\nQ2. Coats skyscraper, Smothers skyscraper, Soaks skyscraper, Saturates skyscraper, Drenches skyscraper.\nQ3. Oil dampens building, Oil dampens tower, Oil dampens edifice, Oil dampens structure, Oil dampens high-rise.", "subject_replaced": ["Lubricant dampens skyscraper", "Petroleum dampens skyscraper", "Fuel dampens skyscraper", "Grease dampens skyscraper", "Motor oil dampens skyscraper."], "verb_replaced": ["Smothers skyscraper", "Saturates skyscraper", "Soaks skyscraper", "Drenches skyscraper.", "Coats skyscraper"], "object_replaced": ["Oil dampens building", "Oil dampens structure", "Oil dampens high-rise.", "Oil dampens tower", "Oil dampens edifice"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: oil dampens skyscraper\n", "AffectedParaphraseMaker_gptoutput": "\n1. Oil reduces the height of skyscrapers.\n2. Oil diminishes the stature of skyscrapers.\n3. Oil lowers the elevation of skyscrapers.\n4. Oil restricts the size of skyscrapers.\n5. Oil hinders the growth of skyscrapers.", "affected_paraphrase": ["Oil restricts the size of skyscrapers.", "Oil diminishes the stature of skyscrapers.", "Oil reduces the height of skyscrapers.", "Oil hinders the growth of skyscrapers.", "Oil lowers the elevation of skyscrapers."]}]}
{"inputs": {"id": 68, "prompt": "Worm moves turtle", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Worm", "verb": "moves", "object": "turtle", "neg": null, "prompt_polarity_grounded": "Worm does not move turtle."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Worm does not move turtle.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Worms do not have legs, so they cannot move like a turtle. \n2. Turtles use their legs to move, but worms use their muscles to move in a wiggling motion.", "affected_reasoning": ["Worms do not have legs, so they cannot move like turtle.", "Turtles use their legs to move, but worms use their muscles to move in wiggling motion."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Worm moves turtle\nsubject token: Worm\nobject token: turtle\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant moves turtle\n2. Cat moves turtle\n3. Fish moves turtle\n4. Bird moves turtle\n5. Mouse moves turtle\n\nQ2. Replacements:\n1. Worm moves airplane\n2. Worm moves car\n3. Worm moves boat\n4. Worm moves house\n5. Worm moves tree", "subject_replaced": ["Fish moves turtle", "Elephant moves turtle", "Mouse moves turtle", "Cat moves turtle", "Bird moves turtle"], "object_replaced": ["Worm moves airplane", "Worm moves tree", "Worm moves car", "Worm moves boat", "Worm moves house"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Worm moves turtle\nsubject token: Worm\nobject token: turtle\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Caterpillar moves turtle\n2. Larva moves turtle\n3. Maggot moves turtle\n4. Grub moves turtle\n5. Slug moves turtle\n\nQ2.\n1. Worm creeps turtle\n2. Worm drags turtle\n3. Worm scurries turtle\n4. Worm slithers turtle\n5. Worm strides turtle\n\nQ3.\n1. Worm moves tortoise\n2. Worm moves terrapin\n3. Worm moves box turtle\n4. Worm moves snapping turtle\n5. Worm moves softshell turtle", "subject_replaced": ["Maggot moves turtle", "Larva moves turtle", "Grub moves turtle", "Caterpillar moves turtle", "Slug moves turtle"], "verb_replaced": ["Worm drags turtle", "Worm slithers turtle", "Worm scurries turtle", "Worm strides turtle", "Worm creeps turtle"], "object_replaced": ["Worm moves terrapin", "Worm moves tortoise", "Worm moves softshell turtle", "Worm moves box turtle", "Worm moves snapping turtle"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Worm moves turtle\n", "AffectedParaphraseMaker_gptoutput": "\n1. The worm is shifting the turtle.\n2. The worm is relocating the turtle.\n3. The worm is transporting the turtle.\n4. The worm is traversing the turtle.\n5. The worm is propelling the turtle.", "affected_paraphrase": ["The worm is propelling the turtle.", "The worm is transporting the turtle.", "The worm is traversing the turtle.", "The worm is relocating the turtle.", "The worm is shifting the turtle."]}]}
{"inputs": {"id": 69, "prompt": "the house punches wall", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "house", "verb": "punches", "object": "wall", "neg": null, "prompt_polarity_grounded": "The house does not punch the wall."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The house does not punch the wall.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The house is an inanimate object.\n2. Inanimate objects cannot move on their own.", "affected_reasoning": ["The house is inanimate object.", "Inanimate objects cannot move on their own."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the house punches wall\nsubject token: house\nobject token: wall\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The cat punches wall\n2. The tree punches wall\n3. The moon punches wall\n4. The river punches wall\n5. The mountain punches wall\n\nQ2. Replacements:\n1. The house punches door\n2. The house punches chair\n3. The house punches table\n4. The house punches window\n5. The house punches carpet", "subject_replaced": ["The tree punches wall", "The mountain punches wall", "The river punches wall", "The cat punches wall", "The moon punches wall"], "object_replaced": ["The house punches door", "The house punches window", "The house punches carpet", "The house punches chair", "The house punches table"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the house punches wall\nsubject token: house\nobject token: wall\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The mansion punches wall, the cottage punches wall, the villa punches wall, the bungalow punches wall, the manor punches wall.\n\nQ2. The house bashes wall, the house smashes wall, the house slams wall, the house crashes wall, the house thumps wall.\n\nQ3. The house punches brick, the house punches plaster, the house punches paneling, the house punches siding, the house punches stucco.", "subject_replaced": ["the manor punches wall.", "the cottage punches wall", "the villa punches wall", "The mansion punches wall", "the bungalow punches wall"], "verb_replaced": ["the house thumps wall.", "the house smashes wall", "the house crashes wall", "The house bashes wall", "the house slams wall"], "object_replaced": ["the house punches paneling", "the house punches stucco.", "the house punches siding", "The house punches brick", "the house punches plaster"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the house punches wall\n", "AffectedParaphraseMaker_gptoutput": "\n1. The residence makes a hole in the wall with a fist.\n2. The abode strikes the wall with a fist.\n3. The domicile delivers a blow to the wall.\n4. The dwelling delivers a punch to the wall.\n5. The house delivers a wallop to the wall.", "affected_paraphrase": ["The house delivers a wallop to the wall.", "The residence makes a hole in the wall with a fist.", "The abode strikes the wall with a fist.", "The domicile delivers a blow to the wall.", "The dwelling delivers a punch to the wall."]}]}
{"inputs": {"id": 70, "prompt": "a spatula attached string", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "spatula", "verb": "attached", "object": "string", "neg": null, "prompt_polarity_grounded": "No spatula was not attached to the string."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "No spatula was not attached to the string.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The string was not attached to the spatula. \n2. Therefore, the spatula was not attached to the string.", "affected_reasoning": ["The string was not attached to spatula.", "Therefore, spatula was not attached to string."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a spatula attached string\nsubject token: spatula\nobject token: string\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a hammer attached string\n2. a spoon attached string\n3. a fork attached string\n4. a knife attached string\n5. a whisk attached string\n\nQ2. Replacements:\n1. a spatula attached rope\n2. a spatula attached cable\n3. a spatula attached wire\n4. a spatula attached cord\n5. a spatula attached yarn", "subject_replaced": ["a spoon attached string", "a fork attached string", "a whisk attached string", "a hammer attached string", "a knife attached string"], "object_replaced": ["a spatula attached cord", "a spatula attached cable", "a spatula attached yarn", "a spatula attached wire", "a spatula attached rope"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a spatula attached string\nsubject token: spatula\nobject token: string\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A spoon attached string, a ladle attached string, a scoop attached string, a turner attached string, a flipper attached string.\nQ2. Connected a spatula to string, affixed a spatula to string, linked a spatula to string, secured a spatula to string, fastened a spatula to string.\nQ3. A spatula attached cord, a spatula attached rope, a spatula attached twine, a spatula attached yarn, a spatula attached thread.", "subject_replaced": ["a scoop attached string", "a ladle attached string", "a flipper attached string.", "a turner attached string", "A spoon attached string"], "verb_replaced": ["affixed a spatula to string", "Connected a spatula to string", "secured a spatula to string", "fastened a spatula to string.", "linked a spatula to string"], "object_replaced": ["a spatula attached twine", "a spatula attached yarn", "a spatula attached thread.", "A spatula attached cord", "a spatula attached rope"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a spatula attached string\n", "AffectedParaphraseMaker_gptoutput": "\n1. A string connected to a spatula\n2. A string affixed to a spatula\n3. A string tied to a spatula\n4. A string linked to a spatula\n5. A string fastened to a spatula", "affected_paraphrase": ["A string linked to a spatula", "A string connected to a spatula", "A string tied to a spatula", "A string fastened to a spatula", "A string affixed to a spatula"]}]}
{"inputs": {"id": 71, "prompt": "a gorilla entered basket", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "gorilla", "verb": "entered", "object": "basket", "neg": null, "prompt_polarity_grounded": "No gorilla entered the basket."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "No gorilla entered the basket.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Gorillas cannot fit in a basket.\n2. Therefore, no gorilla entered the basket.", "affected_reasoning": ["Gorillas cannot fit in basket.", "Therefore, no gorilla entered basket."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a gorilla entered basket\nsubject token: gorilla\nobject token: basket\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A hippopotamus entered basket\n2. A rhinoceros entered basket\n3. A cheetah entered basket\n4. A leopard entered basket\n5. An elephant entered basket\n\nQ2. Replacements:\n1. A gorilla entered suitcase\n2. A gorilla entered box\n3. A gorilla entered trunk\n4. A gorilla entered container\n5. A gorilla entered pouch", "subject_replaced": ["A rhinoceros entered basket", "A leopard entered basket", "A cheetah entered basket", "An elephant entered basket", "A hippopotamus entered basket"], "object_replaced": ["A gorilla entered pouch", "A gorilla entered container", "A gorilla entered trunk", "A gorilla entered suitcase", "A gorilla entered box"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a gorilla entered basket\nsubject token: gorilla\nobject token: basket\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A primate entered basket, A simian entered basket, An ape entered basket, A chimpanzee entered basket, A bonobo entered basket.\n\nQ2. Inserted a gorilla into basket, Placed a gorilla into basket, Put a gorilla into basket, Dropped a gorilla into basket, Threw a gorilla into basket.\n\nQ3. A gorilla entered container, A gorilla entered vessel, A gorilla entered receptacle, A gorilla entered caddy, A gorilla entered hamper.", "subject_replaced": ["A simian entered basket", "A chimpanzee entered basket", "A bonobo entered basket.", "A primate entered basket", "An ape entered basket"], "verb_replaced": ["Threw a gorilla into basket.", "Placed a gorilla into basket", "Put a gorilla into basket", "Inserted a gorilla into basket", "Dropped a gorilla into basket"], "object_replaced": ["A gorilla entered receptacle", "A gorilla entered container", "A gorilla entered vessel", "A gorilla entered hamper.", "A gorilla entered caddy"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a gorilla entered basket\n", "AffectedParaphraseMaker_gptoutput": "\n1. A gorilla stepped into the basket.\n2. A gorilla clambered into the basket.\n3. A gorilla climbed into the basket.\n4. A gorilla made its way into the basket.\n5. A gorilla ventured into the basket.", "affected_paraphrase": ["A gorilla ventured into the basket.", "A gorilla stepped into the basket.", "A gorilla climbed into the basket.", "A gorilla clambered into the basket.", "A gorilla made its way into the basket."]}]}
{"inputs": {"id": 75, "prompt": "Man drops car", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Man", "verb": "drops", "object": "car", "neg": null, "prompt_polarity_grounded": "Man does not drop car."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Man does not drop car.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Cars are too heavy for a person to lift.\n2. Therefore, a person cannot drop a car.", "affected_reasoning": ["Cars are too heavy for person to lift.", "Therefore, person cannot drop car."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Man drops car\nsubject token: Man\nobject token: car\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Woman drops car\n2. Child drops car\n3. Dog drops car\n4. Cat drops car\n5. Elephant drops car\n\nQ2. Replacements:\n1. Man drops house\n2. Man drops tree\n3. Man drops boat\n4. Man drops airplane\n5. Man drops bike", "subject_replaced": ["Dog drops car", "Child drops car", "Cat drops car", "Elephant drops car", "Woman drops car"], "object_replaced": ["Man drops tree", "Man drops bike", "Man drops airplane", "Man drops house", "Man drops boat"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Man drops car\nsubject token: Man\nobject token: car\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Person drops car, Individual drops car, Human drops car, Male drops car, Female drops car\nQ2. Man tosses car, Man flings car, Man hurls car, Man launches car, Man throws car\nQ3. Man drops automobile, Man drops vehicle, Man drops sedan, Man drops coupe, Man drops truck", "subject_replaced": ["Person drops car", "Individual drops car", "Human drops car", "Female drops car", "Male drops car"], "verb_replaced": ["Man hurls car", "Man flings car", "Man tosses car", "Man throws car", "Man launches car"], "object_replaced": ["Man drops truck", "Man drops vehicle", "Man drops automobile", "Man drops coupe", "Man drops sedan"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Man drops car\n", "AffectedParaphraseMaker_gptoutput": "\n1. The man let go of the car.\n2. The man released the car.\n3. The man relinquished the car.\n4. The man abandoned the car.\n5. The man parted with the car.", "affected_paraphrase": ["The man relinquished the car.", "The man parted with the car.", "The man let go of the car.", "The man released the car.", "The man abandoned the car."]}]}
{"inputs": {"id": 80, "prompt": "Soil buries remote", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Soil", "verb": "buries", "object": "remote", "neg": null, "prompt_polarity_grounded": "Soil buries remote"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Soil buries remote. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nSoil covers the ground, burying anything on it; remote objects are not visible on the surface, so they are buried by the soil.", "affected_reasoning": ["Soil covers ground, burying anything on it; remote objects are not visible on surface, so they are buried by soil."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Soil buries remote\nsubject token: Soil\nobject token: remote\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Water buries remote\n2. Wind buries remote\n3. Fire buries remote\n4. Time buries remote\n5. Space buries remote\n\nQ2. Replacements:\n1. Soil buries home\n2. Soil buries sky\n3. Soil buries ocean\n4. Soil buries mountain\n5. Soil buries sun", "subject_replaced": ["Water buries remote", "Space buries remote", "Fire buries remote", "Wind buries remote", "Time buries remote"], "object_replaced": ["Soil buries ocean", "Soil buries sky", "Soil buries sun", "Soil buries mountain", "Soil buries home"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Soil buries remote\nsubject token: Soil\nobject token: remote\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Earth buries remote, Dust buries remote, Ground buries remote, Sediment buries remote, Substrate buries remote.\nQ2. Soil covers remote, Soil enshrouds remote, Soil conceals remote, Soil masks remote, Soil hides remote.\nQ3. Soil buries far-off, Soil buries distant, Soil buries secluded, Soil buries isolated, Soil buries obscure.", "subject_replaced": ["Sediment buries remote", "Earth buries remote", "Ground buries remote", "Dust buries remote", "Substrate buries remote."], "verb_replaced": ["Soil masks remote", "Soil enshrouds remote", "Soil covers remote", "Soil conceals remote", "Soil hides remote."], "object_replaced": ["Soil buries secluded", "Soil buries obscure.", "Soil buries isolated", "Soil buries distant", "Soil buries far-off"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Soil buries remote\n", "AffectedParaphraseMaker_gptoutput": "\n1. Dirt covers up far away places.\n2. Earth conceals distant locations.\n3. Ground hides remote areas.\n4. Subterranean material envelops distant spots.\n5. Land entombs remote regions.", "affected_paraphrase": ["Subterranean material envelops distant spots.", "Ground hides remote areas.", "Dirt covers up far away places.", "Land entombs remote regions.", "Earth conceals distant locations."]}]}
{"inputs": {"id": 88, "prompt": "a rabbit moves pebble", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "rabbit", "verb": "moves", "object": "pebble", "neg": null, "prompt_polarity_grounded": "a rabbit moves pebble"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a rabbit moves pebble. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Rabbit sees pebble. \n2. Rabbit pushes pebble.", "affected_reasoning": ["Rabbit sees pebble.", "Rabbit pushes pebble."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a rabbit moves pebble\nsubject token: rabbit\nobject token: pebble\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a cat moves pebble\n2. a dog moves pebble\n3. a bird moves pebble\n4. a fish moves pebble\n5. a mouse moves pebble\n\nQ2. Replacements:\n1. a rabbit moves stone\n2. a rabbit moves rock\n3. a rabbit moves boulder\n4. a rabbit moves gravel\n5. a rabbit moves sand", "subject_replaced": ["a cat moves pebble", "a bird moves pebble", "a dog moves pebble", "a fish moves pebble", "a mouse moves pebble"], "object_replaced": ["a rabbit moves boulder", "a rabbit moves rock", "a rabbit moves sand", "a rabbit moves gravel", "a rabbit moves stone"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a rabbit moves pebble\nsubject token: rabbit\nobject token: pebble\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A hare moves pebble, A coney moves pebble, A jackrabbit moves pebble, A cottontail moves pebble, A pika moves pebble.\n\nQ2. A rabbit scurries pebble, A rabbit hops pebble, A rabbit trots pebble, A rabbit bounds pebble, A rabbit gallops pebble.\n\nQ3. A rabbit moves stone, A rabbit moves rock, A rabbit moves gravel, A rabbit moves boulder, A rabbit moves cobble.", "subject_replaced": ["A cottontail moves pebble", "A coney moves pebble", "A pika moves pebble.", "A jackrabbit moves pebble", "A hare moves pebble"], "verb_replaced": ["A rabbit trots pebble", "A rabbit hops pebble", "A rabbit bounds pebble", "A rabbit gallops pebble.", "A rabbit scurries pebble"], "object_replaced": ["A rabbit moves stone", "A rabbit moves cobble.", "A rabbit moves rock", "A rabbit moves gravel", "A rabbit moves boulder"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a rabbit moves pebble\n", "AffectedParaphraseMaker_gptoutput": "\n1. A rabbit shifts a small stone.\n2. A rabbit displaces a pebble.\n3. A rabbit rearranges a pebble.\n4. A rabbit manipulates a pebble.\n5. A rabbit alters a pebble's position.", "affected_paraphrase": ["A rabbit alters a pebble's position.", "A rabbit displaces a pebble.", "A rabbit rearranges a pebble.", "A rabbit manipulates a pebble.", "A rabbit shifts a small stone."]}]}
{"inputs": {"id": 90, "prompt": "Hand trims pillow", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Hand", "verb": "trims", "object": "pillow", "neg": null, "prompt_polarity_grounded": "Hand does not trim pillow."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Hand does not trim pillow.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pillows are not made of hair, so they don't need to be trimmed. \n2. Trimming is a process used to shape hair, not pillows.", "affected_reasoning": ["Pillows are not made of hair, so they don't need to be trimmed.", "Trimming is process used to shape hair, not pillows."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Hand trims pillow\nsubject token: Hand\nobject token: pillow\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Foot trims pillow\n2. Car trims pillow\n3. Pen trims pillow\n4. Clock trims pillow\n5. Tree trims pillow\n\nQ2. Replacements:\n1. Hand trims chair\n2. Hand trims book\n3. Hand trims table\n4. Hand trims blanket\n5. Hand trims cup", "subject_replaced": ["Tree trims pillow", "Clock trims pillow", "Car trims pillow", "Foot trims pillow", "Pen trims pillow"], "object_replaced": ["Hand trims blanket", "Hand trims cup", "Hand trims book", "Hand trims table", "Hand trims chair"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Hand trims pillow\nsubject token: Hand\nobject token: pillow\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Fingers trims pillow\n2. Person trims pillow\n3. Worker trims pillow\n4. Craftsman trims pillow\n5. Tailor trims pillow\n\nQ2.\n1. Hand snips pillow\n2. Hand cuts pillow\n3. Hand slices pillow\n4. Hand shapes pillow\n5. Hand trims pillow\n\nQ3.\n1. Hand trims cushion\n2. Hand trims bolster\n3. Hand trims bedding\n4. Hand trims quilt\n5. Hand trims mattress", "subject_replaced": ["Person trims pillow", "Craftsman trims pillow", "Fingers trims pillow", "Worker trims pillow", "Tailor trims pillow"], "verb_replaced": ["Hand trims pillow", "Hand shapes pillow", "Hand slices pillow", "Hand cuts pillow", "Hand snips pillow"], "object_replaced": ["Hand trims bolster", "Hand trims bedding", "Hand trims quilt", "Hand trims cushion", "Hand trims mattress"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Hand trims pillow\n", "AffectedParaphraseMaker_gptoutput": "\n1. Cutting the pillow by hand\n2. Manually shaping the pillow\n3. Sculpting the pillow with one's hands\n4. Pruning the pillow with scissors\n5. Snipping the pillow with care", "affected_paraphrase": ["Manually shaping the pillow", "Snipping the pillow with care", "Sculpting the pillow with one's hands", "Pruning the pillow with scissors", "Cutting the pillow by hand"]}]}
{"inputs": {"id": 96, "prompt": "Finger hang ring", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Finger", "verb": "hang", "object": "ring", "neg": null, "prompt_polarity_grounded": "Finger not hang ring."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Finger not hang ring.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Finger can't hold ring. \n2. Ring needs something to hang on.", "affected_reasoning": ["Finger can't hold ring.", "Ring needs something to hang on."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Finger hang ring\nsubject token: Finger\nobject token: ring\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hand hang ring\n2. Foot hang ring\n3. Arm hang ring\n4. Leg hang ring\n5. Thumb hang ring\n\nQ2. Replacements:\n1. Finger hang bracelet\n2. Finger hang necklace\n3. Finger hang earring\n4. Finger hang pendant\n5. Finger hang charm", "subject_replaced": ["Arm hang ring", "Leg hang ring", "Thumb hang ring", "Hand hang ring", "Foot hang ring"], "object_replaced": ["Finger hang charm", "Finger hang necklace", "Finger hang earring", "Finger hang bracelet", "Finger hang pendant"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Finger hang ring\nsubject token: Finger\nobject token: ring\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Hand hang ring, Clasp hang ring, Grasp hang ring, Grip hang ring, Clutch hang ring\nQ2. Finger dangle ring, Finger suspend ring, Finger grasp ring, Finger clasp ring, Finger grip ring\nQ3. Finger hang bracelet, Finger hang hoop, Finger hang band, Finger hang bangle, Finger hang trinket", "subject_replaced": ["Clasp hang ring", "Hand hang ring", "Grip hang ring", "Clutch hang ring", "Grasp hang ring"], "verb_replaced": ["Finger grip ring", "Finger clasp ring", "Finger dangle ring", "Finger suspend ring", "Finger grasp ring"], "object_replaced": ["Finger hang bracelet", "Finger hang band", "Finger hang hoop", "Finger hang bangle", "Finger hang trinket"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Finger hang ring\n", "AffectedParaphraseMaker_gptoutput": "\n1. Grasp a hoop with a digit\n2. Clutch a band with a finger\n3. Grip a ring with a finger\n4. Hold a circle with a finger\n5. Clasp a ring with a digit", "affected_paraphrase": ["Grip a ring with a finger", "Hold a circle with a finger", "Clasp a ring with a digit", "Clutch a band with a finger", "Grasp a hoop with a digit"]}]}
{"inputs": {"id": 106, "prompt": "House leaks gas", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "House", "verb": "leaks", "object": "gas", "neg": null, "prompt_polarity_grounded": "House leaks gas"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "House leaks gas. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nGas is escaping from a pipe; the pipe is connected to the house.", "affected_reasoning": ["Gas is escaping from pipe; pipe is connected to house."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: House leaks gas\nsubject token: House\nobject token: gas\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Car leaks gas\n2. Tree leaks gas\n3. Boat leaks gas\n4. Plane leaks gas\n5. Door leaks gas\n\nQ2. Replacements:\n1. House leaks water\n2. House leaks electricity\n3. House leaks oil\n4. House leaks smoke\n5. House leaks fire", "subject_replaced": ["Boat leaks gas", "Car leaks gas", "Door leaks gas", "Plane leaks gas", "Tree leaks gas"], "object_replaced": ["House leaks fire", "House leaks electricity", "House leaks oil", "House leaks water", "House leaks smoke"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: House leaks gas\nsubject token: House\nobject token: gas\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Home leaks gas, Mansion leaks gas, Abode leaks gas, Dwelling leaks gas, Residence leaks gas\nQ2. House exudes gas, House emits gas, House discharges gas, House vents gas, House releases gas\nQ3. House leaks fuel, House leaks vapors, House leaks fumes, House leaks exhaust, House leaks smoke", "subject_replaced": ["Abode leaks gas", "Residence leaks gas", "Dwelling leaks gas", "Home leaks gas", "Mansion leaks gas"], "verb_replaced": ["House vents gas", "House exudes gas", "House releases gas", "House emits gas", "House discharges gas"], "object_replaced": ["House leaks exhaust", "House leaks fumes", "House leaks vapors", "House leaks fuel", "House leaks smoke"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: House leaks gas\n", "AffectedParaphraseMaker_gptoutput": "\n1. Gas is seeping out of the house.\n2. The house is emitting gas.\n3. Gas is escaping from the house.\n4. Gas is oozing from the house.\n5. The house is leaking gas.", "affected_paraphrase": ["Gas is seeping out of the house.", "Gas is escaping from the house.", "The house is emitting gas.", "Gas is oozing from the house.", "The house is leaking gas."]}]}
{"inputs": {"id": 116, "prompt": "Hay constructs boat", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Hay", "verb": "constructs", "object": "boat", "neg": null, "prompt_polarity_grounded": "Hay does not construct boat."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Hay does not construct boat.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Hay is a type of grass. \n2. Grass is not suitable for boat construction.", "affected_reasoning": ["Hay is type of grass.", "Grass is not suitable for boat construction."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Hay constructs boat\nsubject token: Hay\nobject token: boat\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Jack constructs boat\n2. She constructs boat\n3. They constructs boat\n4. We constructs boat\n5. You constructs boat\n\nQ2. Replacements:\n1. Hay constructs car\n2. Hay constructs plane\n3. Hay constructs train\n4. Hay constructs house\n5. Hay constructs tree", "subject_replaced": ["She constructs boat", "We constructs boat", "Jack constructs boat", "They constructs boat", "You constructs boat"], "object_replaced": ["Hay constructs tree", "Hay constructs train", "Hay constructs house", "Hay constructs car", "Hay constructs plane"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Hay constructs boat\nsubject token: Hay\nobject token: boat\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. He builds boat, He manufactures boat, He crafts boat, He assembles boat, He fabricates boat.\nQ2. Hay constructs ships, Hay creates ships, Hay manufactures ships, Hay assembles ships, Hay fabricates ships.\nQ3. Hay constructs vessels, Hay creates vessels, Hay manufactures vessels, Hay assembles vessels, Hay fabricates vessels.", "subject_replaced": ["He manufactures boat", "He builds boat", "He crafts boat", "He fabricates boat.", "He assembles boat"], "verb_replaced": ["Hay creates ships", "Hay assembles ships", "Hay constructs ships", "Hay fabricates ships.", "Hay manufactures ships"], "object_replaced": ["Hay constructs vessels", "Hay manufactures vessels", "Hay fabricates vessels.", "Hay assembles vessels", "Hay creates vessels"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Hay constructs boat\n", "AffectedParaphraseMaker_gptoutput": "\n1. Hay builds vessels\n2. Hay manufactures ships\n3. Hay fabricates boats\n4. Hay assembles boats\n5. Hay creates boats", "affected_paraphrase": ["Hay creates boats", "Hay builds vessels", "Hay assembles boats", "Hay manufactures ships", "Hay fabricates boats"]}]}
{"inputs": {"id": 132, "prompt": "rock flattens shirt", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "rock", "verb": "flattens", "object": "shirt", "neg": null, "prompt_polarity_grounded": "rock flattens shirt"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "rock flattens shirt. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Rock is heavy. \n2. Weight of rock presses shirt flat.", "affected_reasoning": ["Rock is heavy.", "Weight of rock presses shirt flat."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: rock flattens shirt\nsubject token: rock\nobject token: shirt\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Balloon flattens shirt\n2. Car flattens shirt\n3. Tree flattens shirt\n4. Pen flattens shirt\n5. Book flattens shirt\n\nQ2. Replacements:\n1. Rock flattens pencil\n2. Rock flattens paper\n3. Rock flattens book\n4. Rock flattens car\n5. Rock flattens balloon", "subject_replaced": ["Balloon flattens shirt", "Tree flattens shirt", "Pen flattens shirt", "Car flattens shirt", "Book flattens shirt"], "object_replaced": ["Rock flattens car", "Rock flattens paper", "Rock flattens pencil", "Rock flattens balloon", "Rock flattens book"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: rock flattens shirt\nsubject token: rock\nobject token: shirt\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Pebble flattens shirt, Stone flattens shirt, Boulder flattens shirt, Granite flattens shirt, Gravel flattens shirt.\nQ2. Rock crushes shirt, Rock smashes shirt, Rock pulverizes shirt, Rock grinds shirt, Rock demolishes shirt.\nQ3. Rock flattens blouse, Rock flattens t-shirt, Rock flattens tank top, Rock flattens sweater, Rock flattens tunic.", "subject_replaced": ["Gravel flattens shirt.", "Stone flattens shirt", "Boulder flattens shirt", "Granite flattens shirt", "Pebble flattens shirt"], "verb_replaced": ["Rock demolishes shirt.", "Rock pulverizes shirt", "Rock grinds shirt", "Rock crushes shirt", "Rock smashes shirt"], "object_replaced": ["Rock flattens blouse", "Rock flattens t-shirt", "Rock flattens tunic.", "Rock flattens sweater", "Rock flattens tank top"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: rock flattens shirt\n", "AffectedParaphraseMaker_gptoutput": "\n1. The rock smoothes out the shirt.\n2. The rock presses the shirt flat.\n3. The rock ironed the shirt.\n4. The rock flattened the shirt.\n5. The rock made the shirt even.", "affected_paraphrase": ["The rock ironed the shirt.", "The rock made the shirt even.", "The rock presses the shirt flat.", "The rock smoothes out the shirt.", "The rock flattened the shirt."]}]}
{"inputs": {"id": 133, "prompt": "the ant moves bear", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "ant", "verb": "moves", "object": "bear", "neg": null, "prompt_polarity_grounded": "The ant does not move bear."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The ant does not move bear.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Ants cannot bear weight.\n2. Bears are too heavy for ants to move.", "affected_reasoning": ["Ants cannot bear weight.", "Bears are too heavy for ants to move."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the ant moves bear\nsubject token: ant\nobject token: bear\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The cat moves bear\n2. The dog moves bear\n3. The mouse moves bear\n4. The elephant moves bear\n5. The bee moves bear\n\nQ2. Replacements:\n1. The ant moves tiger\n2. The ant moves lion\n3. The ant moves elephant\n4. The ant moves monkey\n5. The ant moves rabbit", "subject_replaced": ["The cat moves bear", "The elephant moves bear", "The dog moves bear", "The bee moves bear", "The mouse moves bear"], "object_replaced": ["The ant moves tiger", "The ant moves elephant", "The ant moves monkey", "The ant moves rabbit", "The ant moves lion"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the ant moves bear\nsubject token: ant\nobject token: bear\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The beetle moves bear, The insect moves bear, The bug moves bear, The larva moves bear, The caterpillar moves bear.\n\nQ2. The ant scurries bear, The ant strides bear, The ant crawls bear, The ant ambles bear, The ant trots bear.\n\nQ3. The ant moves cub, The ant moves cubby, The ant moves cubling, The ant moves whelp, The ant moves pup.", "subject_replaced": ["The caterpillar moves bear.", "The beetle moves bear", "The larva moves bear", "The insect moves bear", "The bug moves bear"], "verb_replaced": ["The ant strides bear", "The ant crawls bear", "The ant ambles bear", "The ant scurries bear", "The ant trots bear."], "object_replaced": ["The ant moves pup.", "The ant moves cubby", "The ant moves cubling", "The ant moves cub", "The ant moves whelp"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the ant moves bear\n", "AffectedParaphraseMaker_gptoutput": "\n1. The ant is shifting its position.\n2. The ant is relocating itself.\n3. The ant is changing its spot.\n4. The ant is traversing bear.\n5. The ant is progressing bear.", "affected_paraphrase": ["The ant is changing its spot.", "The ant is traversing bear.", "The ant is progressing bear.", "The ant is relocating itself.", "The ant is shifting its position."]}]}
{"inputs": {"id": 134, "prompt": "gorilla opens wardrobe", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "gorilla", "verb": "opens", "object": "wardrobe", "neg": null, "prompt_polarity_grounded": "gorilla opens wardrobe"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "gorilla opens wardrobe. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Gorilla sees clothes. \n2. Gorilla opens wardrobe to get clothes.", "affected_reasoning": ["Gorilla sees clothes.", "Gorilla opens wardrobe to get clothes."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: gorilla opens wardrobe\nsubject token: gorilla\nobject token: wardrobe\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant opens wardrobe\n2. Tiger opens wardrobe\n3. Lion opens wardrobe\n4. Monkey opens wardrobe\n5. Zebra opens wardrobe\n\nQ2. Replacements:\n1. Gorilla opens suitcase\n2. Gorilla opens chest\n3. Gorilla opens trunk\n4. Gorilla opens cabinet\n5. Gorilla opens box", "subject_replaced": ["Monkey opens wardrobe", "Zebra opens wardrobe", "Lion opens wardrobe", "Elephant opens wardrobe", "Tiger opens wardrobe"], "object_replaced": ["Gorilla opens suitcase", "Gorilla opens trunk", "Gorilla opens chest", "Gorilla opens box", "Gorilla opens cabinet"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: gorilla opens wardrobe\nsubject token: gorilla\nobject token: wardrobe\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Ape opens wardrobe\n2. Primate opens wardrobe\n3. Monkey opens wardrobe\n4. Orangutan opens wardrobe\n5. Chimpanzee opens wardrobe\n\nQ2.\n1. Gorilla unlocks wardrobe\n2. Gorilla shuts wardrobe\n3. Gorilla closes wardrobe\n4. Gorilla opens wardrobe\n5. Gorilla reveals wardrobe\n\nQ3.\n1. Gorilla opens closet\n2. Gorilla opens armoire\n3. Gorilla opens cabinet\n4. Gorilla opens chest\n5. Gorilla opens cupboard", "subject_replaced": ["Chimpanzee opens wardrobe", "Primate opens wardrobe", "Orangutan opens wardrobe", "Monkey opens wardrobe", "Ape opens wardrobe"], "verb_replaced": ["Gorilla reveals wardrobe", "Gorilla unlocks wardrobe", "Gorilla opens wardrobe", "Gorilla shuts wardrobe", "Gorilla closes wardrobe"], "object_replaced": ["Gorilla opens armoire", "Gorilla opens closet", "Gorilla opens chest", "Gorilla opens cupboard", "Gorilla opens cabinet"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: gorilla opens wardrobe\n", "AffectedParaphraseMaker_gptoutput": "\n1. Gorilla unlocks closet\n2. Gorilla unlocks armoire\n3. Gorilla unlocks cabinet\n4. Gorilla unlocks cupboard\n5. Gorilla unlocks storage unit", "affected_paraphrase": ["Gorilla unlocks closet", "Gorilla unlocks storage unit", "Gorilla unlocks cupboard", "Gorilla unlocks armoire", "Gorilla unlocks cabinet"]}]}
{"inputs": {"id": 152, "prompt": "a dentist clenches wool", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "dentist", "verb": "clenches", "object": "wool", "neg": null, "prompt_polarity_grounded": "a dentist clenches wool"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a dentist clenches wool. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The dentist needs to hold the wool in place.\n2. The dentist clenches the wool to keep it secure.", "affected_reasoning": ["The dentist needs to hold wool in place.", "The dentist clenches wool to keep it secure."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a dentist clenches wool\nsubject token: dentist\nobject token: wool\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A chef clenches wool\n2. A teacher clenches wool\n3. A doctor clenches wool\n4. A mechanic clenches wool\n5. A plumber clenches wool\n\nQ2. Replacements:\n1. A dentist clenches cotton\n2. A dentist clenches paper\n3. A dentist clenches leather\n4. A dentist clenches plastic\n5. A dentist clenches metal", "subject_replaced": ["A chef clenches wool", "A plumber clenches wool", "A teacher clenches wool", "A mechanic clenches wool", "A doctor clenches wool"], "object_replaced": ["A dentist clenches leather", "A dentist clenches plastic", "A dentist clenches metal", "A dentist clenches paper", "A dentist clenches cotton"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a dentist clenches wool\nsubject token: dentist\nobject token: wool\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A doctor clenches wool, an orthodontist clenches wool, a periodontist clenches wool, a prosthodontist clenches wool, a pediatric dentist clenches wool.\n\nQ2. A dentist grasps wool, a dentist grips wool, a dentist holds wool, a dentist squeezes wool, a dentist tightens wool.\n\nQ3. A dentist clenches yarn, a dentist clenches cotton, a dentist clenches flannel, a dentist clenches fleece, a dentist clenches cashmere.", "subject_replaced": ["a pediatric dentist clenches wool.", "a prosthodontist clenches wool", "A doctor clenches wool", "an orthodontist clenches wool", "a periodontist clenches wool"], "verb_replaced": ["a dentist grips wool", "a dentist squeezes wool", "A dentist grasps wool", "a dentist holds wool", "a dentist tightens wool."], "object_replaced": ["a dentist clenches fleece", "A dentist clenches yarn", "a dentist clenches cashmere.", "a dentist clenches flannel", "a dentist clenches cotton"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a dentist clenches wool\n", "AffectedParaphraseMaker_gptoutput": "\n1. A dentist grasps cotton\n2. A dentist grips wool\n3. A dentist squeezes wool\n4. A dentist holds wool\n5. A dentist tightens wool", "affected_paraphrase": ["A dentist holds wool", "A dentist grasps cotton", "A dentist tightens wool", "A dentist grips wool", "A dentist squeezes wool"]}]}
{"inputs": {"id": 153, "prompt": "man hits remote", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "man", "verb": "hits", "object": "remote", "neg": null, "prompt_polarity_grounded": "man hits remote"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "man hits remote. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Remote sends signal to TV.\n2. TV changes channel.", "affected_reasoning": ["Remote sends signal to TV.", "TV changes channel."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: man hits remote\nsubject token: man\nobject token: remote\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Woman hits remote\n2. Child hits remote\n3. Dog hits remote\n4. Cat hits remote\n5. Elephant hits remote\n\nQ2. Replacements:\n1. Man hits television\n2. Man hits chair\n3. Man hits computer\n4. Man hits book\n5. Man hits phone", "subject_replaced": ["Cat hits remote", "Elephant hits remote", "Child hits remote", "Dog hits remote", "Woman hits remote"], "object_replaced": ["Man hits book", "Man hits television", "Man hits computer", "Man hits chair", "Man hits phone"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: man hits remote\nsubject token: man\nobject token: remote\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Person hits remote, individual strikes remote, human smacks remote, male taps remote, female bangs remote.\nQ2. Man strikes remote, man smacks remote, man taps remote, man bangs remote, man thumps remote.\nQ3. Man hits control, man hits switch, man hits button, man hits device, man hits gadget.", "subject_replaced": ["human smacks remote", "female bangs remote.", "male taps remote", "Person hits remote", "individual strikes remote"], "verb_replaced": ["Man strikes remote", "man smacks remote", "man thumps remote.", "man bangs remote", "man taps remote"], "object_replaced": ["man hits gadget.", "man hits switch", "man hits button", "Man hits control", "man hits device"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: man hits remote\n", "AffectedParaphraseMaker_gptoutput": "\n1. The man pressed the remote control.\n2. The man activated the remote.\n3. The man operated the remote.\n4. The man manipulated the remote.\n5. The man operated the remote device.", "affected_paraphrase": ["The man manipulated the remote.", "The man operated the remote device.", "The man activated the remote.", "The man operated the remote.", "The man pressed the remote control."]}]}
{"inputs": {"id": 161, "prompt": "cup carries water", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "cup", "verb": "carries", "object": "water", "neg": null, "prompt_polarity_grounded": "cup carries water"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "cup carries water. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. A cup has a hollow shape.\n2. This shape allows it to hold liquid.", "affected_reasoning": ["A cup has hollow shape.", "This shape allows it to hold liquid."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: cup carries water\nsubject token: cup\nobject token: water\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Pen carries water\n2. Chair carries water\n3. Car carries water\n4. Book carries water\n5. Tree carries water\n\nQ2. Replacements:\n1. Cup carries juice\n2. Cup carries milk\n3. Cup carries soda\n4. Cup carries tea\n5. Cup carries beer", "subject_replaced": ["Pen carries water", "Chair carries water", "Tree carries water", "Car carries water", "Book carries water"], "object_replaced": ["Cup carries beer", "Cup carries milk", "Cup carries soda", "Cup carries juice", "Cup carries tea"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: cup carries water\nsubject token: cup\nobject token: water\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Mug carries water, Vessel carries water, Container carries water, Tank carries water, Pitcher carries water.\nQ2. Cup holds water, Cup contains water, Cup transports water, Cup conveys water, Cup dispenses water.\nQ3. Cup carries liquid, Cup carries fluid, Cup carries beverage, Cup carries juice, Cup carries broth.", "subject_replaced": ["Tank carries water", "Vessel carries water", "Pitcher carries water.", "Mug carries water", "Container carries water"], "verb_replaced": ["Cup holds water", "Cup conveys water", "Cup contains water", "Cup transports water", "Cup dispenses water."], "object_replaced": ["Cup carries beverage", "Cup carries juice", "Cup carries broth.", "Cup carries fluid", "Cup carries liquid"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: cup carries water\n", "AffectedParaphraseMaker_gptoutput": "\n1. Container holds liquid\n2. Mug transports liquid\n3. Vessel contains H2O\n4. Chalice conveys aqua\n5. Beaker bears aqua", "affected_paraphrase": ["Container holds liquid", "Chalice conveys aqua", "Vessel contains H2O", "Beaker bears aqua", "Mug transports liquid"]}]}
{"inputs": {"id": 165, "prompt": "the sun heats rust", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "sun", "verb": "heats", "object": "rust", "neg": null, "prompt_polarity_grounded": "the sun heats rust"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "the sun heats rust. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The sun's rays provide energy which causes molecules to move faster. \n2. This increased movement of molecules causes oxidation, which leads to rust.", "affected_reasoning": ["The sun's rays provide energy which causes molecules to move faster.", "This increased movement of molecules causes oxidation, which leads to rust."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the sun heats rust\nsubject token: sun\nobject token: rust\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The moon heats rust\n2. The wind heats rust\n3. The stars heats rust\n4. The rain heats rust\n5. The clouds heats rust\n\nQ2. Replacements:\n1. The sun heats metal\n2. The sun heats wood\n3. The sun heats stone\n4. The sun heats plastic\n5. The sun heats glass", "subject_replaced": ["The moon heats rust", "The clouds heats rust", "The wind heats rust", "The rain heats rust", "The stars heats rust"], "object_replaced": ["The sun heats wood", "The sun heats glass", "The sun heats plastic", "The sun heats metal", "The sun heats stone"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the sun heats rust\nsubject token: sun\nobject token: rust\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The star heats rust, The moon heats rust, The rays heats rust, The light heats rust, The energy heats rust.\nQ2. The sun warms rust, The sun heats up rust, The sun cooks rust, The sun bakes rust, The sun scorches rust.\nQ3. The sun heats corrosion, The sun heats oxidation, The sun heats discoloration, The sun heats erosion, The sun heats patina.", "subject_replaced": ["The moon heats rust", "The rays heats rust", "The star heats rust", "The light heats rust", "The energy heats rust."], "verb_replaced": ["The sun warms rust", "The sun scorches rust.", "The sun heats up rust", "The sun bakes rust", "The sun cooks rust"], "object_replaced": ["The sun heats discoloration", "The sun heats corrosion", "The sun heats erosion", "The sun heats patina.", "The sun heats oxidation"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the sun heats rust\n", "AffectedParaphraseMaker_gptoutput": "\n1. The sun causes rust to become warm.\n2. The sun's rays cause rust to heat up.\n3. The sun's energy causes rust to become hot.\n4. Rust is heated by the sun's rays.\n5. The sun's heat causes rust to warm.", "affected_paraphrase": ["The sun's rays cause rust to heat up.", "Rust is heated by the sun's rays.", "The sun causes rust to become warm.", "The sun's heat causes rust to warm.", "The sun's energy causes rust to become hot."]}]}
{"inputs": {"id": 168, "prompt": "Smoke masks computer", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Smoke", "verb": "masks", "object": "computer", "neg": null, "prompt_polarity_grounded": "Smoke masks computer"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Smoke masks computer. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Smoke can damage computer components, making them malfunction. \n2. Masks can filter out smoke particles, preventing them from entering the computer and causing damage.", "affected_reasoning": ["Smoke can damage computer components, making them malfunction.", "Masks can filter out smoke particles, preventing them from entering computer and causing damage."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Smoke masks computer\nsubject token: Smoke\nobject token: computer\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Glitter masks computer\n2. Rainbows masks computer\n3. Music masks computer\n4. Stars masks computer\n5. Clouds masks computer\n\nQ2. Replacements:\n1. Smoke masks television\n2. Smoke masks phone\n3. Smoke masks radio\n4. Smoke masks tablet\n5. Smoke masks laptop", "subject_replaced": ["Clouds masks computer", "Music masks computer", "Rainbows masks computer", "Stars masks computer", "Glitter masks computer"], "object_replaced": ["Smoke masks phone", "Smoke masks television", "Smoke masks radio", "Smoke masks tablet", "Smoke masks laptop"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Smoke masks computer\nsubject token: Smoke\nobject token: computer\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. Fumes masks computer\n2. Vapors masks computer\n3. Haze masks computer\n4. Pollution masks computer\n5. Smog masks computer\n\nQ2. Variants:\n1. Smoke conceals computer\n2. Shrouds masks computer\n3. Obscures masks computer\n4. Masks masks computer\n5. Covers masks computer\n\nQ3. Variants:\n1. Smoke masks laptop\n2. Smoke masks desktop\n3. Smoke masks device\n4. Smoke masks gadget\n5. Smoke masks technology", "subject_replaced": ["Haze masks computer", "Vapors masks computer", "Pollution masks computer", "Fumes masks computer", "Smog masks computer"], "verb_replaced": ["Obscures masks computer", "Covers masks computer", "Smoke conceals computer", "Shrouds masks computer", "Masks masks computer"], "object_replaced": ["Smoke masks device", "Smoke masks technology", "Smoke masks gadget", "Smoke masks desktop", "Smoke masks laptop"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Smoke masks computer\n", "AffectedParaphraseMaker_gptoutput": "\n1. Smoke screens computer\n2. Smoke conceals computer\n3. Smoke veils computer\n4. Smoke obscures computer\n5. Smoke cloaks computer", "affected_paraphrase": ["Smoke screens computer", "Smoke conceals computer", "Smoke veils computer", "Smoke obscures computer", "Smoke cloaks computer"]}]}
{"inputs": {"id": 172, "prompt": "a cup drains lake", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "cup", "verb": "drains", "object": "lake", "neg": null, "prompt_polarity_grounded": "a cup drains lake"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a cup drains lake. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The cup creates a hole in the lake's surface.\n2. The water flows out of the hole, causing the lake to drain.", "affected_reasoning": ["The cup creates hole in lake's surface.", "The water flows out of hole, causing lake to drain."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a cup drains lake\nsubject token: cup\nobject token: lake\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A balloon drains lake\n2. A spoon drains lake\n3. A hat drains lake\n4. A tree drains lake\n5. A car drains lake\n\nQ2. Replacements:\n1. A cup drains ocean\n2. A cup drains river\n3. A cup drains mountain\n4. A cup drains sky\n5. A cup drains forest", "subject_replaced": ["A spoon drains lake", "A balloon drains lake", "A hat drains lake", "A car drains lake", "A tree drains lake"], "object_replaced": ["A cup drains forest", "A cup drains ocean", "A cup drains river", "A cup drains mountain", "A cup drains sky"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a cup drains lake\nsubject token: cup\nobject token: lake\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A mug drains lake, A vessel drains lake, A container drains lake, A bowl drains lake, A pitcher drains lake.\n\nQ2. A cup empties lake, A cup siphons lake, A cup depletes lake, A cup evaporates lake, A cup withdraws lake.\n\nQ3. A cup drains pond, A cup drains reservoir, A cup drains sea, A cup drains river, A cup drains ocean.", "subject_replaced": ["A mug drains lake", "A container drains lake", "A pitcher drains lake.", "A vessel drains lake", "A bowl drains lake"], "verb_replaced": ["A cup empties lake", "A cup withdraws lake.", "A cup siphons lake", "A cup depletes lake", "A cup evaporates lake"], "object_replaced": ["A cup drains pond", "A cup drains reservoir", "A cup drains sea", "A cup drains river", "A cup drains ocean."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a cup drains lake\n", "AffectedParaphraseMaker_gptoutput": "\n1. A vessel empties the lake.\n2. A container depletes the lake.\n3. A receptacle empties the lake.\n4. A mug empties the lake.\n5. A bowl drains the lake.", "affected_paraphrase": ["A vessel empties the lake.", "A bowl drains the lake.", "A container depletes the lake.", "A receptacle empties the lake.", "A mug empties the lake."]}]}
{"inputs": {"id": 173, "prompt": "the infant chokes gorilla", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "infant", "verb": "chokes", "object": "gorilla", "neg": null, "prompt_polarity_grounded": "The infant does not choke gorilla."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The infant does not choke gorilla.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Gorillas are not food, so the infant cannot choke on them. \n2. Infants can only choke on food, not on animals.", "affected_reasoning": ["Gorillas are not food, so infant cannot choke on them.", "Infants can only choke on food, not on animals."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the infant chokes gorilla\nsubject token: infant\nobject token: gorilla\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The astronaut chokes gorilla\n2. The toddler chokes gorilla\n3. The teenager chokes gorilla\n4. The adult chokes gorilla\n5. The senior chokes gorilla\n\nQ2. Replacements:\n1. The infant chokes elephant\n2. The infant chokes lion\n3. The infant chokes bear\n4. The infant chokes hippo\n5. The infant chokes rhino", "subject_replaced": ["The toddler chokes gorilla", "The astronaut chokes gorilla", "The teenager chokes gorilla", "The adult chokes gorilla", "The senior chokes gorilla"], "object_replaced": ["The infant chokes rhino", "The infant chokes bear", "The infant chokes elephant", "The infant chokes lion", "The infant chokes hippo"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the infant chokes gorilla\nsubject token: infant\nobject token: gorilla\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The baby chokes gorilla, the toddler chokes gorilla, the infant chokes ape, the newborn chokes gorilla, the infant chokes monkey.\nQ2. The infant gags gorilla, the infant chokes strangles gorilla, the infant swallows gorilla, the infant gasps gorilla, the infant clasps gorilla.\nQ3. The infant chokes primate, the infant chokes simian, the infant chokes monkey, the infant chokes ape, the infant chokes baboon.", "subject_replaced": ["the newborn chokes gorilla", "the toddler chokes gorilla", "the infant chokes ape", "the infant chokes monkey.", "The baby chokes gorilla"], "verb_replaced": ["The infant gags gorilla", "the infant clasps gorilla.", "the infant chokes strangles gorilla", "the infant swallows gorilla", "the infant gasps gorilla"], "object_replaced": ["the infant chokes ape", "the infant chokes monkey", "The infant chokes primate", "the infant chokes simian", "the infant chokes baboon."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the infant chokes gorilla\n", "AffectedParaphraseMaker_gptoutput": "\n1. The baby is having difficulty breathing due to the gorilla.\n2. The gorilla is causing the infant to struggle for air.\n3. The gorilla is making it hard for the baby to breathe.\n4. The gorilla is causing the infant to choke.\n5. The gorilla is obstructing the infant's breathing.", "affected_paraphrase": ["The gorilla is causing the infant to struggle for air.", "The gorilla is obstructing the infant's breathing.", "The gorilla is causing the infant to choke.", "The baby is having difficulty breathing due to the gorilla.", "The gorilla is making it hard for the baby to breathe."]}]}
{"inputs": {"id": 182, "prompt": "a pen etches cake", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "pen", "verb": "etches", "object": "cake", "neg": null, "prompt_polarity_grounded": "a pen etches cake"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a pen etches cake. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pen touches cake.\n2. Cake is etched.", "affected_reasoning": ["Pen touches cake.", "Cake is etched."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a pen etches cake\nsubject token: pen\nobject token: cake\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a hammer etches cake\n2. a pencil etches cake\n3. a brush etches cake\n4. a knife etches cake\n5. a spoon etches cake\n\nQ2. Replacements:\n1. a pen etches ice\n2. a pen etches bread\n3. a pen etches soup\n4. a pen etches pizza\n5. a pen etches candy", "subject_replaced": ["a hammer etches cake", "a pencil etches cake", "a spoon etches cake", "a brush etches cake", "a knife etches cake"], "object_replaced": ["a pen etches pizza", "a pen etches soup", "a pen etches candy", "a pen etches bread", "a pen etches ice"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a pen etches cake\nsubject token: pen\nobject token: cake\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A pencil etches cake, a marker etches cake, a stylus etches cake, a crayon etches cake, a quill etches cake.\nQ2. A pen carves cake, a pen engraves cake, a pen inscribes cake, a pen scratches cake, a pen scribes cake.\nQ3. A pen etches frosting, a pen etches mousse, a pen etches sponge, a pen etches tart, a pen etches pudding.", "subject_replaced": ["a crayon etches cake", "a stylus etches cake", "a marker etches cake", "A pencil etches cake", "a quill etches cake."], "verb_replaced": ["A pen carves cake", "a pen engraves cake", "a pen scratches cake", "a pen scribes cake.", "a pen inscribes cake"], "object_replaced": ["a pen etches sponge", "A pen etches frosting", "a pen etches tart", "a pen etches mousse", "a pen etches pudding."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a pen etches cake\n", "AffectedParaphraseMaker_gptoutput": "\n1. A pen carves into cake\n2. A pen inscribes cake\n3. A pen engraves cake\n4. A pen etches into cake\n5. A pen indents cake", "affected_paraphrase": ["A pen etches into cake", "A pen engraves cake", "A pen inscribes cake", "A pen indents cake", "A pen carves into cake"]}]}
{"inputs": {"id": 187, "prompt": "Dog plucks pumpkin", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Dog", "verb": "plucks", "object": "pumpkin", "neg": null, "prompt_polarity_grounded": "Dog does not pluck pumpkin."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Dog does not pluck pumpkin.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Dogs do not have the physical ability to pluck pumpkins.\n2. Pumpkins are too large and heavy for a dog to pick up.", "affected_reasoning": ["Dogs do not have physical ability to pluck pumpkins.", "Pumpkins are too large and heavy for dog to pick up."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Dog plucks pumpkin\nsubject token: Dog\nobject token: pumpkin\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Cat plucks pumpkin\n2. Elephant plucks pumpkin\n3. Bird plucks pumpkin\n4. Fish plucks pumpkin\n5. Mouse plucks pumpkin\n\nQ2. Replacements:\n1. Dog plucks apple\n2. Dog plucks banana\n3. Dog plucks orange\n4. Dog plucks strawberry\n5. Dog plucks watermelon", "subject_replaced": ["Cat plucks pumpkin", "Elephant plucks pumpkin", "Fish plucks pumpkin", "Mouse plucks pumpkin", "Bird plucks pumpkin"], "object_replaced": ["Dog plucks orange", "Dog plucks strawberry", "Dog plucks watermelon", "Dog plucks banana", "Dog plucks apple"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Dog plucks pumpkin\nsubject token: Dog\nobject token: pumpkin\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Canine plucks pumpkin, Hound plucks pumpkin, Pup plucks pumpkin, Mutt plucks pumpkin, Puppy plucks pumpkin\nQ2. Dog snatches pumpkin, Dog grabs pumpkin, Dog seizes pumpkin, Dog clutches pumpkin, Dog plucks pumpkin\nQ3. Dog plucks squash, Dog plucks gourd, Dog plucks melon, Dog plucks cucurbit, Dog plucks fruit", "subject_replaced": ["Puppy plucks pumpkin", "Canine plucks pumpkin", "Hound plucks pumpkin", "Pup plucks pumpkin", "Mutt plucks pumpkin"], "verb_replaced": ["Dog grabs pumpkin", "Dog clutches pumpkin", "Dog snatches pumpkin", "Dog seizes pumpkin", "Dog plucks pumpkin"], "object_replaced": ["Dog plucks gourd", "Dog plucks melon", "Dog plucks squash", "Dog plucks fruit", "Dog plucks cucurbit"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Dog plucks pumpkin\n", "AffectedParaphraseMaker_gptoutput": "\n1. Canine harvests squash\n2. Hound plucks gourd\n3. Mutt reaps pumpkin\n4. Pooch plucks pumpkin\n5. Fido collects pumpkin", "affected_paraphrase": ["Mutt reaps pumpkin", "Hound plucks gourd", "Fido collects pumpkin", "Pooch plucks pumpkin", "Canine harvests squash"]}]}
{"inputs": {"id": 189, "prompt": "canoe capsize rabbit", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "canoe", "verb": "capsize", "object": "rabbit", "neg": null, "prompt_polarity_grounded": "Canoe not capsize rabbit."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Canoe not capsize rabbit.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Canoeing requires balance;\n2. Rabbits cannot balance in a canoe.", "affected_reasoning": ["Canoeing requires balance;", "Rabbits cannot balance in canoe."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: canoe capsize rabbit\nsubject token: canoe\nobject token: rabbit\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hammer capsize rabbit\n2. Bicycle capsize rabbit\n3. Book capsize rabbit\n4. Pen capsize rabbit\n5. Chair capsize rabbit\n\nQ2. Replacements:\n1. Canoe capsize dog\n2. Canoe capsize cat\n3. Canoe capsize bird\n4. Canoe capsize fish\n5. Canoe capsize mouse", "subject_replaced": ["Pen capsize rabbit", "Bicycle capsize rabbit", "Hammer capsize rabbit", "Chair capsize rabbit", "Book capsize rabbit"], "object_replaced": ["Canoe capsize mouse", "Canoe capsize dog", "Canoe capsize fish", "Canoe capsize bird", "Canoe capsize cat"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: canoe capsize rabbit\nsubject token: canoe\nobject token: rabbit\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Boat capsize rabbit, Kayak capsize rabbit, Raft capsize rabbit, Dinghy capsize rabbit, Paddle capsize rabbit.\nQ2. Canoe overturn rabbit, Canoe flip rabbit, Canoe topple rabbit, Canoe rock rabbit, Canoe sway rabbit.\nQ3. Canoe capsize hare, Canoe capsize bunny, Canoe capsize coney, Canoe capsize jackrabbit, Canoe capsize pika.", "subject_replaced": ["Raft capsize rabbit", "Kayak capsize rabbit", "Dinghy capsize rabbit", "Paddle capsize rabbit.", "Boat capsize rabbit"], "verb_replaced": ["Canoe overturn rabbit", "Canoe flip rabbit", "Canoe topple rabbit", "Canoe rock rabbit", "Canoe sway rabbit."], "object_replaced": ["Canoe capsize bunny", "Canoe capsize pika.", "Canoe capsize jackrabbit", "Canoe capsize hare", "Canoe capsize coney"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: canoe capsize rabbit\n", "AffectedParaphraseMaker_gptoutput": "\n1. Upset of a canoe with a rabbit inside\n2. Tipping over of a canoe with a rabbit inside\n3. Overturning of a canoe with a rabbit inside\n4. Flipping of a canoe with a rabbit inside\n5. Inversion of a canoe with a rabbit inside", "affected_paraphrase": ["Upset of a canoe with a rabbit inside", "Overturning of a canoe with a rabbit inside", "Tipping over of a canoe with a rabbit inside", "Flipping of a canoe with a rabbit inside", "Inversion of a canoe with a rabbit inside"]}]}
{"inputs": {"id": 192, "prompt": "girl breeds horse", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "girl", "verb": "breeds", "object": "horse", "neg": null, "prompt_polarity_grounded": "girl breeds horse"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "girl breeds horse. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Horse and mule are closely related.\n2. Mule is a hybrid of a horse and a donkey.", "affected_reasoning": ["Horse and mule are closely related.", "Mule is hybrid of horse and donkey."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: girl breeds horse\nsubject token: girl\nobject token: horse\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Boy breeds horse\n2. Child breeds horse\n3. Woman breeds horse\n4. Lady breeds horse\n5. Person breeds horse\n\nQ2. Replacements:\n1. Girl breeds dog\n2. Girl breeds cat\n3. Girl breeds bird\n4. Girl breeds rabbit\n5. Girl breeds fish", "subject_replaced": ["Woman breeds horse", "Lady breeds horse", "Child breeds horse", "Person breeds horse", "Boy breeds horse"], "object_replaced": ["Girl breeds rabbit", "Girl breeds dog", "Girl breeds bird", "Girl breeds cat", "Girl breeds fish"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: girl breeds horse\nsubject token: girl\nobject token: horse\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. Woman breeds horse\n2. Lady breeds horse\n3. Female breeds horse\n4. Maiden breeds horse\n5. Girl breeds pony\n\nQ2. Variants:\n1. Girl rears horse\n2. Girl raises horse\n3. Girl breeds horse\n4. Girl trains horse\n5. Girl nurtures horse\n\nQ3. Variants:\n1. Girl breeds stallion\n2. Girl breeds colt\n3. Girl breeds foal\n4. Girl breeds mare\n5. Girl breeds gelding", "subject_replaced": ["Woman breeds horse", "Female breeds horse", "Lady breeds horse", "Maiden breeds horse", "Girl breeds pony"], "verb_replaced": ["Girl breeds horse", "Girl trains horse", "Girl rears horse", "Girl raises horse", "Girl nurtures horse"], "object_replaced": ["Girl breeds mare", "Girl breeds foal", "Girl breeds stallion", "Girl breeds gelding", "Girl breeds colt"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: girl breeds horse\n", "AffectedParaphraseMaker_gptoutput": "\n1. Female raises equine\n2. Woman nurtures steed\n3. Maiden cultivates equine\n4. Lass propagates horse\n5. Dam propagates equine", "affected_paraphrase": ["Lass propagates horse", "Female raises equine", "Dam propagates equine", "Woman nurtures steed", "Maiden cultivates equine"]}]}
{"inputs": {"id": 194, "prompt": "a lion swallows dog", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "lion", "verb": "swallows", "object": "dog", "neg": null, "prompt_polarity_grounded": "a lion swallows dog"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a lion swallows dog. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Lion is a predator. \n2. Predators eat other animals.", "affected_reasoning": ["Lion is predator.", "Predators eat other animals."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a lion swallows dog\nsubject token: lion\nobject token: dog\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a bear swallows dog\n2. a giraffe swallows dog\n3. a crocodile swallows dog\n4. a hippo swallows dog\n5. a tiger swallows dog\n\nQ2. Replacements:\n1. a lion swallows cat\n2. a lion swallows mouse\n3. a lion swallows bird\n4. a lion swallows fish\n5. a lion swallows rabbit", "subject_replaced": ["a giraffe swallows dog", "a hippo swallows dog", "a crocodile swallows dog", "a tiger swallows dog", "a bear swallows dog"], "object_replaced": ["a lion swallows mouse", "a lion swallows fish", "a lion swallows rabbit", "a lion swallows bird", "a lion swallows cat"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a lion swallows dog\nsubject token: lion\nobject token: dog\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A tiger swallows dog, A panther swallows dog, A cougar swallows dog, A cheetah swallows dog, A jaguar swallows dog.\n\nQ2. A lion devours dog, A lion consumes dog, A lion ingests dog, A lion gobbles dog, A lion eats dog.\n\nQ3. A lion swallows puppy, A lion swallows mutt, A lion swallows terrier, A lion swallows poodle, A lion swallows hound.", "subject_replaced": ["A cheetah swallows dog", "A cougar swallows dog", "A tiger swallows dog", "A jaguar swallows dog.", "A panther swallows dog"], "verb_replaced": ["A lion gobbles dog", "A lion eats dog.", "A lion consumes dog", "A lion devours dog", "A lion ingests dog"], "object_replaced": ["A lion swallows hound.", "A lion swallows mutt", "A lion swallows poodle", "A lion swallows puppy", "A lion swallows terrier"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a lion swallows dog\n", "AffectedParaphraseMaker_gptoutput": "\n1. A canine is consumed by a lion.\n2. A lion devours a pup.\n3. A lion gulps down a pooch.\n4. A lion ingests a canine.\n5. A lion gobbles up a dog.", "affected_paraphrase": ["A lion gobbles up a dog.", "A canine is consumed by a lion.", "A lion devours a pup.", "A lion gulps down a pooch.", "A lion ingests a canine."]}]}
{"inputs": {"id": 198, "prompt": "a pipe vented air", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "pipe", "verb": "vented", "object": "air", "neg": null, "prompt_polarity_grounded": "a pipe vented air"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a pipe vented air. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Air is drawn into the pipe by a fan; \n2. The air is then vented out of the pipe.", "affected_reasoning": ["Air is drawn into pipe by fan;", "The air is then vented out of pipe."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a pipe vented air\nsubject token: pipe\nobject token: air\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a balloon vented air\n2. a ladder vented air\n3. a spoon vented air\n4. a chair vented air\n5. a book vented air\n\nQ2. Replacements:\n1. a pipe vented water\n2. a pipe vented fire\n3. a pipe vented smoke\n4. a pipe vented soil\n5. a pipe vented glass", "subject_replaced": ["a balloon vented air", "a ladder vented air", "a spoon vented air", "a book vented air", "a chair vented air"], "object_replaced": ["a pipe vented fire", "a pipe vented soil", "a pipe vented water", "a pipe vented glass", "a pipe vented smoke"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a pipe vented air\nsubject token: pipe\nobject token: air\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A tube vented air, A conduit vented air, A duct vented air, A channel vented air, A hose vented air.\nQ2. A pipe expelled air, A pipe released air, A pipe discharged air, A pipe vented out air, A pipe exhaled air.\nQ3. A pipe vented atmosphere, A pipe vented oxygen, A pipe vented vapor, A pipe vented gas, A pipe vented wind.", "subject_replaced": ["A conduit vented air", "A channel vented air", "A duct vented air", "A hose vented air.", "A tube vented air"], "verb_replaced": ["A pipe vented out air", "A pipe discharged air", "A pipe expelled air", "A pipe released air", "A pipe exhaled air."], "object_replaced": ["A pipe vented atmosphere", "A pipe vented wind.", "A pipe vented oxygen", "A pipe vented vapor", "A pipe vented gas"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a pipe vented air\n", "AffectedParaphraseMaker_gptoutput": "\n1. An air duct that releases air\n2. A tube that expels air\n3. A conduit that vents air\n4. A channel that lets out air\n5. An exhaust pipe for air", "affected_paraphrase": ["A conduit that vents air", "An exhaust pipe for air", "A tube that expels air", "An air duct that releases air", "A channel that lets out air"]}]}
{"inputs": {"id": 209, "prompt": "air chills water", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "air", "verb": "chills", "object": "water", "neg": null, "prompt_polarity_grounded": "air chills water"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "air chills water. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nHeat energy is removed from the air, causing the air to cool. The cooler air causes the water to cool as well.", "affected_reasoning": ["Heat energy is removed from air, causing air to cool", "The cooler air causes water to cool as well."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: air chills water\nsubject token: air\nobject token: water\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Fire chills water\n2. Wind chills water\n3. Sun chills water\n4. Snow chills water\n5. Rain chills water\n\nQ2. Replacements:\n1. Air chills earth\n2. Air chills fire\n3. Air chills ice\n4. Air chills metal\n5. Air chills stone", "subject_replaced": ["Fire chills water", "Snow chills water", "Wind chills water", "Rain chills water", "Sun chills water"], "object_replaced": ["Air chills stone", "Air chills earth", "Air chills fire", "Air chills ice", "Air chills metal"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: air chills water\nsubject token: air\nobject token: water\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. Wind chills water\n2. Breeze chills water\n3. Gust chills water\n4. Zephyr chills water\n5. Draft chills water\n\nQ2. Variants:\n1. Air cools water\n2. Air freezes water\n3. Air condenses water\n4. Air evaporates water\n5. Air warms water\n\nQ3. Variants:\n1. Air chills liquid\n2. Air chills ice\n3. Air chills moisture\n4. Air chills dew\n5. Air chills droplets", "subject_replaced": ["Draft chills water", "Wind chills water", "Breeze chills water", "Gust chills water", "Zephyr chills water"], "verb_replaced": ["Air cools water", "Air freezes water", "Air warms water", "Air evaporates water", "Air condenses water"], "object_replaced": ["Air chills dew", "Air chills ice", "Air chills moisture", "Air chills liquid", "Air chills droplets"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: air chills water\n", "AffectedParaphraseMaker_gptoutput": "\n1. The air causes the water to become cold.\n2. The air temperature reduces the warmth of the water.\n3. The air temperature cools the water.\n4. The air temperature lowers the temperature of the water.\n5. The air temperature makes the water colder.", "affected_paraphrase": ["The air temperature cools the water.", "The air temperature reduces the warmth of the water.", "The air temperature lowers the temperature of the water.", "The air causes the water to become cold.", "The air temperature makes the water colder."]}]}
{"inputs": {"id": 217, "prompt": "Student knits carpet", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Student", "verb": "knits", "object": "carpet", "neg": null, "prompt_polarity_grounded": "Student knits carpet"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Student knits carpet. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Student needs a carpet. \n2. Student decides to knit one.", "affected_reasoning": ["Student needs carpet.", "Student decides to knit one."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Student knits carpet\nsubject token: Student\nobject token: carpet\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Chef knits carpet\n2. Teacher knits carpet\n3. Child knits carpet\n4. Artist knits carpet\n5. Musician knits carpet\n\nQ2. Replacements:\n1. Student knits pillow\n2. Student knits blanket\n3. Student knits rug\n4. Student knits quilt\n5. Student knits tapestry", "subject_replaced": ["Chef knits carpet", "Musician knits carpet", "Child knits carpet", "Artist knits carpet", "Teacher knits carpet"], "object_replaced": ["Student knits pillow", "Student knits quilt", "Student knits blanket", "Student knits tapestry", "Student knits rug"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Student knits carpet\nsubject token: Student\nobject token: carpet\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Pupil knits carpet, Learner knits carpet, Scholar knits carpet, Apprentice knits carpet, Student knits carpet.\nQ2. Student crochets carpet, Student weaves carpet, Student stitches carpet, Student braids carpet, Student loops carpet.\nQ3. Student knits rug, Student knits mat, Student knits tapestry, Student knits blanket, Student knits throw.", "subject_replaced": ["Scholar knits carpet", "Apprentice knits carpet", "Pupil knits carpet", "Student knits carpet.", "Learner knits carpet"], "verb_replaced": ["Student crochets carpet", "Student loops carpet.", "Student braids carpet", "Student stitches carpet", "Student weaves carpet"], "object_replaced": ["Student knits throw.", "Student knits blanket", "Student knits tapestry", "Student knits mat", "Student knits rug"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Student knits carpet\n", "AffectedParaphraseMaker_gptoutput": "\n1. Scholar crochets rug\n2. Learner weaves mat\n3. Pupil stitches floor covering\n4. Apprentice creates tapestry\n5. Apprentice constructs carpeting", "affected_paraphrase": ["Pupil stitches floor covering", "Learner weaves mat", "Apprentice constructs carpeting", "Scholar crochets rug", "Apprentice creates tapestry"]}]}
{"inputs": {"id": 224, "prompt": "a woman clips dog", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "woman", "verb": "clips", "object": "dog", "neg": null, "prompt_polarity_grounded": "A woman does not clip dog."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A woman does not clip dog.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Women do not have the physical strength to clip a dog's nails. \n2. Clipping a dog's nails requires a strong grip and sharp clippers.", "affected_reasoning": ["Women do not have physical strength to clip dog's nails.", "Clipping dog's nails requires strong grip and sharp clippers."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a woman clips dog\nsubject token: woman\nobject token: dog\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A tree clips dog\n2. A mountain clips dog\n3. A river clips dog\n4. A cloud clips dog\n5. A star clips dog\n\nQ2. Replacements:\n1. A woman clips cat\n2. A woman clips bird\n3. A woman clips fish\n4. A woman clips elephant\n5. A woman clips rabbit", "subject_replaced": ["A mountain clips dog", "A star clips dog", "A cloud clips dog", "A river clips dog", "A tree clips dog"], "object_replaced": ["A woman clips rabbit", "A woman clips bird", "A woman clips elephant", "A woman clips fish", "A woman clips cat"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a woman clips dog\nsubject token: woman\nobject token: dog\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A female clips dog, a girl clips dog, a lady clips dog, a woman trims dog, a female grooms dog.\nQ2. A woman clips canine, a woman snips dog, a woman cuts dog, a woman trims dog, a woman shears dog.\nQ3. A woman clips pup, a woman clips puppy, a woman clips hound, a woman clips terrier, a woman clips mutt.", "subject_replaced": ["a woman trims dog", "a lady clips dog", "A female clips dog", "a girl clips dog", "a female grooms dog."], "verb_replaced": ["a woman trims dog", "a woman cuts dog", "a woman snips dog", "A woman clips canine", "a woman shears dog."], "object_replaced": ["a woman clips puppy", "a woman clips terrier", "A woman clips pup", "a woman clips hound", "a woman clips mutt."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a woman clips dog\n", "AffectedParaphraseMaker_gptoutput": "\n1. A female fastens the canine.\n2. A female secures the pooch.\n3. A female binds the pup.\n4. A female ties the hound.\n5. A female fastens the hound.", "affected_paraphrase": ["A female fastens the canine.", "A female fastens the hound.", "A female binds the pup.", "A female secures the pooch.", "A female ties the hound."]}]}
{"inputs": {"id": 226, "prompt": "Knife digs bike", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Knife", "verb": "digs", "object": "bike", "neg": null, "prompt_polarity_grounded": "Knife digs bike"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Knife digs bike. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nKnife wants to ride a bike. Knife needs to dig a bike out of the ground.", "affected_reasoning": ["Knife wants to ride bike", "Knife needs to dig bike out of ground."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Knife digs bike\nsubject token: Knife\nobject token: bike\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1.\n1. Hammer digs bike\n2. Pencil digs bike\n3. Fork digs bike\n4. Spoon digs bike\n5. Ruler digs bike\n\nQ2.\n1. Knife digs car\n2. Knife digs tree\n3. Knife digs house\n4. Knife digs book\n5. Knife digs chair", "subject_replaced": ["Fork digs bike", "Ruler digs bike", "Spoon digs bike", "Pencil digs bike", "Hammer digs bike"], "object_replaced": ["Knife digs tree", "Knife digs house", "Knife digs car", "Knife digs chair", "Knife digs book"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Knife digs bike\nsubject token: Knife\nobject token: bike\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Dagger digs bike, Scimitar digs bike, Blade digs bike, Cutlass digs bike, Machete digs bike.\nQ2. Knife burrows bike, Knife excavates bike, Knife plows bike, Knife scoops bike, Knife shovels bike.\nQ3. Knife digs bicycle, Knife digs motorbike, Knife digs tricycle, Knife digs scooter, Knife digs moped.", "subject_replaced": ["Blade digs bike", "Cutlass digs bike", "Scimitar digs bike", "Machete digs bike.", "Dagger digs bike"], "verb_replaced": ["Knife burrows bike", "Knife excavates bike", "Knife scoops bike", "Knife plows bike", "Knife shovels bike."], "object_replaced": ["Knife digs moped.", "Knife digs motorbike", "Knife digs tricycle", "Knife digs bicycle", "Knife digs scooter"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Knife digs bike\n", "AffectedParaphraseMaker_gptoutput": "\n1. The knife punctures the bicycle.\n2. The knife pierces the bicycle.\n3. The knife penetrates the bicycle.\n4. The knife stabs the bicycle.\n5. The knife slices the bicycle.", "affected_paraphrase": ["The knife slices the bicycle.", "The knife stabs the bicycle.", "The knife pierces the bicycle.", "The knife penetrates the bicycle.", "The knife punctures the bicycle."]}]}
{"inputs": {"id": 229, "prompt": "Pipe puffs air", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Pipe", "verb": "puffs", "object": "air", "neg": null, "prompt_polarity_grounded": "Pipe puffs air"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Pipe puffs air. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Air is forced through a pipe.\n2. This causes the air to puff out.", "affected_reasoning": ["Air is forced through pipe.", "This causes air to puff out."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Pipe puffs air\nsubject token: Pipe\nobject token: air\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hammer puffs air\n2. Car puffs air\n3. Pen puffs air\n4. Clock puffs air\n5. Tree puffs air\n\nQ2. Replacements:\n1. Pipe puffs water\n2. Pipe puffs fire\n3. Pipe puffs earth\n4. Pipe puffs smoke\n5. Pipe puffs wind", "subject_replaced": ["Car puffs air", "Hammer puffs air", "Tree puffs air", "Clock puffs air", "Pen puffs air"], "object_replaced": ["Pipe puffs wind", "Pipe puffs smoke", "Pipe puffs water", "Pipe puffs fire", "Pipe puffs earth"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Pipe puffs air\nsubject token: Pipe\nobject token: air\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Tube emits air\n2. Conduit exhales air\n3. Ventilator blows air\n4. Duct circulates air\n5. Channel pumps air\n\nQ2.\n1. Pipe puffs up air\n2. Pipe releases air\n3. Pipe propels air\n4. Pipe vents air\n5. Pipe disperses air\n\nQ3.\n1. Pipe puffs oxygen\n2. Pipe puffs vapor\n3. Pipe puffs wind\n4. Pipe puffs breeze\n5. Pipe puffs draft", "subject_replaced": ["Ventilator blows air", "Channel pumps air", "Tube emits air", "Duct circulates air", "Conduit exhales air"], "verb_replaced": ["Pipe vents air", "Pipe releases air", "Pipe puffs up air", "Pipe propels air", "Pipe disperses air"], "object_replaced": ["Pipe puffs wind", "Pipe puffs draft", "Pipe puffs vapor", "Pipe puffs breeze", "Pipe puffs oxygen"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Pipe puffs air\n", "AffectedParaphraseMaker_gptoutput": "\n1. Pipe emits air\n2. Pipe releases air\n3. Pipe expels air\n4. Pipe blows air\n5. Pipe exhales air", "affected_paraphrase": ["Pipe releases air", "Pipe blows air", "Pipe expels air", "Pipe exhales air", "Pipe emits air"]}]}
{"inputs": {"id": 231, "prompt": "Marker fuses shirt", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Marker", "verb": "fuses", "object": "shirt", "neg": null, "prompt_polarity_grounded": "Marker does not fuse shirt."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Marker does not fuse shirt.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Marker is a writing tool. \n2. Writing tools are used to write on paper, not fabric.", "affected_reasoning": ["Marker is writing tool.", "Writing tools are used to write on paper, not fabric."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Marker fuses shirt\nsubject token: Marker\nobject token: shirt\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hammer fuses shirt\n2. Pencil fuses shirt\n3. Ruler fuses shirt\n4. Glue fuses shirt\n5. Scissors fuses shirt\n\nQ2. Replacements:\n1. Marker fuses paper\n2. Marker fuses pencil\n3. Marker fuses glue\n4. Marker fuses eraser\n5. Marker fuses scissors", "subject_replaced": ["Scissors fuses shirt", "Hammer fuses shirt", "Glue fuses shirt", "Ruler fuses shirt", "Pencil fuses shirt"], "object_replaced": ["Marker fuses pencil", "Marker fuses paper", "Marker fuses eraser", "Marker fuses scissors", "Marker fuses glue"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Marker fuses shirt\nsubject token: Marker\nobject token: shirt\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Pen fuses shirt, Crayon fuses shirt, Highlighter fuses shirt, Chalk fuses shirt, Paintbrush fuses shirt.\nQ2. Marker merges shirt, Marker combines shirt, Marker joins shirt, Marker adheres shirt, Marker attaches shirt.\nQ3. Marker fuses blouse, Marker fuses t-shirt, Marker fuses tank top, Marker fuses dress shirt, Marker fuses sweater.", "subject_replaced": ["Paintbrush fuses shirt.", "Chalk fuses shirt", "Crayon fuses shirt", "Highlighter fuses shirt", "Pen fuses shirt"], "verb_replaced": ["Marker attaches shirt.", "Marker joins shirt", "Marker adheres shirt", "Marker combines shirt", "Marker merges shirt"], "object_replaced": ["Marker fuses sweater.", "Marker fuses t-shirt", "Marker fuses dress shirt", "Marker fuses blouse", "Marker fuses tank top"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Marker fuses shirt\n", "AffectedParaphraseMaker_gptoutput": "\n1. Marker combines shirt\n2. Marker melds shirt\n3. Marker unites shirt\n4. Marker joins shirt\n5. Marker amalgamates shirt", "affected_paraphrase": ["Marker unites shirt", "Marker joins shirt", "Marker melds shirt", "Marker amalgamates shirt", "Marker combines shirt"]}]}
{"inputs": {"id": 239, "prompt": "bird fishes pumpkin", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "bird", "verb": "fishes", "object": "pumpkin", "neg": null, "prompt_polarity_grounded": "bird fishes pumpkin"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "bird fishes pumpkin. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nFish eat food. Pumpkin is food.", "affected_reasoning": ["Fish eat food", "Pumpkin is food."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: bird fishes pumpkin\nsubject token: bird\nobject token: pumpkin\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. \n1. text: car fishes pumpkin\n2. text: tree fishes pumpkin\n3. text: dog fishes pumpkin\n4. text: house fishes pumpkin\n5. text: boat fishes pumpkin\n\nQ2.\n1. text: bird fishes apple\n2. text: bird fishes banana\n3. text: bird fishes orange\n4. text: bird fishes strawberry\n5. text: bird fishes grape", "subject_replaced": ["dog fishes pumpkin", "tree fishes pumpkin", "boat fishes pumpkin", "house fishes pumpkin", "car fishes pumpkin"], "object_replaced": ["bird fishes banana", "bird fishes orange", "bird fishes grape", "bird fishes apple", "bird fishes strawberry"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: bird fishes pumpkin\nsubject token: bird\nobject token: pumpkin\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Eagle fishes pumpkin\n2. Hawk fishes pumpkin\n3. Falcon fishes pumpkin\n4. Pigeon fishes pumpkin\n5. Dove fishes pumpkin\n\nQ2.\n1. Bird catches pumpkin\n2. Bird grabs pumpkin\n3. Bird snatches pumpkin\n4. Bird obtains pumpkin\n5. Bird acquires pumpkin\n\nQ3.\n1. Bird fishes squash\n2. Bird fishes gourd\n3. Bird fishes melon\n4. Bird fishes cucumber\n5. Bird fishes marrow", "subject_replaced": ["Hawk fishes pumpkin", "Falcon fishes pumpkin", "Eagle fishes pumpkin", "Pigeon fishes pumpkin", "Dove fishes pumpkin"], "verb_replaced": ["Bird obtains pumpkin", "Bird acquires pumpkin", "Bird catches pumpkin", "Bird grabs pumpkin", "Bird snatches pumpkin"], "object_replaced": ["Bird fishes melon", "Bird fishes gourd", "Bird fishes squash", "Bird fishes cucumber", "Bird fishes marrow"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: bird fishes pumpkin\n", "AffectedParaphraseMaker_gptoutput": "\n1. Fowl catches squash\n2. Avian angling gourd\n3. Winged creature fishing pumpkin\n4. Birding for pumpkins\n5. Avian fishing for pumpkins", "affected_paraphrase": ["Avian angling gourd", "Winged creature fishing pumpkin", "Birding for pumpkins", "Fowl catches squash", "Avian fishing for pumpkins"]}]}
{"inputs": {"id": 243, "prompt": "a monkey fills cup", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "monkey", "verb": "fills", "object": "cup", "neg": null, "prompt_polarity_grounded": "A monkey does not fill cup."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A monkey does not fill cup.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Monkeys do not have the physical ability to hold and manipulate a cup.\n2. Therefore, they cannot fill a cup.", "affected_reasoning": ["Monkeys do not have physical ability to hold and manipulate cup.", "Therefore, they cannot fill cup."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a monkey fills cup\nsubject token: monkey\nobject token: cup\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A butterfly fills cup\n2. A lion fills cup\n3. A mouse fills cup\n4. A bird fills cup\n5. A fish fills cup\n\nQ2. Replacements:\n1. A monkey fills bowl\n2. A monkey fills plate\n3. A monkey fills jar\n4. A monkey fills box\n5. A monkey fills balloon", "subject_replaced": ["A fish fills cup", "A butterfly fills cup", "A lion fills cup", "A bird fills cup", "A mouse fills cup"], "object_replaced": ["A monkey fills bowl", "A monkey fills jar", "A monkey fills plate", "A monkey fills balloon", "A monkey fills box"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a monkey fills cup\nsubject token: monkey\nobject token: cup\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A primate fills cup; A simian fills cup; An ape fills cup; A chimpanzee fills cup; A baboon fills cup.\nQ2. A monkey fills vessel; A monkey fills container; A monkey fills jar; A monkey fills mug; A monkey fills pot.\nQ3. A monkey fills glass; A monkey fills bowl; A monkey fills pitcher; A monkey fills tumbler; A monkey fills goblet.", "subject_replaced": ["A primate fills cup", " A simian fills cup", " An ape fills cup", " A chimpanzee fills cup", " A baboon fills cup."], "verb_replaced": ["A monkey fills vessel", " A monkey fills container", " A monkey fills jar", " A monkey fills mug", " A monkey fills pot."], "object_replaced": ["A monkey fills glass", " A monkey fills bowl", " A monkey fills pitcher", " A monkey fills tumbler", " A monkey fills goblet."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a monkey fills cup\n", "AffectedParaphraseMaker_gptoutput": "\n1. A primate is filling a mug.\n2. A simian is pouring something into a cup.\n3. A monkey is filling a container with liquid.\n4. A monkey is putting something into a cup.\n5. A monkey is filling a cup with a substance.", "affected_paraphrase": ["A simian is pouring something into a cup.", "A monkey is filling a container with liquid.", "A monkey is filling a cup with a substance.", "A monkey is putting something into a cup.", "A primate is filling a mug."]}]}
{"inputs": {"id": 246, "prompt": "Monkey hugs pea", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Monkey", "verb": "hugs", "object": "pea", "neg": null, "prompt_polarity_grounded": "Monkey does not hug pea."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Monkey does not hug pea.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Monkeys are animals. \n2. Animals do not hug peas.", "affected_reasoning": ["Monkeys are animals.", "Animals do not hug peas."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Monkey hugs pea\nsubject token: Monkey\nobject token: pea\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant hugs pea\n2. Giraffe hugs pea\n3. Tiger hugs pea\n4. Lion hugs pea\n5. Zebra hugs pea\n\nQ2. Replacements:\n1. Monkey hugs apple\n2. Monkey hugs banana\n3. Monkey hugs orange\n4. Monkey hugs grape\n5. Monkey hugs strawberry", "subject_replaced": ["Elephant hugs pea", "Giraffe hugs pea", "Lion hugs pea", "Zebra hugs pea", "Tiger hugs pea"], "object_replaced": ["Monkey hugs strawberry", "Monkey hugs apple", "Monkey hugs banana", "Monkey hugs orange", "Monkey hugs grape"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Monkey hugs pea\nsubject token: Monkey\nobject token: pea\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Ape hugs pea\n2. Primate hugs pea\n3. Gorilla hugs pea\n4. Chimpanzee hugs pea\n5. Baboon hugs pea\n\nQ2.\n1. Monkey cuddles pea\n2. Monkey embraces pea\n3. Monkey squeezes pea\n4. Monkey snuggles pea\n5. Monkey caresses pea\n\nQ3.\n1. Monkey hugs bean\n2. Monkey hugs chickpea\n3. Monkey hugs lentil\n4. Monkey hugs pea pod\n5. Monkey hugs split pea", "subject_replaced": ["Primate hugs pea", "Baboon hugs pea", "Chimpanzee hugs pea", "Gorilla hugs pea", "Ape hugs pea"], "verb_replaced": ["Monkey squeezes pea", "Monkey cuddles pea", "Monkey caresses pea", "Monkey embraces pea", "Monkey snuggles pea"], "object_replaced": ["Monkey hugs pea pod", "Monkey hugs split pea", "Monkey hugs bean", "Monkey hugs lentil", "Monkey hugs chickpea"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Monkey hugs pea\n", "AffectedParaphraseMaker_gptoutput": "\n1. The primate embraced the legume.\n2. The simian clasped the pulse.\n3. The ape cuddled the bean.\n4. The monkey embraced the pea.\n5. The monkey gave the pea a hug.", "affected_paraphrase": ["The simian clasped the pulse.", "The ape cuddled the bean.", "The monkey embraced the pea.", "The primate embraced the legume.", "The monkey gave the pea a hug."]}]}
{"inputs": {"id": 249, "prompt": "Rock slams sand", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Rock", "verb": "slams", "object": "sand", "neg": null, "prompt_polarity_grounded": "Rock does not slam sand."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Rock does not slam sand.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Rocks are solid objects. \n2. Sand is a loose material.", "affected_reasoning": ["Rocks are solid objects.", "Sand is loose material."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Rock slams sand\nsubject token: Rock\nobject token: sand\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Car slams sand\n2. Tree slams sand\n3. Dog slams sand\n4. Plane slams sand\n5. House slams sand\n\nQ2. Replacements:\n1. Rock slams water\n2. Rock slams snow\n3. Rock slams ice\n4. Rock slams grass\n5. Rock slams sky", "subject_replaced": ["Car slams sand", "Plane slams sand", "Tree slams sand", "Dog slams sand", "House slams sand"], "object_replaced": ["Rock slams grass", "Rock slams water", "Rock slams sky", "Rock slams snow", "Rock slams ice"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Rock slams sand\nsubject token: Rock\nobject token: sand\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Pebble slams sand, Boulder slams sand, Granite slams sand, Limestone slams sand, Gravel slams sand.\nQ2. Rock crashes sand, Rock smashes sand, Rock thumps sand, Rock pounds sand, Rock bashes sand.\nQ3. Rock slams dirt, Rock slams gravel, Rock slams pebbles, Rock slams stones, Rock slams shards.", "subject_replaced": ["Granite slams sand", "Limestone slams sand", "Pebble slams sand", "Gravel slams sand.", "Boulder slams sand"], "verb_replaced": ["Rock bashes sand.", "Rock smashes sand", "Rock crashes sand", "Rock pounds sand", "Rock thumps sand"], "object_replaced": ["Rock slams dirt", "Rock slams stones", "Rock slams pebbles", "Rock slams gravel", "Rock slams shards."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Rock slams sand\n", "AffectedParaphraseMaker_gptoutput": "\n1. Rock crashes into sand\n2. Rock collides with sand\n3. Rock strikes sand\n4. Rock impacts sand\n5. Rock smashes into sand", "affected_paraphrase": ["Rock collides with sand", "Rock impacts sand", "Rock strikes sand", "Rock smashes into sand", "Rock crashes into sand"]}]}
{"inputs": {"id": 253, "prompt": "the chef chokes laptop", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "chef", "verb": "chokes", "object": "laptop", "neg": null, "prompt_polarity_grounded": "The chef does not choke the laptop."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The chef does not choke the laptop.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Choking a laptop would not be a logical action. \n2. Therefore, the chef does not choke the laptop.", "affected_reasoning": ["Choking laptop would not be logical action.", "Therefore, chef does not choke laptop."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the chef chokes laptop\nsubject token: chef\nobject token: laptop\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The driver chokes laptop\n2. The teacher chokes laptop\n3. The artist chokes laptop\n4. The doctor chokes laptop\n5. The farmer chokes laptop\n\nQ2. Replacements:\n1. The chef chokes phone\n2. The chef chokes car\n3. The chef chokes book\n4. The chef chokes chair\n5. The chef chokes pen", "subject_replaced": ["The farmer chokes laptop", "The driver chokes laptop", "The doctor chokes laptop", "The teacher chokes laptop", "The artist chokes laptop"], "object_replaced": ["The chef chokes book", "The chef chokes phone", "The chef chokes chair", "The chef chokes car", "The chef chokes pen"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the chef chokes laptop\nsubject token: chef\nobject token: laptop\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The cook chokes laptop, The chef strangles laptop, The gourmet smothers laptop, The caterer suffocates laptop, The baker throttles laptop.\n\nQ2. The chef clasps laptop, The chef grasps laptop, The chef clutches laptop, The chef grips laptop, The chef seizes laptop.\n\nQ3. The chef chokes computer, The chef chokes tablet, The chef chokes device, The chef chokes gadget, The chef chokes machine.", "subject_replaced": ["The baker throttles laptop.", "The gourmet smothers laptop", "The caterer suffocates laptop", "The cook chokes laptop", "The chef strangles laptop"], "verb_replaced": ["The chef seizes laptop.", "The chef grips laptop", "The chef clutches laptop", "The chef grasps laptop", "The chef clasps laptop"], "object_replaced": ["The chef chokes machine.", "The chef chokes device", "The chef chokes computer", "The chef chokes gadget", "The chef chokes tablet"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the chef chokes laptop\n", "AffectedParaphraseMaker_gptoutput": "\n1. The cook strangles the computer\n2. The cook throttles the laptop\n3. The chef clasps the laptop\n4. The chef constricts the laptop\n5. The chef suffocates the laptop", "affected_paraphrase": ["The cook strangles the computer", "The cook throttles the laptop", "The chef constricts the laptop", "The chef suffocates the laptop", "The chef clasps the laptop"]}]}
{"inputs": {"id": 272, "prompt": "an elephant shook house", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "elephant", "verb": "shook", "object": "house", "neg": null, "prompt_polarity_grounded": "an elephant shook house"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "an elephant shook house. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The elephant used its trunk to push against the house.\n2. The force of the elephant caused the house to shake.", "affected_reasoning": ["The elephant used its trunk to push against house.", "The force of elephant caused house to shake."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: an elephant shook house\nsubject token: elephant\nobject token: house\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. An ostrich shook house\n2. A giraffe shook house\n3. A lion shook house\n4. A bear shook house\n5. A monkey shook house\n\nQ2. Replacements:\n1. An elephant shook castle\n2. An elephant shook tent\n3. An elephant shook tree\n4. An elephant shook barn\n5. An elephant shook hut", "subject_replaced": ["An ostrich shook house", "A giraffe shook house", "A monkey shook house", "A bear shook house", "A lion shook house"], "object_replaced": ["An elephant shook castle", "An elephant shook tree", "An elephant shook tent", "An elephant shook hut", "An elephant shook barn"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: an elephant shook house\nsubject token: elephant\nobject token: house\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A mammoth shook house, A pachyderm shook house, A rhinoceros shook house, A hippopotamus shook house, A tapir shook house.\nQ2. An elephant jostled house, An elephant rocked house, An elephant quaked house, An elephant trembled house, An elephant swayed house.\nQ3. An elephant shook abode, An elephant shook cottage, An elephant shook manor, An elephant shook villa, An elephant shook palace.", "subject_replaced": ["A rhinoceros shook house", "A pachyderm shook house", "A tapir shook house.", "A mammoth shook house", "A hippopotamus shook house"], "verb_replaced": ["An elephant trembled house", "An elephant swayed house.", "An elephant quaked house", "An elephant rocked house", "An elephant jostled house"], "object_replaced": ["An elephant shook villa", "An elephant shook palace.", "An elephant shook manor", "An elephant shook cottage", "An elephant shook abode"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: an elephant shook house\n", "AffectedParaphraseMaker_gptoutput": "\n1. A pachyderm caused the building to tremble.\n2. A large mammal caused the structure to vibrate.\n3. A massive animal caused the residence to quiver.\n4. A huge beast caused the abode to shake.\n5. A colossal creature caused the domicile to shudder.", "affected_paraphrase": ["A large mammal caused the structure to vibrate.", "A massive animal caused the residence to quiver.", "A pachyderm caused the building to tremble.", "A huge beast caused the abode to shake.", "A colossal creature caused the domicile to shudder."]}]}
{"inputs": {"id": 293, "prompt": "pipe leaks milk", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "pipe", "verb": "leaks", "object": "milk", "neg": null, "prompt_polarity_grounded": "pipe leaks milk"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "pipe leaks milk. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The pipe is connected to a milk container.\n2. The container is full, so the milk is flowing out of the pipe.", "affected_reasoning": ["The pipe is connected to milk container.", "The container is full, so milk is flowing out of pipe."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: pipe leaks milk\nsubject token: pipe\nobject token: milk\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hammer leaks milk\n2. Pen leaks milk\n3. Clock leaks milk\n4. Chair leaks milk\n5. Book leaks milk\n\nQ2. Replacements:\n1. Pipe leaks water\n2. Pipe leaks juice\n3. Pipe leaks soda\n4. Pipe leaks tea\n5. Pipe leaks coffee", "subject_replaced": ["Clock leaks milk", "Hammer leaks milk", "Pen leaks milk", "Chair leaks milk", "Book leaks milk"], "object_replaced": ["Pipe leaks soda", "Pipe leaks juice", "Pipe leaks coffee", "Pipe leaks water", "Pipe leaks tea"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: pipe leaks milk\nsubject token: pipe\nobject token: milk\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. Tube spills milk\n2. Conduit gushes milk\n3. Hose squirts milk\n4. Spigot oozes milk\n5. Faucet dribbles milk\n\nQ2. Variants:\n1. Pipe is leaking milk\n2. Pipe has leaked milk\n3. Pipe had leaked milk\n4. Pipe will leak milk\n5. Pipe is going to leak milk\n\nQ3. Variants:\n1. Pipe leaks cream\n2. Pipe leaks yogurt\n3. Pipe leaks custard\n4. Pipe leaks whey\n5. Pipe leaks skimmed milk", "subject_replaced": ["Spigot oozes milk", "Conduit gushes milk", "Faucet dribbles milk", "Tube spills milk", "Hose squirts milk"], "verb_replaced": ["Pipe will leak milk", "Pipe had leaked milk", "Pipe has leaked milk", "Pipe is going to leak milk", "Pipe is leaking milk"], "object_replaced": ["Pipe leaks yogurt", "Pipe leaks whey", "Pipe leaks custard", "Pipe leaks cream", "Pipe leaks skimmed milk"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: pipe leaks milk\n", "AffectedParaphraseMaker_gptoutput": "\n1. Milk is seeping out of the pipe.\n2. The pipe is dripping milk.\n3. Milk is oozing from the pipe.\n4. The pipe is leaking milk.\n5. Milk is flowing from the pipe.", "affected_paraphrase": ["Milk is flowing from the pipe.", "The pipe is dripping milk.", "The pipe is leaking milk.", "Milk is seeping out of the pipe.", "Milk is oozing from the pipe."]}]}
{"inputs": {"id": 300, "prompt": "Hand peels pebbles", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Hand", "verb": "peels", "object": "pebbles", "neg": null, "prompt_polarity_grounded": "Hand does not peel pebbles."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Hand does not peel pebbles.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pebbles are too small to be peeled.\n2. Hands are not designed to peel small objects.", "affected_reasoning": ["Pebbles are too small to be peeled.", "Hands are not designed to peel small objects."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Hand peels pebbles\nsubject token: Hand\nobject token: pebbles\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Car peels pebbles\n2. Pen peels pebbles\n3. Chair peels pebbles\n4. Clock peels pebbles\n5. Tree peels pebbles\n\nQ2. Replacements:\n1. Hand peels stones\n2. Hand peels apples\n3. Hand peels books\n4. Hand peels coins\n5. Hand peels feathers", "subject_replaced": ["Chair peels pebbles", "Clock peels pebbles", "Car peels pebbles", "Tree peels pebbles", "Pen peels pebbles"], "object_replaced": ["Hand peels books", "Hand peels coins", "Hand peels feathers", "Hand peels apples", "Hand peels stones"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Hand peels pebbles\nsubject token: Hand\nobject token: pebbles\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. Fingers peel pebbles\n2. Person peels pebbles\n3. Hands scoop pebbles\n4. Palms peel pebbles\n5. Fingers scoop pebbles\n\nQ2. Variants:\n1. Hand peeling pebbles\n2. Hand scraping pebbles\n3. Hand crushing pebbles\n4. Hand grinding pebbles\n5. Hand smashing pebbles\n\nQ3. Variants:\n1. Hand peels stones\n2. Hand peels gravel\n3. Hand peels rocks\n4. Hand peels shards\n5. Hand peels chips", "subject_replaced": ["Fingers peel pebbles", "Hands scoop pebbles", "Fingers scoop pebbles", "Palms peel pebbles", "Person peels pebbles"], "verb_replaced": ["Hand crushing pebbles", "Hand scraping pebbles", "Hand smashing pebbles", "Hand peeling pebbles", "Hand grinding pebbles"], "object_replaced": ["Hand peels gravel", "Hand peels chips", "Hand peels rocks", "Hand peels shards", "Hand peels stones"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Hand peels pebbles\n", "AffectedParaphraseMaker_gptoutput": "\n1. Hand removes stones\n2. Hand strips away pebbles\n3. Hand plucks pebbles\n4. Hand pulls off pebbles\n5. Hand takes away pebbles", "affected_paraphrase": ["Hand pulls off pebbles", "Hand takes away pebbles", "Hand plucks pebbles", "Hand strips away pebbles", "Hand removes stones"]}]}
{"inputs": {"id": 303, "prompt": "a rock hurls trolley", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "rock", "verb": "hurls", "object": "trolley", "neg": null, "prompt_polarity_grounded": "A rock does not hurl trolley."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A rock does not hurl trolley.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Rocks do not have the ability to move on their own. \n2. Therefore, they cannot hurl a trolley.", "affected_reasoning": ["Rocks do not have ability to move on their own.", "Therefore, they cannot hurl trolley."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a rock hurls trolley\nsubject token: rock\nobject token: trolley\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a balloon hurls trolley\n2. a tree hurls trolley\n3. a car hurls trolley\n4. a dog hurls trolley\n5. a cloud hurls trolley\n\nQ2. Replacements:\n1. a rock hurls airplane\n2. a rock hurls boat\n3. a rock hurls balloon\n4. a rock hurls house\n5. a rock hurls chair", "subject_replaced": ["a car hurls trolley", "a cloud hurls trolley", "a tree hurls trolley", "a dog hurls trolley", "a balloon hurls trolley"], "object_replaced": ["a rock hurls airplane", "a rock hurls boat", "a rock hurls chair", "a rock hurls house", "a rock hurls balloon"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a rock hurls trolley\nsubject token: rock\nobject token: trolley\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A boulder hurls trolley, A pebble hurls trolley, A stone hurls trolley, A rock hurls trolley, A chunk hurls trolley\nQ2. A rock flings trolley, A rock tosses trolley, A rock throws trolley, A rock launches trolley, A rock propels trolley\nQ3. A rock hurls cart, A rock hurls wagon, A rock hurls vehicle, A rock hurls carriage, A rock hurls tram", "subject_replaced": ["A chunk hurls trolley", "A rock hurls trolley", "A stone hurls trolley", "A pebble hurls trolley", "A boulder hurls trolley"], "verb_replaced": ["A rock flings trolley", "A rock throws trolley", "A rock propels trolley", "A rock tosses trolley", "A rock launches trolley"], "object_replaced": ["A rock hurls carriage", "A rock hurls vehicle", "A rock hurls wagon", "A rock hurls cart", "A rock hurls tram"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a rock hurls trolley\n", "AffectedParaphraseMaker_gptoutput": "\n1. A boulder throws a streetcar.\n2. A stone propels a tram.\n3. A boulder flings a trolley.\n4. A rock launches a trolley car.\n5. A stone tosses a trolley vehicle.", "affected_paraphrase": ["A rock launches a trolley car.", "A stone propels a tram.", "A boulder throws a streetcar.", "A boulder flings a trolley.", "A stone tosses a trolley vehicle."]}]}
{"inputs": {"id": 305, "prompt": "Air poisons girl", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Air", "verb": "poisons", "object": "girl", "neg": null, "prompt_polarity_grounded": "Air poisons girl"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Air poisons girl. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Girl breathes in air.\n2. Air contains pollutants, which are harmful to her health.", "affected_reasoning": ["Girl breathes in air.", "Air contains pollutants, which are harmful to her health."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Air poisons girl\nsubject token: Air\nobject token: girl\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Fire poisons girl\n2. Water poisons girl\n3. Sun poisons girl\n4. Wind poisons girl\n5. Earth poisons girl\n\nQ2. Replacements:\n1. Air poisons boy\n2. Air poisons woman\n3. Air poisons man\n4. Air poisons child\n5. Air poisons baby", "subject_replaced": ["Water poisons girl", "Wind poisons girl", "Earth poisons girl", "Fire poisons girl", "Sun poisons girl"], "object_replaced": ["Air poisons boy", "Air poisons woman", "Air poisons man", "Air poisons baby", "Air poisons child"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Air poisons girl\nsubject token: Air\nobject token: girl\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Atmosphere poisons girl\n2. Breeze poisons girl\n3. Wind poisons girl\n4. Sky poisons girl\n5. Humidity poisons girl\n\nQ2.\n1. Air taints girl\n2. Air contaminates girl\n3. Air pollutes girl\n4. Air infects girl\n5. Air sullies girl\n\nQ3.\n1. Air poisons child\n2. Air poisons teenager\n3. Air poisons female\n4. Air poisons woman\n5. Air poisons lady", "subject_replaced": ["Atmosphere poisons girl", "Humidity poisons girl", "Sky poisons girl", "Wind poisons girl", "Breeze poisons girl"], "verb_replaced": ["Air contaminates girl", "Air pollutes girl", "Air sullies girl", "Air taints girl", "Air infects girl"], "object_replaced": ["Air poisons woman", "Air poisons female", "Air poisons lady", "Air poisons teenager", "Air poisons child"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Air poisons girl\n", "AffectedParaphraseMaker_gptoutput": "\n1. The air is causing harm to the girl.\n2. The girl is being poisoned by the air.\n3. The air is a toxin to the girl.\n4. The air is a contaminant to the girl.\n5. The air is a hazard to the girl.", "affected_paraphrase": ["The girl is being poisoned by the air.", "The air is a toxin to the girl.", "The air is a hazard to the girl.", "The air is causing harm to the girl.", "The air is a contaminant to the girl."]}]}
{"inputs": {"id": 310, "prompt": "Rabbit grasps ant", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Rabbit", "verb": "grasps", "object": "ant", "neg": null, "prompt_polarity_grounded": "Rabbit grasps ant"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Rabbit grasps ant. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nRabbit is hungry. Ant is food.", "affected_reasoning": ["Rabbit is hungry", "Ant is food."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Rabbit grasps ant\nsubject token: Rabbit\nobject token: ant\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant grasps ant\n2. Tiger grasps ant\n3. Giraffe grasps ant\n4. Monkey grasps ant\n5. Kangaroo grasps ant\n\nQ2. Replacements:\n1. Rabbit grasps apple\n2. Rabbit grasps banana\n3. Rabbit grasps peach\n4. Rabbit grasps strawberry\n5. Rabbit grasps watermelon", "subject_replaced": ["Giraffe grasps ant", "Monkey grasps ant", "Elephant grasps ant", "Kangaroo grasps ant", "Tiger grasps ant"], "object_replaced": ["Rabbit grasps peach", "Rabbit grasps apple", "Rabbit grasps banana", "Rabbit grasps strawberry", "Rabbit grasps watermelon"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Rabbit grasps ant\nsubject token: Rabbit\nobject token: ant\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. Hare grasps ant\n2. Bunny grasps ant\n3. Jackrabbit grasps ant\n4. Cottontail grasps ant\n5. Leporid grasps ant\n\nQ2. Variants:\n1. Rabbit seizes ant\n2. Rabbit clutches ant\n3. Rabbit grabs ant\n4. Rabbit snatches ant\n5. Rabbit captures ant\n\nQ3. Variants:\n1. Rabbit grasps insect\n2. Rabbit grasps bug\n3. Rabbit grasps beetle\n4. Rabbit grasps larva\n5. Rabbit grasps pupa", "subject_replaced": ["Leporid grasps ant", "Jackrabbit grasps ant", "Hare grasps ant", "Cottontail grasps ant", "Bunny grasps ant"], "verb_replaced": ["Rabbit clutches ant", "Rabbit captures ant", "Rabbit seizes ant", "Rabbit grabs ant", "Rabbit snatches ant"], "object_replaced": ["Rabbit grasps beetle", "Rabbit grasps pupa", "Rabbit grasps bug", "Rabbit grasps larva", "Rabbit grasps insect"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Rabbit grasps ant\n", "AffectedParaphraseMaker_gptoutput": "\n1. The rabbit clutches the ant.\n2. The rabbit holds the ant tightly.\n3. The rabbit grabs the ant.\n4. The rabbit takes the ant in its grasp.\n5. The rabbit seizes the ant.", "affected_paraphrase": ["The rabbit grabs the ant.", "The rabbit takes the ant in its grasp.", "The rabbit clutches the ant.", "The rabbit seizes the ant.", "The rabbit holds the ant tightly."]}]}
{"inputs": {"id": 318, "prompt": "the dog draws computer", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "dog", "verb": "draws", "object": "computer", "neg": null, "prompt_polarity_grounded": "The dog does not draw computer."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The dog does not draw computer.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Dogs cannot use a pencil or pen. \n2. Drawing requires a writing utensil.", "affected_reasoning": ["Dogs cannot use pencil or pen.", "Drawing requires writing utensil."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the dog draws computer\nsubject token: dog\nobject token: computer\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The cat draws computer\n2. The elephant draws computer\n3. The bird draws computer\n4. The fish draws computer\n5. The monkey draws computer\n\nQ2. Replacements:\n1. The dog draws television\n2. The dog draws phone\n3. The dog draws book\n4. The dog draws chair\n5. The dog draws table", "subject_replaced": ["The elephant draws computer", "The cat draws computer", "The bird draws computer", "The monkey draws computer", "The fish draws computer"], "object_replaced": ["The dog draws television", "The dog draws chair", "The dog draws phone", "The dog draws table", "The dog draws book"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the dog draws computer\nsubject token: dog\nobject token: computer\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The pup draws computer, The canine draws computer, The mutt draws computer, The hound draws computer, The pooch draws computer.\n\nQ2. The dog creates computer, The dog designs computer, The dog manipulates computer, The dog programs computer, The dog operates computer.\n\nQ3. The dog draws laptop, The dog draws tablet, The dog draws monitor, The dog draws device, The dog draws gadget.", "subject_replaced": ["The mutt draws computer", "The canine draws computer", "The pooch draws computer.", "The hound draws computer", "The pup draws computer"], "verb_replaced": ["The dog designs computer", "The dog operates computer.", "The dog manipulates computer", "The dog creates computer", "The dog programs computer"], "object_replaced": ["The dog draws gadget.", "The dog draws tablet", "The dog draws monitor", "The dog draws laptop", "The dog draws device"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the dog draws computer\n", "AffectedParaphraseMaker_gptoutput": "\n1. The canine creates artwork on the computer.\n2. The pooch is producing digital images.\n3. The pup is making pictures on the computer.\n4. The dog is designing graphics on the computer.\n5. The canine is generating artwork on the computer.", "affected_paraphrase": ["The dog is designing graphics on the computer.", "The canine creates artwork on the computer.", "The pooch is producing digital images.", "The canine is generating artwork on the computer.", "The pup is making pictures on the computer."]}]}
{"inputs": {"id": 322, "prompt": "the dentist cooks beer", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "dentist", "verb": "cooks", "object": "beer", "neg": null, "prompt_polarity_grounded": "The dentist does not cook beer."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The dentist does not cook beer.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Beer is a beverage.\n2. Dentists do not prepare beverages.", "affected_reasoning": ["Beer is beverage.", "Dentists do not prepare beverages."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the dentist cooks beer\nsubject token: dentist\nobject token: beer\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "1. The astronaut cooks beer\n2. The doctor cooks beer\n3. The teacher cooks beer\n4. The plumber cooks beer\n5. The engineer cooks beer\n\n1. The dentist cooks milk\n2. The dentist cooks juice\n3. The dentist cooks soda\n4. The dentist cooks tea\n5. The dentist cooks coffee", "subject_replaced": ["The teacher cooks beer", "The doctor cooks beer", "The astronaut cooks beer", "The plumber cooks beer", "The engineer cooks beer"], "object_replaced": ["The dentist cooks juice", "The dentist cooks coffee", "The dentist cooks soda", "The dentist cooks milk", "The dentist cooks tea"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the dentist cooks beer\nsubject token: dentist\nobject token: beer\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The orthodontist cooks beer.\nQ2. The dentist brews beer.\nQ3. The dentist cooks ale.", "subject_replaced": ["The orthodontist cooks beer."], "verb_replaced": ["The dentist brews beer."], "object_replaced": ["The dentist cooks ale."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the dentist cooks beer\n", "AffectedParaphraseMaker_gptoutput": "\n1. The dentist prepares alcoholic beverages.\n2. The dentist brews beer.\n3. The dentist concocts beer.\n4. The dentist ferments beer.\n5. The dentist makes beer.", "affected_paraphrase": ["The dentist brews beer.", "The dentist makes beer.", "The dentist ferments beer.", "The dentist concocts beer.", "The dentist prepares alcoholic beverages."]}]}
{"inputs": {"id": 328, "prompt": "the hand shoves milk", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "hand", "verb": "shoves", "object": "milk", "neg": null, "prompt_polarity_grounded": "The hand does not shove milk."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The hand does not shove milk.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Hands cannot move liquids.\n2. Milk is a liquid.", "affected_reasoning": ["Hands cannot move liquids.", "Milk is liquid."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the hand shoves milk\nsubject token: hand\nobject token: milk\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "1. The cat shoves milk\n2. The tree shoves milk\n3. The moon shoves milk\n4. The wind shoves milk\n5. The ocean shoves milk\n\n1. The hand shoves bread\n2. The hand shoves water\n3. The hand shoves ice\n4. The hand shoves candy\n5. The hand shoves soup", "subject_replaced": ["The ocean shoves milk", "The moon shoves milk", "The cat shoves milk", "The tree shoves milk", "The wind shoves milk"], "object_replaced": ["The hand shoves ice", "The hand shoves soup", "The hand shoves candy", "The hand shoves water", "The hand shoves bread"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the hand shoves milk\nsubject token: hand\nobject token: milk\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The arm shoves milk, The fist shoves milk, The palm shoves milk, The fingers shoves milk, The thumb shoves milk.\nQ2. The hand pushes milk, The hand thrusts milk, The hand drives milk, The hand propels milk, The hand hurls milk.\nQ3. The hand shoves cream, The hand shoves yogurt, The hand shoves cheese, The hand shoves butter, The hand shoves soy milk.", "subject_replaced": ["The fist shoves milk", "The arm shoves milk", "The thumb shoves milk.", "The fingers shoves milk", "The palm shoves milk"], "verb_replaced": ["The hand hurls milk.", "The hand propels milk", "The hand pushes milk", "The hand drives milk", "The hand thrusts milk"], "object_replaced": ["The hand shoves butter", "The hand shoves soy milk.", "The hand shoves yogurt", "The hand shoves cream", "The hand shoves cheese"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the hand shoves milk\n", "AffectedParaphraseMaker_gptoutput": "\n1. The hand pushes the milk.\n2. The hand propels the milk.\n3. The hand drives the milk.\n4. The hand thrusts the milk.\n5. The hand shoves the milk forward.", "affected_paraphrase": ["The hand propels the milk.", "The hand drives the milk.", "The hand pushes the milk.", "The hand thrusts the milk.", "The hand shoves the milk forward."]}]}
{"inputs": {"id": 334, "prompt": "an infant draws pumpkin", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "infant", "verb": "draws", "object": "pumpkin", "neg": null, "prompt_polarity_grounded": "an infant draws pumpkin"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "an infant draws pumpkin. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The infant sees a pumpkin. \n2. The infant wants to draw it.", "affected_reasoning": ["The infant sees pumpkin.", "The infant wants to draw it."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: an infant draws pumpkin\nsubject token: infant\nobject token: pumpkin\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A dog draws pumpkin\n2. A teacher draws pumpkin\n3. A student draws pumpkin\n4. A chef draws pumpkin\n5. A doctor draws pumpkin\n\nQ2. Replacements:\n1. An infant draws apple\n2. An infant draws banana\n3. An infant draws cake\n4. An infant draws ice cream\n5. An infant draws cookie", "subject_replaced": ["A chef draws pumpkin", "A student draws pumpkin", "A doctor draws pumpkin", "A dog draws pumpkin", "A teacher draws pumpkin"], "object_replaced": ["An infant draws cookie", "An infant draws banana", "An infant draws cake", "An infant draws ice cream", "An infant draws apple"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: an infant draws pumpkin\nsubject token: infant\nobject token: pumpkin\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A baby scribbles pumpkin, a toddler paints pumpkin, a child sketches pumpkin, a youngster doodles pumpkin, an infant draws pumpkin.\nQ2. An infant scrawls pumpkin, an infant doodles pumpkin, an infant sketches pumpkin, an infant paints pumpkin, an infant draws pumpkin.\nQ3. An infant draws squash, an infant draws gourd, an infant draws melon, an infant draws cucurbit, an infant draws pumpkin.", "subject_replaced": ["A baby scribbles pumpkin", "a youngster doodles pumpkin", "a toddler paints pumpkin", "a child sketches pumpkin", "an infant draws pumpkin."], "verb_replaced": ["an infant doodles pumpkin", "an infant paints pumpkin", "an infant sketches pumpkin", "an infant draws pumpkin.", "An infant scrawls pumpkin"], "object_replaced": ["an infant draws melon", "an infant draws cucurbit", "an infant draws gourd", "An infant draws squash", "an infant draws pumpkin."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: an infant draws pumpkin\n", "AffectedParaphraseMaker_gptoutput": "\n1. A baby creates a picture of a pumpkin\n2. A toddler sketches a pumpkin\n3. A newborn produces an illustration of a pumpkin\n4. A young child draws a pumpkin\n5. A small child makes a representation of a pumpkin", "affected_paraphrase": ["A toddler sketches a pumpkin", "A young child draws a pumpkin", "A small child makes a representation of a pumpkin", "A baby creates a picture of a pumpkin", "A newborn produces an illustration of a pumpkin"]}]}
{"inputs": {"id": 337, "prompt": "Pebbles bite turtle", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Pebbles", "verb": "bite", "object": "turtle", "neg": null, "prompt_polarity_grounded": "Pebbles do not bite turtle."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Pebbles do not bite turtle.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pebbles cannot bite because they do not have teeth. \n2. Turtles have a hard shell which cannot be penetrated by pebbles.", "affected_reasoning": ["Pebbles cannot bite because they do not have teeth.", "Turtles have hard shell which cannot be penetrated by pebbles."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Pebbles bite turtle\nsubject token: Pebbles\nobject token: turtle\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Clouds bite turtle\n2. Stars bite turtle\n3. Moon bite turtle\n4. Wind bite turtle\n5. Rain bite turtle\n\nQ2. Replacements:\n1. Pebbles bite fish\n2. Pebbles bite bird\n3. Pebbles bite cat\n4. Pebbles bite dog\n5. Pebbles bite mouse", "subject_replaced": ["Clouds bite turtle", "Stars bite turtle", "Wind bite turtle", "Rain bite turtle", "Moon bite turtle"], "object_replaced": ["Pebbles bite bird", "Pebbles bite cat", "Pebbles bite mouse", "Pebbles bite dog", "Pebbles bite fish"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Pebbles bite turtle\nsubject token: Pebbles\nobject token: turtle\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Rocks bite turtle, Stones bite turtle, Boulders bite turtle, Gravel bite turtle, Pebbles bite turtle\nQ2. Pebbles nip turtle, Pebbles snap turtle, Pebbles pinch turtle, Pebbles munch turtle, Pebbles bite turtle\nQ3. Pebbles bite terrapin, Pebbles bite tortoise, Pebbles bite sea turtle, Pebbles bite snapping turtle, Pebbles bite turtle", "subject_replaced": ["Pebbles bite turtle", "Gravel bite turtle", "Stones bite turtle", "Boulders bite turtle", "Rocks bite turtle"], "verb_replaced": ["Pebbles bite turtle", "Pebbles snap turtle", "Pebbles pinch turtle", "Pebbles nip turtle", "Pebbles munch turtle"], "object_replaced": ["Pebbles bite turtle", "Pebbles bite terrapin", "Pebbles bite tortoise", "Pebbles bite snapping turtle", "Pebbles bite sea turtle"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Pebbles bite turtle\n", "AffectedParaphraseMaker_gptoutput": "\n1. The turtle is nipped by the pebbles.\n2. Pebbles are causing a bite on the turtle.\n3. The turtle is being bitten by the pebbles.\n4. Pebbles are inflicting a bite on the turtle.\n5. The turtle is receiving a bite from the pebbles.", "affected_paraphrase": ["Pebbles are causing a bite on the turtle.", "The turtle is being bitten by the pebbles.", "The turtle is receiving a bite from the pebbles.", "The turtle is nipped by the pebbles.", "Pebbles are inflicting a bite on the turtle."]}]}
{"inputs": {"id": 341, "prompt": "the man lifts paper", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "man", "verb": "lifts", "object": "paper", "neg": null, "prompt_polarity_grounded": "The man does not lift paper."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The man does not lift paper.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Paper is too light to lift.\n2. Therefore, the man cannot lift paper.", "affected_reasoning": ["Paper is too light to lift.", "Therefore, man cannot lift paper."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the man lifts paper\nsubject token: man\nobject token: paper\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "1. The cat lifts paper\n2. The boy lifts paper\n3. The woman lifts paper\n4. The tree lifts paper\n5. The dog lifts paper\n\n1. The man lifts pencil\n2. The man lifts book\n3. The man lifts rock\n4. The man lifts chair\n5. The man lifts car", "subject_replaced": ["The woman lifts paper", "The dog lifts paper", "The tree lifts paper", "The boy lifts paper", "The cat lifts paper"], "object_replaced": ["The man lifts chair", "The man lifts pencil", "The man lifts car", "The man lifts book", "The man lifts rock"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the man lifts paper\nsubject token: man\nobject token: paper\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The person lifts paper, The individual lifts paper, The human lifts paper, The male lifts paper, The adult lifts paper.\n\nQ2. The man raises paper, The man carries paper, The man moves paper, The man shifts paper, The man lifts up paper.\n\nQ3. The man lifts documents, The man lifts sheets, The man lifts envelopes, The man lifts flyers, The man lifts magazines.", "subject_replaced": ["The human lifts paper", "The male lifts paper", "The person lifts paper", "The adult lifts paper.", "The individual lifts paper"], "verb_replaced": ["The man carries paper", "The man lifts up paper.", "The man raises paper", "The man moves paper", "The man shifts paper"], "object_replaced": ["The man lifts documents", "The man lifts magazines.", "The man lifts envelopes", "The man lifts flyers", "The man lifts sheets"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the man lifts paper\n", "AffectedParaphraseMaker_gptoutput": "\n1. The man is raising the paper.\n2. The man is picking up the paper.\n3. The man is hoisting the paper.\n4. The man is elevating the paper.\n5. The man is hefting the paper.", "affected_paraphrase": ["The man is elevating the paper.", "The man is picking up the paper.", "The man is hoisting the paper.", "The man is raising the paper.", "The man is hefting the paper."]}]}
{"inputs": {"id": 345, "prompt": "a policeman clips laptop", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "policeman", "verb": "clips", "object": "laptop", "neg": null, "prompt_polarity_grounded": "A policeman does not clip laptop."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A policeman does not clip laptop.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. A policeman's job is to enforce the law. \n2. Clipping a laptop is not a law enforcement activity.", "affected_reasoning": ["A policeman's job is to enforce law.", "Clipping laptop is not law enforcement activity."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a policeman clips laptop\nsubject token: policeman\nobject token: laptop\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A teacher clips laptop\n2. A doctor clips laptop\n3. A chef clips laptop\n4. A farmer clips laptop\n5. A soldier clips laptop\n\nQ2. Replacements:\n1. A policeman clips phone\n2. A policeman clips book\n3. A policeman clips pen\n4. A policeman clips chair\n5. A policeman clips car", "subject_replaced": ["A soldier clips laptop", "A teacher clips laptop", "A farmer clips laptop", "A chef clips laptop", "A doctor clips laptop"], "object_replaced": ["A policeman clips book", "A policeman clips car", "A policeman clips pen", "A policeman clips phone", "A policeman clips chair"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a policeman clips laptop\nsubject token: policeman\nobject token: laptop\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A police officer clips laptop, A constable clips laptop, A law enforcement officer clips laptop, A sheriff clips laptop, A trooper clips laptop.\n\nQ2. A policeman affixes laptop, A policeman attaches laptop, A policeman secures laptop, A policeman fastens laptop, A policeman binds laptop.\n\nQ3. A policeman clips computer, A policeman clips notebook, A policeman clips tablet, A policeman clips netbook, A policeman clips ultrabook.", "subject_replaced": ["A trooper clips laptop.", "A police officer clips laptop", "A law enforcement officer clips laptop", "A sheriff clips laptop", "A constable clips laptop"], "verb_replaced": ["A policeman secures laptop", "A policeman attaches laptop", "A policeman binds laptop.", "A policeman fastens laptop", "A policeman affixes laptop"], "object_replaced": ["A policeman clips notebook", "A policeman clips tablet", "A policeman clips ultrabook.", "A policeman clips computer", "A policeman clips netbook"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a policeman clips laptop\n", "AffectedParaphraseMaker_gptoutput": "\n1. An officer attaches a laptop\n2. A law enforcement agent secures a computer\n3. A police officer fastens a laptop\n4. A constable affixes a laptop\n5. A cop connects a laptop", "affected_paraphrase": ["A constable affixes a laptop", "A law enforcement agent secures a computer", "An officer attaches a laptop", "A police officer fastens a laptop", "A cop connects a laptop"]}]}
{"inputs": {"id": 348, "prompt": "Pen pour juice", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Pen", "verb": "pour", "object": "juice", "neg": null, "prompt_polarity_grounded": "Pen does not pour juice."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Pen does not pour juice.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pens are writing instruments.\n2. Writing instruments cannot pour juice.", "affected_reasoning": ["Pens are writing instruments.", "Writing instruments cannot pour juice."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Pen pour juice\nsubject token: Pen\nobject token: juice\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hammer pour juice\n2. Book pour juice\n3. Chair pour juice\n4. Phone pour juice\n5. Car pour juice\n\nQ2. Replacements:\n1. Pen pour milk\n2. Pen pour water\n3. Pen pour soda\n4. Pen pour tea\n5. Pen pour coffee", "subject_replaced": ["Hammer pour juice", "Chair pour juice", "Phone pour juice", "Book pour juice", "Car pour juice"], "object_replaced": ["Pen pour coffee", "Pen pour water", "Pen pour milk", "Pen pour soda"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Pen pour juice\nsubject token: Pen\nobject token: juice\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Crayon pour juice, Marker pour juice, Pencil pour juice, Fountain pen pour juice, Ballpoint pen pour juice.\nQ2. Pour pour juice, Squeeze pour juice, Dispense pour juice, Squirt pour juice, Dribble pour juice.\nQ3. Pen pour soda, Pen pour nectar, Pen pour smoothie, Pen pour beverage, Pen pour liquid.", "subject_replaced": ["Pencil pour juice", "Crayon pour juice", "Fountain pen pour juice", "Marker pour juice", "Ballpoint pen pour juice."], "verb_replaced": ["Squirt pour juice", "Dribble pour juice.", "Squeeze pour juice", "Pour pour juice", "Dispense pour juice"], "object_replaced": ["Pen pour smoothie", "Pen pour beverage", "Pen pour soda", "Pen pour liquid.", "Pen pour nectar"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Pen pour juice\n", "AffectedParaphraseMaker_gptoutput": "\n1. Pen dispenses liquid\n2. Pen emits juice\n3. Pen releases juice\n4. Pen squirts juice\n5. Pen expels juice", "affected_paraphrase": ["Pen expels juice", "Pen releases juice", "Pen emits juice", "Pen squirts juice", "Pen dispenses liquid"]}]}
{"inputs": {"id": 355, "prompt": "Policeman drinks pebbles", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Policeman", "verb": "drinks", "object": "pebbles", "neg": null, "prompt_polarity_grounded": "Policeman does not drink pebbles."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Policeman does not drink pebbles.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pebbles are not a beverage. \n2. Policemen do not consume non-beverages.", "affected_reasoning": ["Pebbles are not beverage.", "Policemen do not consume non-beverages."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Policeman drinks pebbles\nsubject token: Policeman\nobject token: pebbles\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1.\n1. Astronaut drinks pebbles\n2. Teacher drinks pebbles\n3. Chef drinks pebbles\n4. Doctor drinks pebbles\n5. Pilot drinks pebbles\n\nQ2.\n1. Policeman drinks apples\n2. Policeman drinks oranges\n3. Policeman drinks bananas\n4. Policeman drinks grapes\n5. Policeman drinks strawberries", "subject_replaced": ["Astronaut drinks pebbles", "Teacher drinks pebbles", "Chef drinks pebbles", "Pilot drinks pebbles", "Doctor drinks pebbles"], "object_replaced": ["Policeman drinks grapes", "Policeman drinks bananas", "Policeman drinks apples", "Policeman drinks oranges", "Policeman drinks strawberries"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Policeman drinks pebbles\nsubject token: Policeman\nobject token: pebbles\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants: \n1. Officer drinks pebbles \n2. Constable drinks pebbles \n3. Sheriff drinks pebbles \n4. Trooper drinks pebbles \n5. Security guard drinks pebbles \n\nQ2. Variants: \n1. Policeman gulps pebbles \n2. Policeman swallows pebbles \n3. Policeman sips pebbles \n4. Policeman consumes pebbles \n5. Policeman ingests pebbles \n\nQ3. Variants: \n1. Policeman drinks stones \n2. Policeman drinks gravel \n3. Policeman drinks marbles \n4. Policeman drinks pebble stones \n5. Policeman drinks cobbles", "subject_replaced": ["Trooper drinks pebbles", "Security guard drinks pebbles", "Constable drinks pebbles", "Sheriff drinks pebbles", "Officer drinks pebbles"], "verb_replaced": ["Policeman gulps pebbles", "Policeman sips pebbles", "Policeman ingests pebbles", "Policeman swallows pebbles", "Policeman consumes pebbles"], "object_replaced": ["Policeman drinks cobbles", "Policeman drinks stones", "Policeman drinks pebble stones", "Policeman drinks marbles", "Policeman drinks gravel"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Policeman drinks pebbles\n", "AffectedParaphraseMaker_gptoutput": "\n1. A law enforcement officer imbibes small stones.\n2. An officer of the law consumes pebbles.\n3. A cop partakes of gravel.\n4. A constable partakes of tiny rocks.\n5. A police officer ingests pebbles.", "affected_paraphrase": ["A constable partakes of tiny rocks.", "An officer of the law consumes pebbles.", "A police officer ingests pebbles.", "A cop partakes of gravel.", "A law enforcement officer imbibes small stones."]}]}
{"inputs": {"id": 372, "prompt": "Girl tosses bear", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Girl", "verb": "tosses", "object": "bear", "neg": null, "prompt_polarity_grounded": "Girl does not toss bear."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Girl does not toss bear.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Girl does not have a bear.\n2. Therefore, she cannot toss it.", "affected_reasoning": ["Girl does not have bear.", "Therefore, she cannot toss it."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Girl tosses bear\nsubject token: Girl\nobject token: bear\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Boy tosses bear\n2. Woman tosses bear\n3. Child tosses bear\n4. Person tosses bear\n5. Teenager tosses bear\n\nQ2. Replacements:\n1. Girl tosses toy\n2. Girl tosses doll\n3. Girl tosses ball\n4. Girl tosses blanket\n5. Girl tosses pillow", "subject_replaced": ["Child tosses bear", "Boy tosses bear", "Woman tosses bear", "Teenager tosses bear", "Person tosses bear"], "object_replaced": ["Girl tosses blanket", "Girl tosses doll", "Girl tosses toy", "Girl tosses pillow", "Girl tosses ball"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Girl tosses bear\nsubject token: Girl\nobject token: bear\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. Woman throws bear\n2. Child tosses teddy\n3. Lady flings bear\n4. Girl hurls bear\n5. Female tosses cub\n\nQ2. Variants:\n1. Girl tosses hurled\n2. Girl flings bear\n3. Girl hurls bear\n4. Girl throws bear\n5. Girl launches bear\n\nQ3. Variants:\n1. Girl tosses teddy\n2. Girl tosses cub\n3. Girl tosses toy\n4. Girl tosses plush\n5. Girl tosses stuffed animal", "subject_replaced": ["Female tosses cub", "Child tosses teddy", "Girl hurls bear", "Woman throws bear", "Lady flings bear"], "verb_replaced": ["Girl launches bear", "Girl throws bear", "Girl flings bear", "Girl tosses hurled", "Girl hurls bear"], "object_replaced": ["Girl tosses stuffed animal", "Girl tosses toy", "Girl tosses plush", "Girl tosses cub", "Girl tosses teddy"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Girl tosses bear\n", "AffectedParaphraseMaker_gptoutput": "\n1. The young lady threw the teddy bear.\n2. The female chucked the stuffed animal.\n3. The female hurled the bear.\n4. The girl flung the bear.\n5. The female lobbed the bear.", "affected_paraphrase": ["The female lobbed the bear.", "The female chucked the stuffed animal.", "The young lady threw the teddy bear.", "The girl flung the bear.", "The female hurled the bear."]}]}
{"inputs": {"id": 374, "prompt": "Pillow cuts bread", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Pillow", "verb": "cuts", "object": "bread", "neg": null, "prompt_polarity_grounded": "Pillow does not cut bread."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Pillow does not cut bread.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pillow is an object used for sleeping.\n2. Bread is a food item used for eating.", "affected_reasoning": ["Pillow is object used for sleeping.", "Bread is food item used for eating."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Pillow cuts bread\nsubject token: Pillow\nobject token: bread\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hammer slices bread\n2. Clock ticks bread\n3. Pen scribbles bread\n4. Chair supports bread\n5. Sunlight warms bread\n\nQ2. Replacements:\n1. Pillow cuts cake\n2. Pillow cuts ice\n3. Pillow cuts paper\n4. Pillow cuts apples\n5. Pillow cuts cheese", "subject_replaced": ["Sunlight warms bread", "Pen scribbles bread", "Chair supports bread", "Hammer slices bread", "Clock ticks bread"], "object_replaced": ["Pillow cuts paper", "Pillow cuts cake", "Pillow cuts cheese", "Pillow cuts ice", "Pillow cuts apples"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Pillow cuts bread\nsubject token: Pillow\nobject token: bread\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Cushion slices bread, Bolster chops bread, Mattress mashes bread, Quilt minces bread, Blanket dices bread.\nQ2. Pillow hacks bread, Pillow saws bread, Pillow slices bread, Pillow chops bread, Pillow mashes bread.\nQ3. Pillow cuts toast, Pillow cuts bagel, Pillow cuts pastry, Pillow cuts loaf, Pillow cuts bun.", "subject_replaced": ["Bolster chops bread", "Quilt minces bread", "Blanket dices bread.", "Cushion slices bread", "Mattress mashes bread"], "verb_replaced": ["Pillow mashes bread.", "Pillow saws bread", "Pillow hacks bread", "Pillow slices bread", "Pillow chops bread"], "object_replaced": ["Pillow cuts bun.", "Pillow cuts pastry", "Pillow cuts bagel", "Pillow cuts toast", "Pillow cuts loaf"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Pillow cuts bread\n", "AffectedParaphraseMaker_gptoutput": "\n1. A cushion slices a loaf of bread\n2. A pillow is used to slice a loaf of bread\n3. A cushion is employed to divide a loaf of bread\n4. A pillow is utilized to cut a loaf of bread\n5. A cushion is utilized to sever a loaf of bread", "affected_paraphrase": ["A cushion is employed to divide a loaf of bread", "A cushion is utilized to sever a loaf of bread", "A pillow is used to slice a loaf of bread", "A pillow is utilized to cut a loaf of bread", "A cushion slices a loaf of bread"]}]}
{"inputs": {"id": 395, "prompt": "gorilla tickles elephant", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "gorilla", "verb": "tickles", "object": "elephant", "neg": null, "prompt_polarity_grounded": "gorilla tickles elephant"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "gorilla tickles elephant. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Gorilla reaches out to elephant.\n2. Elephant feels tickles.", "affected_reasoning": ["Gorilla reaches out to elephant.", "Elephant feels tickles."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: gorilla tickles elephant\nsubject token: gorilla\nobject token: elephant\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Tiger tickles elephant\n2. Sheep tickles elephant\n3. Fox tickles elephant\n4. Bear tickles elephant\n5. Rabbit tickles elephant\n\nQ2. Replacements:\n1. Gorilla tickles giraffe\n2. Gorilla tickles lion\n3. Gorilla tickles zebra\n4. Gorilla tickles hippo\n5. Gorilla tickles monkey", "subject_replaced": ["Fox tickles elephant", "Rabbit tickles elephant", "Bear tickles elephant", "Tiger tickles elephant", "Sheep tickles elephant"], "object_replaced": ["Gorilla tickles hippo", "Gorilla tickles giraffe", "Gorilla tickles zebra", "Gorilla tickles monkey", "Gorilla tickles lion"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: gorilla tickles elephant\nsubject token: gorilla\nobject token: elephant\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. ape tickles elephant, simian tickles elephant, primate tickles elephant, orangutan tickles elephant, chimpanzee tickles elephant\nQ2. gorilla caresses elephant, gorilla pats elephant, gorilla strokes elephant, gorilla rubs elephant, gorilla nuzzles elephant\nQ3. gorilla tickles pachyderm, gorilla tickles mammoth, gorilla tickles rhinoceros, gorilla tickles hippopotamus, gorilla tickles jumbo", "subject_replaced": ["primate tickles elephant", "simian tickles elephant", "ape tickles elephant", "orangutan tickles elephant", "chimpanzee tickles elephant"], "verb_replaced": ["gorilla strokes elephant", "gorilla caresses elephant", "gorilla nuzzles elephant", "gorilla pats elephant", "gorilla rubs elephant"], "object_replaced": ["gorilla tickles rhinoceros", "gorilla tickles pachyderm", "gorilla tickles hippopotamus", "gorilla tickles mammoth", "gorilla tickles jumbo"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: gorilla tickles elephant\n", "AffectedParaphraseMaker_gptoutput": "\n1. A gorilla is amusing an elephant by lightly touching it.\n2. A gorilla is amusing an elephant with a gentle caress.\n3. A gorilla is amusing an elephant with a playful touch.\n4. A gorilla is amusing an elephant with a light touch.\n5. A gorilla is amusing an elephant with a tickle.", "affected_paraphrase": ["A gorilla is amusing an elephant by lightly touching it.", "A gorilla is amusing an elephant with a light touch.", "A gorilla is amusing an elephant with a tickle.", "A gorilla is amusing an elephant with a playful touch.", "A gorilla is amusing an elephant with a gentle caress."]}]}
{"inputs": {"id": 396, "prompt": "the knife sharpens shirt", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "knife", "verb": "sharpens", "object": "shirt", "neg": null, "prompt_polarity_grounded": "The knife does not sharpen shirt."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The knife does not sharpen shirt.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The phrase is a metaphor for something that cannot be improved. \n2. It implies that the situation is already as good as it can be.", "affected_reasoning": ["The phrase is metaphor for something that cannot be improved.", "It implies that situation is already as good as it can be."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the knife sharpens shirt\nsubject token: knife\nobject token: shirt\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The pencil sharpens shirt\n2. The hammer sharpens shirt\n3. The spoon sharpens shirt\n4. The fork sharpens shirt\n5. The scissors sharpens shirt\n\nQ2. Replacements:\n1. The knife sharpens pants\n2. The knife sharpens dress\n3. The knife sharpens sweater\n4. The knife sharpens jacket\n5. The knife sharpens skirt", "subject_replaced": ["The pencil sharpens shirt", "The fork sharpens shirt", "The hammer sharpens shirt", "The spoon sharpens shirt", "The scissors sharpens shirt"], "object_replaced": ["The knife sharpens pants", "The knife sharpens skirt", "The knife sharpens sweater", "The knife sharpens dress", "The knife sharpens jacket"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the knife sharpens shirt\nsubject token: knife\nobject token: shirt\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The blade sharpens shirt, the scissors hone shirt, the chisel grinds shirt, the whetstone sharpens shirt, the file refines shirt.\n\nQ2. The knife sharpens, the knife hones, the knife grinds, the knife refines, the knife polishes shirt.\n\nQ3. The knife sharpens fabric, the knife sharpens cloth, the knife sharpens garment, the knife sharpens blouse, the knife sharpens top.", "subject_replaced": ["the chisel grinds shirt", "the file refines shirt.", "the whetstone sharpens shirt", "The blade sharpens shirt", "the scissors hone shirt"], "verb_replaced": ["The knife sharpens", "the knife grinds", "the knife polishes shirt.", "the knife hones", "the knife refines"], "object_replaced": ["the knife sharpens cloth", "The knife sharpens fabric", "the knife sharpens blouse", "the knife sharpens garment", "the knife sharpens top."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the knife sharpens shirt\n", "AffectedParaphraseMaker_gptoutput": "\n1. The blade honing fabric\n2. The cutting edge refining cloth\n3. The sharpener refining the garment\n4. The sharpener honing the shirt\n5. The blade refining the shirt", "affected_paraphrase": ["The cutting edge refining cloth", "The sharpener refining the garment", "The blade honing fabric", "The sharpener honing the shirt", "The blade refining the shirt"]}]}
{"inputs": {"id": 400, "prompt": "Shovel peels cream", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Shovel", "verb": "peels", "object": "cream", "neg": null, "prompt_polarity_grounded": "Shovel does not peel cream."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Shovel does not peel cream.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Shovels are tools used for digging. \n2. Cream is a food product, not a material to be dug.", "affected_reasoning": ["Shovels are tools used for digging.", "Cream is food product, not material to be dug."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Shovel peels cream\nsubject token: Shovel\nobject token: cream\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hammer peels cream\n2. Fork peels cream\n3. Knife peels cream\n4. Saw peels cream\n5. Axe peels cream\n\nQ2. Replacements:\n1. Shovel peels juice\n2. Shovel peels milk\n3. Shovel peels soda\n4. Shovel peels water\n5. Shovel peels tea", "subject_replaced": ["Knife peels cream", "Axe peels cream", "Fork peels cream", "Hammer peels cream", "Saw peels cream"], "object_replaced": ["Shovel peels milk", "Shovel peels soda", "Shovel peels tea", "Shovel peels water", "Shovel peels juice"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Shovel peels cream\nsubject token: Shovel\nobject token: cream\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Dig peels cream, Scoop peels cream, Rake peels cream, Spade peels cream, Hoe peels cream.\nQ2. Shovel scoops cream, Shovel gathers cream, Shovel collects cream, Shovel harvests cream, Shovel retrieves cream.\nQ3. Shovel peels yogurt, Shovel peels custard, Shovel peels ice cream, Shovel peels sorbet, Shovel peels pudding.", "subject_replaced": ["Scoop peels cream", "Hoe peels cream.", "Spade peels cream", "Dig peels cream", "Rake peels cream"], "verb_replaced": ["Shovel scoops cream", "Shovel collects cream", "Shovel gathers cream", "Shovel harvests cream", "Shovel retrieves cream."], "object_replaced": ["Shovel peels yogurt", "Shovel peels ice cream", "Shovel peels custard", "Shovel peels pudding.", "Shovel peels sorbet"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Shovel peels cream\n", "AffectedParaphraseMaker_gptoutput": "\n1. Scoop out layers of cream\n2. Dig out slices of cream\n3. Scrape off layers of cream\n4. Dig up sheets of cream\n5. Scrape away layers of cream", "affected_paraphrase": ["Scoop out layers of cream", "Dig up sheets of cream", "Dig out slices of cream", "Scrape away layers of cream", "Scrape off layers of cream"]}]}
{"inputs": {"id": 402, "prompt": "the child slides ship", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "child", "verb": "slides", "object": "ship", "neg": null, "prompt_polarity_grounded": "The child does not slide ship."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The child does not slide ship.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Sliding a ship is not possible because ships are too large and heavy.\n2. Therefore, the child cannot slide ship.", "affected_reasoning": ["Sliding ship is not possible because ships are too large and heavy.", "Therefore, child cannot slide ship."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the child slides ship\nsubject token: child\nobject token: ship\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The cat slides ship\n2. The tree slides ship\n3. The dog slides ship\n4. The house slides ship\n5. The rock slides ship\n\nQ2. Replacements:\n1. The child slides airplane\n2. The child slides car\n3. The child slides train\n4. The child slides boat\n5. The child slides bike", "subject_replaced": ["The tree slides ship", "The cat slides ship", "The dog slides ship", "The house slides ship", "The rock slides ship"], "object_replaced": ["The child slides train", "The child slides airplane", "The child slides car", "The child slides bike", "The child slides boat"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the child slides ship\nsubject token: child\nobject token: ship\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The infant slides ship, the toddler slides ship, the youngster slides ship, the adolescent slides ship, the youngster slides ship.\nQ2. The child glides ship, the child drifts ship, the child coasts ship, the child sails ship, the child skims ship.\nQ3. The child slides boat, the child slides yacht, the child slides cruiser, the child slides dinghy, the child slides raft.", "subject_replaced": ["the youngster slides ship.", "the youngster slides ship", "the toddler slides ship", "the adolescent slides ship", "The infant slides ship"], "verb_replaced": ["the child drifts ship", "The child glides ship", "the child coasts ship", "the child skims ship.", "the child sails ship"], "object_replaced": ["the child slides dinghy", "the child slides raft.", "the child slides cruiser", "the child slides yacht", "The child slides boat"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the child slides ship\n", "AffectedParaphraseMaker_gptoutput": "\n1. The kid is gliding down the boat.\n2. The youngster is coasting along the vessel.\n3. The young one is sailing down the ship.\n4. The tyke is sliding down the ship.\n5. The minor is slipping down the boat.", "affected_paraphrase": ["The tyke is sliding down the ship.", "The youngster is coasting along the vessel.", "The young one is sailing down the ship.", "The kid is gliding down the boat.", "The minor is slipping down the boat."]}]}
{"inputs": {"id": 422, "prompt": "Rabbit drink water", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Rabbit", "verb": "drink", "object": "water", "neg": null, "prompt_polarity_grounded": "Rabbit does not drink water."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Rabbit does not drink water.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nRabbits get their water from the food they eat; they eat mostly plants which contain a lot of water.", "affected_reasoning": ["Rabbits get their water from food they eat; they eat mostly plants which contain lot of water."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Rabbit drink water\nsubject token: Rabbit\nobject token: water\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant drink water\n2. Cat drink water\n3. Dog drink water\n4. Fish drink water\n5. Monkey drink water\n\nQ2. Replacements:\n1. Rabbit drink juice\n2. Rabbit drink milk\n3. Rabbit drink soda\n4. Rabbit drink tea\n5. Rabbit drink coffee", "subject_replaced": ["Dog drink water", "Fish drink water", "Monkey drink water", "Elephant drink water", "Cat drink water"], "object_replaced": ["Rabbit drink milk", "Rabbit drink coffee", "Rabbit drink juice", "Rabbit drink soda", "Rabbit drink tea"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Rabbit drink water\nsubject token: Rabbit\nobject token: water\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. Hare drink water\n2. Bunny drink water\n3. Rodent drink water\n4. Lagomorph drink water\n5. Cottontail drink water\n\nQ2. Variants:\n1. Rabbit gulps water\n2. Rabbit sips water\n3. Rabbit swallows water\n4. Rabbit guzzles water\n5. Rabbit quaffs water\n\nQ3. Variants:\n1. Rabbit drink liquid\n2. Rabbit drink beverage\n3. Rabbit drink juice\n4. Rabbit drink soda\n5. Rabbit drink tea", "subject_replaced": ["Lagomorph drink water", "Bunny drink water", "Cottontail drink water", "Hare drink water", "Rodent drink water"], "verb_replaced": ["Rabbit quaffs water", "Rabbit swallows water", "Rabbit sips water", "Rabbit guzzles water", "Rabbit gulps water"], "object_replaced": ["Rabbit drink beverage", "Rabbit drink liquid", "Rabbit drink juice", "Rabbit drink soda", "Rabbit drink tea"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Rabbit drink water\n", "AffectedParaphraseMaker_gptoutput": "\n1. The rabbit imbibed liquid.\n2. The hare quaffed H2O.\n3. The bunny guzzled the aqua.\n4. The coney consumed the aqua.\n5. The lagomorph sipped the water.", "affected_paraphrase": ["The bunny guzzled the aqua.", "The lagomorph sipped the water.", "The coney consumed the aqua.", "The rabbit imbibed liquid.", "The hare quaffed H2O."]}]}
{"inputs": {"id": 423, "prompt": "man moves table", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "man", "verb": "moves", "object": "table", "neg": null, "prompt_polarity_grounded": "man moves table"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "man moves table. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Man sees table. \n2. Man decides to move table.", "affected_reasoning": ["Man sees table.", "Man decides to move table."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: man moves table\nsubject token: man\nobject token: table\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Cat moves table\n2. Child moves table\n3. Teacher moves table\n4. Soldier moves table\n5. Artist moves table\n\nQ2. Replacements:\n1. Man moves chair\n2. Man moves book\n3. Man moves pencil\n4. Man moves computer\n5. Man moves plant", "subject_replaced": ["Teacher moves table", "Child moves table", "Cat moves table", "Soldier moves table", "Artist moves table"], "object_replaced": ["Man moves chair", "Man moves book", "Man moves computer", "Man moves plant", "Man moves pencil"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: man moves table\nsubject token: man\nobject token: table\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Person moves table, individual shifts table, human carries table, man transports table, guy relocates table.\nQ2. Man lifts table, man drags table, man pushes table, man slides table, man hauls table.\nQ3. Man moves furniture, man moves desk, man moves bench, man moves stool, man moves counter.", "subject_replaced": ["man transports table", "individual shifts table", "Person moves table", "human carries table", "guy relocates table."], "verb_replaced": ["man pushes table", "man drags table", "man slides table", "man hauls table.", "Man lifts table"], "object_replaced": ["Man moves furniture", "man moves stool", "man moves counter.", "man moves bench", "man moves desk"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: man moves table\n", "AffectedParaphraseMaker_gptoutput": "\n1. The man shifted the table.\n2. The man relocated the table.\n3. The man repositioned the table.\n4. The man changed the table's location.\n5. The man adjusted the table's position.", "affected_paraphrase": ["The man relocated the table.", "The man changed the table's location.", "The man adjusted the table's position.", "The man repositioned the table.", "The man shifted the table."]}]}
{"inputs": {"id": 428, "prompt": "a pen draws oil", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "pen", "verb": "draws", "object": "oil", "neg": null, "prompt_polarity_grounded": "a pen draws oil"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a pen draws oil. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nOil is a liquid, so it can flow through the pen's tip. The pen's tip is designed to draw lines, so it can draw lines with the oil.", "affected_reasoning": ["Oil is liquid, so it can flow through pen's tip", "The pen's tip is designed to draw lines, so it can draw lines with oil."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a pen draws oil\nsubject token: pen\nobject token: oil\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A tree draws oil\n2. A car draws oil\n3. A dog draws oil\n4. A book draws oil\n5. A chair draws oil\n\nQ2. Replacements:\n1. A pen draws water\n2. A pen draws air\n3. A pen draws fire\n4. A pen draws soil\n5. A pen draws snow", "subject_replaced": ["A tree draws oil", "A car draws oil", "A dog draws oil", "A book draws oil", "A chair draws oil"], "object_replaced": ["A pen draws air", "A pen draws fire", "A pen draws soil", "A pen draws water", "A pen draws snow"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a pen draws oil\nsubject token: pen\nobject token: oil\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A pencil draws oil, a marker draws oil, a crayon draws oil, a stylus draws oil, a brush draws oil.\nQ2. A pen paints oil, a pen scribbles oil, a pen traces oil, a pen outlines oil, a pen sketches oil.\nQ3. A pen draws lubricant, a pen draws grease, a pen draws petroleum, a pen draws fuel, a pen draws petrol.", "subject_replaced": ["a crayon draws oil", "a marker draws oil", "a brush draws oil.", "a stylus draws oil", "A pencil draws oil"], "verb_replaced": ["a pen traces oil", "A pen paints oil", "a pen scribbles oil", "a pen sketches oil.", "a pen outlines oil"], "object_replaced": ["A pen draws lubricant", "a pen draws grease", "a pen draws petroleum", "a pen draws fuel", "a pen draws petrol."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a pen draws oil\n", "AffectedParaphraseMaker_gptoutput": "\n1. A pen applies oil to a surface.\n2. A pen is used to create an oil painting.\n3. A pen is used to create an image with oil.\n4. A pen is used to create a design with oil.\n5. A pen is used to create a picture with oil.", "affected_paraphrase": ["A pen is used to create an oil painting.", "A pen is used to create a design with oil.", "A pen is used to create a picture with oil.", "A pen applies oil to a surface.", "A pen is used to create an image with oil."]}]}
{"inputs": {"id": 443, "prompt": "Skyscraper eats man", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Skyscraper", "verb": "eats", "object": "man", "neg": null, "prompt_polarity_grounded": "Skyscraper does not eat man."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Skyscraper does not eat man.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Skyscrapers are inanimate objects. \n2. Inanimate objects cannot eat.", "affected_reasoning": ["Skyscrapers are inanimate objects.", "Inanimate objects cannot eat."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Skyscraper eats man\nsubject token: Skyscraper\nobject token: man\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant eats man\n2. Volcano eats man\n3. Moon eats man\n4. Ocean eats man\n5. Tree eats man\n\nQ2. Replacements:\n1. Skyscraper eats woman\n2. Skyscraper eats dog\n3. Skyscraper eats bird\n4. Skyscraper eats fish\n5. Skyscraper eats mouse", "subject_replaced": ["Tree eats man", "Elephant eats man", "Moon eats man", "Volcano eats man", "Ocean eats man"], "object_replaced": ["Skyscraper eats fish", "Skyscraper eats dog", "Skyscraper eats mouse", "Skyscraper eats bird", "Skyscraper eats woman"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Skyscraper eats man\nsubject token: Skyscraper\nobject token: man\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Tower devours man, Building swallows man, High-rise consumes man, Edifice gobbles man, Structure ingests man\nQ2. Skyscraper devours man, Skyscraper swallows man, Skyscraper consumes man, Skyscraper gobbles man, Skyscraper ingests man\nQ3. Skyscraper eats person, Skyscraper eats individual, Skyscraper eats human, Skyscraper eats being, Skyscraper eats creature", "subject_replaced": ["Building swallows man", "Structure ingests man", "High-rise consumes man", "Tower devours man", "Edifice gobbles man"], "verb_replaced": ["Skyscraper swallows man", "Skyscraper gobbles man", "Skyscraper consumes man", "Skyscraper ingests man", "Skyscraper devours man"], "object_replaced": ["Skyscraper eats being", "Skyscraper eats creature", "Skyscraper eats individual", "Skyscraper eats person", "Skyscraper eats human"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Skyscraper eats man\n", "AffectedParaphraseMaker_gptoutput": "\n1. A tall building devours a human.\n2. A person is consumed by a high-rise.\n3. A man is swallowed up by a skyscraper.\n4. A giant structure consumes a man.\n5. A tall edifice devours a person.", "affected_paraphrase": ["A tall edifice devours a person.", "A giant structure consumes a man.", "A tall building devours a human.", "A person is consumed by a high-rise.", "A man is swallowed up by a skyscraper."]}]}
{"inputs": {"id": 448, "prompt": "Tree vents smoke", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Tree", "verb": "vents", "object": "smoke", "neg": null, "prompt_polarity_grounded": "Tree does not vent smoke."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Tree does not vent smoke.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Trees produce oxygen through photosynthesis. \n2. Oxygen does not produce smoke.", "affected_reasoning": ["Trees produce oxygen through photosynthesis.", "Oxygen does not produce smoke."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Tree vents smoke\nsubject token: Tree\nobject token: smoke\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Car vents smoke\n2. House vents smoke\n3. Plane vents smoke\n4. Boat vents smoke\n5. Lamp vents smoke\n\nQ2. Replacements:\n1. Tree vents fog\n2. Tree vents steam\n3. Tree vents dust\n4. Tree vents rain\n5. Tree vents snow", "subject_replaced": ["Lamp vents smoke", "Plane vents smoke", "House vents smoke", "Car vents smoke", "Boat vents smoke"], "object_replaced": ["Tree vents rain", "Tree vents fog", "Tree vents snow", "Tree vents dust", "Tree vents steam"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Tree vents smoke\nsubject token: Tree\nobject token: smoke\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Trunk vents smoke\n2. Branch vents smoke\n3. Sapling vents smoke\n4. Stem vents smoke\n5. Log vents smoke\n\nQ2.\n1. Tree emits smoke\n2. Tree exhales smoke\n3. Tree releases smoke\n4. Tree spews smoke\n5. Tree vents out smoke\n\nQ3.\n1. Tree vents fumes\n2. Tree vents vapor\n3. Tree vents haze\n4. Tree vents smog\n5. Tree vents exhaust", "subject_replaced": ["Branch vents smoke", "Log vents smoke", "Stem vents smoke", "Trunk vents smoke", "Sapling vents smoke"], "verb_replaced": ["Tree emits smoke", "Tree spews smoke", "Tree vents out smoke", "Tree releases smoke", "Tree exhales smoke"], "object_replaced": ["Tree vents exhaust", "Tree vents haze", "Tree vents vapor", "Tree vents smog", "Tree vents fumes"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Tree vents smoke\n", "AffectedParaphraseMaker_gptoutput": "\n1. Trees exhale smoke\n2. Trees emit smoke\n3. Trees give off smoke\n4. Trees produce smoke\n5. Trees spew smoke", "affected_paraphrase": ["Trees give off smoke", "Trees produce smoke", "Trees emit smoke", "Trees exhale smoke", "Trees spew smoke"]}]}
{"inputs": {"id": 455, "prompt": "a foot squashes ant", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "foot", "verb": "squashes", "object": "ant", "neg": null, "prompt_polarity_grounded": "a foot squashes ant"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a foot squashes ant. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nAnt gets squashed. Ant can't move.", "affected_reasoning": ["Ant gets squashed", "Ant can't move."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a foot squashes ant\nsubject token: foot\nobject token: ant\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A hand squashes ant\n2. A tree squashes ant\n3. A rock squashes ant\n4. A cloud squashes ant\n5. A car squashes ant\n\nQ2. Replacements:\n1. A foot squashes spider\n2. A foot squashes bird\n3. A foot squashes fish\n4. A foot squashes dog\n5. A foot squashes cat", "subject_replaced": ["A car squashes ant", "A cloud squashes ant", "A tree squashes ant", "A rock squashes ant", "A hand squashes ant"], "object_replaced": ["A foot squashes spider", "A foot squashes bird", "A foot squashes fish", "A foot squashes dog", "A foot squashes cat"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a foot squashes ant\nsubject token: foot\nobject token: ant\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A leg squashes ant, A limb squashes ant, A toe squashes ant, A heel squashes ant, A paw squashes ant.\nQ2. A foot crushes ant, A foot pulverizes ant, A foot smashes ant, A foot grinds ant, A foot flattens ant.\nQ3. A foot squashes insect, A foot squashes bug, A foot squashes beetle, A foot squashes spider, A foot squashes fly.", "subject_replaced": ["A leg squashes ant", "A heel squashes ant", "A paw squashes ant.", "A toe squashes ant", "A limb squashes ant"], "verb_replaced": ["A foot pulverizes ant", "A foot smashes ant", "A foot flattens ant.", "A foot grinds ant", "A foot crushes ant"], "object_replaced": ["A foot squashes spider", "A foot squashes fly.", "A foot squashes insect", "A foot squashes bug", "A foot squashes beetle"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a foot squashes ant\n", "AffectedParaphraseMaker_gptoutput": "\n1. A foot crushes an ant.\n2. An ant is squashed by a foot.\n3. A foot flattens an ant.\n4. A foot smashes an ant.\n5. A foot stomps on an ant.", "affected_paraphrase": ["An ant is squashed by a foot.", "A foot smashes an ant.", "A foot flattens an ant.", "A foot stomps on an ant.", "A foot crushes an ant."]}]}
{"inputs": {"id": 456, "prompt": "Girl cook with spatula", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Girl", "verb": "cook", "object": "spatula", "neg": null, "prompt_polarity_grounded": "Girl not cook with spatula."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Girl not cook with spatula.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Spatulas are used for stirring and flipping food.\n2. Cooking requires more than stirring and flipping.", "affected_reasoning": ["Spatulas are used for stirring and flipping food.", "Cooking requires more than stirring and flipping."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Girl cook with spatula\nsubject token: Girl\nobject token: spatula\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Boy cook with spatula\n2. Child cook with spatula\n3. Woman cook with spatula\n4. Teenager cook with spatula\n5. Adult cook with spatula\n\nQ2. Replacements:\n1. Girl cook with spoon\n2. Girl cook with ladle\n3. Girl cook with whisk\n4. Girl cook with tongs\n5. Girl cook with knife", "subject_replaced": ["Teenager cook with spatula", "Adult cook with spatula", "Boy cook with spatula", "Woman cook with spatula", "Child cook with spatula"], "object_replaced": ["Girl cook with knife", "Girl cook with spoon", "Girl cook with ladle", "Girl cook with tongs", "Girl cook with whisk"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Girl cook with spatula\nsubject token: Girl\nobject token: spatula\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. Woman cook with spatula\n2. Chef cook with spatula\n3. Lady cook with spatula\n4. Girl fry with spatula\n5. Child cook with spatula\n\nQ2. Variants:\n1. Girl preparing with spatula\n2. Girl cooking with spatula\n3. Girl stirring with spatula\n4. Girl flipping with spatula\n5. Girl saut\u00e9ing with spatula\n\nQ3. Variants:\n1. Girl cook with spoon\n2. Girl cook with ladle\n3. Girl cook with turner\n4. Girl cook with whisk\n5. Girl cook with tongs", "subject_replaced": ["Chef cook with spatula", "Lady cook with spatula", "Girl fry with spatula", "Woman cook with spatula", "Child cook with spatula"], "verb_replaced": ["Girl cooking with spatula", "Girl saut\u00e9ing with spatula", "Girl preparing with spatula", "Girl flipping with spatula", "Girl stirring with spatula"], "object_replaced": ["Girl cook with spoon", "Girl cook with turner", "Girl cook with ladle", "Girl cook with tongs", "Girl cook with whisk"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Girl cook with spatula\n", "AffectedParaphraseMaker_gptoutput": "\n1. The female chef was using a spatula.\n2. The young lady was wielding a spatula in the kitchen.\n3. The gal was flipping food with a spatula.\n4. The female was stirring food with a spatula.\n5. The girl was manipulating food with a spatula.", "affected_paraphrase": ["The gal was flipping food with a spatula.", "The female chef was using a spatula.", "The female was stirring food with a spatula.", "The young lady was wielding a spatula in the kitchen.", "The girl was manipulating food with a spatula."]}]}
{"inputs": {"id": 463, "prompt": "a scooter spills shirt", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "scooter", "verb": "spills", "object": "shirt", "neg": null, "prompt_polarity_grounded": "A scooter does not spill shirt."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A scooter does not spill shirt.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. A scooter does not have a container to hold a shirt. \n2. Therefore, it cannot spill a shirt.", "affected_reasoning": ["A scooter does not have container to hold shirt.", "Therefore, it cannot spill shirt."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a scooter spills shirt\nsubject token: scooter\nobject token: shirt\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1.\n1. a balloon spills shirt\n2. a car spills shirt\n3. a dog spills shirt\n4. a tree spills shirt\n5. a pencil spills shirt\n\nQ2.\n1. a scooter spills pencil\n2. a scooter spills book\n3. a scooter spills balloon\n4. a scooter spills car\n5. a scooter spills tree", "subject_replaced": ["a dog spills shirt", "a car spills shirt", "a pencil spills shirt", "a balloon spills shirt", "a tree spills shirt"], "object_replaced": ["a scooter spills balloon", "a scooter spills car", "a scooter spills pencil", "a scooter spills book", "a scooter spills tree"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a scooter spills shirt\nsubject token: scooter\nobject token: shirt\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A moped spills shirt, A motorbike spills shirt, A Vespa spills shirt, A cycle spills shirt, A skateboard spills shirt.\n\nQ2. A scooter upends shirt, A scooter dumps shirt, A scooter flings shirt, A scooter hurls shirt, A scooter tosses shirt.\n\nQ3. A scooter spills blouse, A scooter spills t-shirt, A scooter spills jersey, A scooter spills tunic, A scooter spills top.", "subject_replaced": ["A skateboard spills shirt.", "A Vespa spills shirt", "A motorbike spills shirt", "A moped spills shirt", "A cycle spills shirt"], "verb_replaced": ["A scooter flings shirt", "A scooter hurls shirt", "A scooter upends shirt", "A scooter tosses shirt.", "A scooter dumps shirt"], "object_replaced": ["A scooter spills t-shirt", "A scooter spills tunic", "A scooter spills top.", "A scooter spills jersey", "A scooter spills blouse"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a scooter spills shirt\n", "AffectedParaphraseMaker_gptoutput": "\n1. A scooter dumps a shirt.\n2. A scooter overturns a shirt.\n3. A scooter upends a shirt.\n4. A scooter tips over a shirt.\n5. A scooter tumbles a shirt.", "affected_paraphrase": ["A scooter tumbles a shirt.", "A scooter overturns a shirt.", "A scooter upends a shirt.", "A scooter tips over a shirt.", "A scooter dumps a shirt."]}]}
{"inputs": {"id": 464, "prompt": "Hand grips pan", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Hand", "verb": "grips", "object": "pan", "neg": null, "prompt_polarity_grounded": "Hand grips pan"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Hand grips pan. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Person grabs handle.\n2. Handle is attached to pan.", "affected_reasoning": ["Person grabs handle.", "Handle is attached to pan."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Hand grips pan\nsubject token: Hand\nobject token: pan\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Foot grips pan\n2. Arm grips pan\n3. Finger grips pan\n4. Leg grips pan\n5. Head grips pan\n\nQ2. Replacements:\n1. Hand grips spoon\n2. Hand grips fork\n3. Hand grips knife\n4. Hand grips cup\n5. Hand grips plate", "subject_replaced": ["Finger grips pan", "Foot grips pan", "Leg grips pan", "Arm grips pan", "Head grips pan"], "object_replaced": ["Hand grips cup", "Hand grips fork", "Hand grips spoon", "Hand grips plate", "Hand grips knife"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Hand grips pan\nsubject token: Hand\nobject token: pan\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Fingers clasp pan, Hands clasp pan, Grasp pan, Clutch pan, Clasp pan\nQ2. Hand grips grasp, Hand holds grasp, Hand clasps grasp, Hand clutches grasp, Hand grasps grasp\nQ3. Hand grips skillet, Hand grips pot, Hand grips frying pan, Hand grips saucepan, Hand grips Dutch oven", "subject_replaced": ["Hands clasp pan", "Clutch pan", "Fingers clasp pan"], "verb_replaced": ["Hand grips grasp", "Hand clutches grasp", "Hand clasps grasp", "Hand grasps grasp", "Hand holds grasp"], "object_replaced": ["Hand grips skillet", "Hand grips pot", "Hand grips Dutch oven", "Hand grips saucepan", "Hand grips frying pan"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Hand grips pan\n", "AffectedParaphraseMaker_gptoutput": "\n1. Grasping handle of skillet \n2. Clutching the handle of the frying pan \n3. Seizing the handle of the pan \n4. Clasping the handle of the pot \n5. Gripping the handle of the cooking vessel", "affected_paraphrase": ["Clutching the handle of the frying pan", "Grasping handle of skillet", "Seizing the handle of the pan", "Clasping the handle of the pot", "Gripping the handle of the cooking vessel"]}]}
{"inputs": {"id": 469, "prompt": "a spatula squashes ant", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "spatula", "verb": "squashes", "object": "ant", "neg": null, "prompt_polarity_grounded": "a spatula squashes ant"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a spatula squashes ant. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The spatula presses down on the ant. \n2. The ant is squashed.", "affected_reasoning": ["The spatula presses down on ant.", "The ant is squashed."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a spatula squashes ant\nsubject token: spatula\nobject token: ant\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a balloon squashes ant\n2. a pencil squashes ant\n3. a spoon squashes ant\n4. a hammer squashes ant\n5. a fork squashes ant\n\nQ2. Replacements:\n1. a spatula squashes apple\n2. a spatula squashes banana\n3. a spatula squashes dog\n4. a spatula squashes cat\n5. a spatula squashes mouse", "subject_replaced": ["a pencil squashes ant", "a spoon squashes ant", "a fork squashes ant", "a balloon squashes ant", "a hammer squashes ant"], "object_replaced": ["a spatula squashes banana", "a spatula squashes apple", "a spatula squashes dog", "a spatula squashes cat", "a spatula squashes mouse"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a spatula squashes ant\nsubject token: spatula\nobject token: ant\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A spoon squashes ant, A ladle squashes ant, A turner squashes ant, A flipper squashes ant, A scraper squashes ant.\nQ2. A spatula crushes ant, A spatula mashes ant, A spatula smashes ant, A spatula pulverizes ant, A spatula grinds ant.\nQ3. A spatula squashes bug, A spatula squashes insect, A spatula squashes beetle, A spatula squashes fly, A spatula squashes spider.", "subject_replaced": ["A turner squashes ant", "A flipper squashes ant", "A scraper squashes ant.", "A spoon squashes ant", "A ladle squashes ant"], "verb_replaced": ["A spatula mashes ant", "A spatula pulverizes ant", "A spatula grinds ant.", "A spatula smashes ant", "A spatula crushes ant"], "object_replaced": ["A spatula squashes fly", "A spatula squashes beetle", "A spatula squashes insect", "A spatula squashes spider.", "A spatula squashes bug"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a spatula squashes ant\n", "AffectedParaphraseMaker_gptoutput": "\n1. A spatula crushes an ant.\n2. A spatula flattens an ant.\n3. A spatula compresses an ant.\n4. A spatula smashes an ant.\n5. A spatula pulverizes an ant.", "affected_paraphrase": ["A spatula flattens an ant.", "A spatula smashes an ant.", "A spatula crushes an ant.", "A spatula pulverizes an ant.", "A spatula compresses an ant."]}]}
{"inputs": {"id": 470, "prompt": "mouth puffs water", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "mouth", "verb": "puffs", "object": "water", "neg": null, "prompt_polarity_grounded": "Mouth does not puff water."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Mouth does not puff water.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Fish use their mouths to suck in water. \n2. Fish then use their gills to extract oxygen from the water.", "affected_reasoning": ["Fish use their mouths to suck in water.", "Fish then use their gills to extract oxygen from water."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: mouth puffs water\nsubject token: mouth\nobject token: water\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hand puffs water\n2. Nose puffs water\n3. Foot puffs water\n4. Ear puffs water\n5. Eye puffs water\n\nQ2. Replacements:\n1. Mouth puffs milk\n2. Mouth puffs juice\n3. Mouth puffs soda\n4. Mouth puffs tea\n5. Mouth puffs beer", "subject_replaced": ["Hand puffs water", "Foot puffs water", "Ear puffs water", "Nose puffs water", "Eye puffs water"], "object_replaced": ["Mouth puffs tea", "Mouth puffs beer", "Mouth puffs juice", "Mouth puffs milk", "Mouth puffs soda"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: mouth puffs water\nsubject token: mouth\nobject token: water\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. lips puffs water\n2. jaws puffs water\n3. teeth puffs water\n4. gums puffs water\n5. palate puffs water\n\nQ2.\n1. mouth spouts water\n2. mouth ejects water\n3. mouth squirts water\n4. mouth gushes water\n5. mouth spurts water\n\nQ3.\n1. mouth puffs liquid\n2. mouth puffs fluid\n3. mouth puffs juice\n4. mouth puffs beverage\n5. mouth puffs broth", "subject_replaced": ["jaws puffs water", "gums puffs water", "palate puffs water", "teeth puffs water", "lips puffs water"], "verb_replaced": ["mouth spouts water", "mouth gushes water", "mouth ejects water", "mouth squirts water", "mouth spurts water"], "object_replaced": ["mouth puffs juice", "mouth puffs broth", "mouth puffs beverage", "mouth puffs fluid", "mouth puffs liquid"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: mouth puffs water\n", "AffectedParaphraseMaker_gptoutput": "\n1. Oral exhalations spray liquid\n2. Spitting out liquid from the mouth\n3. Blowing out liquid from the lips\n4. Expelling liquid from the oral cavity\n5. Spewing liquid from the mouth", "affected_paraphrase": ["Expelling liquid from the oral cavity", "Spewing liquid from the mouth", "Oral exhalations spray liquid", "Blowing out liquid from the lips", "Spitting out liquid from the mouth"]}]}
{"inputs": {"id": 484, "prompt": "Pillow rubs pebbles", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Pillow", "verb": "rubs", "object": "pebbles", "neg": null, "prompt_polarity_grounded": "Pillow rubs pebbles"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Pillow rubs pebbles. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nPillow wants attention. \nPebbles provide comfort.", "affected_reasoning": ["Pillow wants attention.", "Pebbles provide comfort."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Pillow rubs pebbles\nsubject token: Pillow\nobject token: pebbles\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Carpet rubs pebbles\n2. Chair rubs pebbles\n3. Table rubs pebbles\n4. Pencil rubs pebbles\n5. Book rubs pebbles\n\nQ2. Replacements:\n1. Pillow rubs stones\n2. Pillow rubs leaves\n3. Pillow rubs books\n4. Pillow rubs pencils\n5. Pillow rubs chairs", "subject_replaced": ["Carpet rubs pebbles", "Table rubs pebbles", "Pencil rubs pebbles", "Book rubs pebbles", "Chair rubs pebbles"], "object_replaced": ["Pillow rubs pencils", "Pillow rubs leaves", "Pillow rubs chairs", "Pillow rubs stones", "Pillow rubs books"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Pillow rubs pebbles\nsubject token: Pillow\nobject token: pebbles\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Cushion rubs pebbles, Bolster rubs pebbles, Mattress rubs pebbles, Blanket rubs pebbles, Quilt rubs pebbles\nQ2. Pillow caresses pebbles, Pillow massages pebbles, Pillow strokes pebbles, Pillow pats pebbles, Pillow rubs pebbles\nQ3. Pillow rubs stones, Pillow rubs gravel, Pillow rubs rocks, Pillow rubs marbles, Pillow rubs pebbles", "subject_replaced": ["Quilt rubs pebbles", "Mattress rubs pebbles", "Cushion rubs pebbles", "Blanket rubs pebbles", "Bolster rubs pebbles"], "verb_replaced": ["Pillow caresses pebbles", "Pillow strokes pebbles", "Pillow pats pebbles", "Pillow massages pebbles", "Pillow rubs pebbles"], "object_replaced": ["Pillow rubs gravel", "Pillow rubs rocks", "Pillow rubs marbles", "Pillow rubs stones", "Pillow rubs pebbles"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Pillow rubs pebbles\n", "AffectedParaphraseMaker_gptoutput": "\n1. Caressing cushions with stones\n2. Massaging pillows with rocks\n3. Manipulating pillows with pebbles\n4. Tenderly rubbing pillows with stones\n5. Gently stroking pillows with pebbles", "affected_paraphrase": ["Caressing cushions with stones", "Manipulating pillows with pebbles", "Massaging pillows with rocks", "Tenderly rubbing pillows with stones", "Gently stroking pillows with pebbles"]}]}
{"inputs": {"id": 494, "prompt": "shirt cleans stairs", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "shirt", "verb": "cleans", "object": "stairs", "neg": null, "prompt_polarity_grounded": "shirt cleans stairs"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "shirt cleans stairs. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. T-shirt absorbs liquid.\n2. Liquid cleans stairs.", "affected_reasoning": ["T-shirt absorbs liquid.", "Liquid cleans stairs."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: shirt cleans stairs\nsubject token: shirt\nobject token: stairs\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Pen cleans stairs\n2. Car cleans stairs\n3. Book cleans stairs\n4. Tree cleans stairs\n5. Dog cleans stairs\n\nQ2. Replacements:\n1. Shirt cleans table\n2. Shirt cleans couch\n3. Shirt cleans bed\n4. Shirt cleans floor\n5. Shirt cleans window", "subject_replaced": ["Tree cleans stairs", "Book cleans stairs", "Car cleans stairs", "Dog cleans stairs", "Pen cleans stairs"], "object_replaced": ["Shirt cleans window", "Shirt cleans couch", "Shirt cleans table", "Shirt cleans floor", "Shirt cleans bed"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: shirt cleans stairs\nsubject token: shirt\nobject token: stairs\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Blouse cleans stairs\n2. Garment cleans stairs\n3. Top cleans stairs\n4. Tee cleans stairs\n5. Apparel cleans stairs\n\nQ2.\n1. Shirt scrubs stairs\n2. Shirt wipes stairs\n3. Shirt dusts stairs\n4. Shirt polishes stairs\n5. Shirt mops stairs\n\nQ3.\n1. Shirt cleans steps\n2. Shirt cleans risers\n3. Shirt cleans treads\n4. Shirt cleans banisters\n5. Shirt cleans landings", "subject_replaced": ["Blouse cleans stairs", "Tee cleans stairs", "Top cleans stairs", "Apparel cleans stairs", "Garment cleans stairs"], "verb_replaced": ["Shirt wipes stairs", "Shirt scrubs stairs", "Shirt polishes stairs", "Shirt mops stairs", "Shirt dusts stairs"], "object_replaced": ["Shirt cleans banisters", "Shirt cleans treads", "Shirt cleans risers", "Shirt cleans landings", "Shirt cleans steps"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: shirt cleans stairs\n", "AffectedParaphraseMaker_gptoutput": "\n1. A shirt is used to scrub the stairs.\n2. A shirt is employed to clean the stairs.\n3. A shirt is utilized to wipe down the stairs.\n4. A shirt is utilized to mop the stairs.\n5. A shirt is utilized to sanitize the stairs.", "affected_paraphrase": ["A shirt is utilized to sanitize the stairs.", "A shirt is utilized to wipe down the stairs.", "A shirt is employed to clean the stairs.", "A shirt is utilized to mop the stairs.", "A shirt is used to scrub the stairs."]}]}
{"inputs": {"id": 496, "prompt": "a boat vents air", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "boat", "verb": "vents", "object": "air", "neg": null, "prompt_polarity_grounded": "a boat vents air"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a boat vents air. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nBoats need to release air to prevent a build up of pressure, which can cause damage. Therefore, boats have vents to allow air to escape.", "affected_reasoning": ["Boats need to release air to prevent build up of pressure, which can cause damage", "Therefore, boats have vents to allow air to escape."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a boat vents air\nsubject token: boat\nobject token: air\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a car vents air\n2. a plane vents air\n3. a train vents air\n4. a bus vents air\n5. a truck vents air\n\nQ2. Replacements:\n1. a boat vents water\n2. a boat vents fire\n3. a boat vents smoke\n4. a boat vents steam\n5. a boat vents electricity", "subject_replaced": ["a plane vents air", "a car vents air", "a train vents air", "a truck vents air", "a bus vents air"], "object_replaced": ["a boat vents water", "a boat vents steam", "a boat vents electricity", "a boat vents fire", "a boat vents smoke"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a boat vents air\nsubject token: boat\nobject token: air\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A vessel vents air, A ship vents air, A yacht vents air, A canoe vents air, A dinghy vents air.\nQ2. A boat releases air, A boat exhales air, A boat spews air, A boat vents out air, A boat discharges air.\nQ3. A boat vents vapor, A boat vents oxygen, A boat vents gas, A boat vents wind, A boat vents atmosphere.", "subject_replaced": ["A ship vents air", "A dinghy vents air.", "A vessel vents air", "A yacht vents air", "A canoe vents air"], "verb_replaced": ["A boat discharges air.", "A boat vents out air", "A boat exhales air", "A boat spews air", "A boat releases air"], "object_replaced": ["A boat vents gas", "A boat vents wind", "A boat vents vapor", "A boat vents atmosphere.", "A boat vents oxygen"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a boat vents air\n", "AffectedParaphraseMaker_gptoutput": "\n1. A vessel releases air.\n2. A boat expels air.\n3. A watercraft emits air.\n4. A ship exhales air.\n5. A craft vents air.", "affected_paraphrase": ["A watercraft emits air.", "A vessel releases air.", "A craft vents air.", "A boat expels air.", "A ship exhales air."]}]}
{"inputs": {"id": 499, "prompt": "Worm plucks apple", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Worm", "verb": "plucks", "object": "apple", "neg": null, "prompt_polarity_grounded": "Worm does not pluck apple."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Worm does not pluck apple.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Worms eat organic matter in the soil.\n2. Apples are not organic matter.", "affected_reasoning": ["Worms eat organic matter in soil.", "Apples are not organic matter."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Worm plucks apple\nsubject token: Worm\nobject token: apple\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant plucks apple\n2. Cat plucks apple\n3. Bird plucks apple\n4. Fish plucks apple\n5. Mouse plucks apple\n\nQ2. Replacements:\n1. Worm plucks banana\n2. Worm plucks orange\n3. Worm plucks pear\n4. Worm plucks strawberry\n5. Worm plucks watermelon", "subject_replaced": ["Cat plucks apple", "Mouse plucks apple", "Bird plucks apple", "Elephant plucks apple", "Fish plucks apple"], "object_replaced": ["Worm plucks banana", "Worm plucks orange", "Worm plucks watermelon", "Worm plucks strawberry", "Worm plucks pear"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Worm plucks apple\nsubject token: Worm\nobject token: apple\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Caterpillar plucks apple\n2. Beetle plucks apple\n3. Larva plucks apple\n4. Maggot plucks apple\n5. Grub plucks apple\n\nQ2.\n1. Worm snatches apple\n2. Worm grabs apple\n3. Worm clutches apple\n4. Worm plucks up apple\n5. Worm reaps apple\n\nQ3.\n1. Worm plucks pear\n2. Worm plucks peach\n3. Worm plucks mango\n4. Worm plucks citrus\n5. Worm plucks plum", "subject_replaced": ["Grub plucks apple", "Maggot plucks apple", "Caterpillar plucks apple", "Beetle plucks apple", "Larva plucks apple"], "verb_replaced": ["Worm snatches apple", "Worm clutches apple", "Worm plucks up apple", "Worm reaps apple", "Worm grabs apple"], "object_replaced": ["Worm plucks plum", "Worm plucks citrus", "Worm plucks mango", "Worm plucks peach", "Worm plucks pear"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Worm plucks apple\n", "AffectedParaphraseMaker_gptoutput": "\n1. The worm extracts the apple.\n2. The worm harvests the apple.\n3. The worm gathers the apple.\n4. The worm collects the apple.\n5. The worm takes the apple.", "affected_paraphrase": ["The worm gathers the apple.", "The worm harvests the apple.", "The worm collects the apple.", "The worm takes the apple.", "The worm extracts the apple."]}]}
{"inputs": {"id": 500, "prompt": "girl rides log", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "girl", "verb": "rides", "object": "log", "neg": null, "prompt_polarity_grounded": "girl rides log"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "girl rides log. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Girl stands on log.\n2. Log moves, girl rides log.", "affected_reasoning": ["Girl stands on log.", "Log moves, girl rides log."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: girl rides log\nsubject token: girl\nobject token: log\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Boy rides log\n2. Child rides log\n3. Woman rides log\n4. Puppy rides log\n5. Kid rides log\n\nQ2. Replacements:\n1. Girl rides boat\n2. Girl rides car\n3. Girl rides bike\n4. Girl rides balloon\n5. Girl rides train", "subject_replaced": ["Kid rides log", "Child rides log", "Boy rides log", "Woman rides log", "Puppy rides log"], "object_replaced": ["Girl rides train", "Girl rides car", "Girl rides bike", "Girl rides boat", "Girl rides balloon"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: girl rides log\nsubject token: girl\nobject token: log\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. Woman rides log\n2. Lady rides log\n3. Girl navigates log\n4. Maiden rides log\n5. Lass rides log\n\nQ2. Variants:\n1. Girl drives log\n2. Girl pilots log\n3. Girl sails log\n4. Girl steers log\n5. Girl paddles log\n\nQ3. Variants:\n1. Girl rides raft\n2. Girl rides canoe\n3. Girl rides timber\n4. Girl rides driftwood\n5. Girl rides barge", "subject_replaced": ["Lady rides log", "Lass rides log", "Girl navigates log", "Woman rides log", "Maiden rides log"], "verb_replaced": ["Girl paddles log", "Girl sails log", "Girl drives log", "Girl pilots log", "Girl steers log"], "object_replaced": ["Girl rides barge", "Girl rides driftwood", "Girl rides timber", "Girl rides raft", "Girl rides canoe"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: girl rides log\n", "AffectedParaphraseMaker_gptoutput": "\n1. Female navigates timber\n2. Maiden traverses log\n3. Lassie pilots lumber\n4. Young lady pilots timber\n5. She rides the log", "affected_paraphrase": ["Young lady pilots timber", "She rides the log", "Lassie pilots lumber", "Female navigates timber", "Maiden traverses log"]}]}
{"inputs": {"id": 501, "prompt": "Hay digs dirt", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Hay", "verb": "digs", "object": "dirt", "neg": null, "prompt_polarity_grounded": "Hay does not dig dirt."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Hay does not dig dirt.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Hay is a type of grass. \n2. Grass does not dig dirt.", "affected_reasoning": ["Hay is type of grass.", "Grass does not dig dirt."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Hay digs dirt\nsubject token: Hay\nobject token: dirt\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hay skates ice\n2. Hay paints canvas\n3. Hay types words\n4. Hay plays music\n5. Hay builds houses\n\nQ2. Replacements:\n1. Hay digs clouds\n2. Hay digs stars\n3. Hay digs paper\n4. Hay digs books\n5. Hay digs stones", "subject_replaced": ["Hay types words", "Hay paints canvas", "Hay builds houses", "Hay plays music", "Hay skates ice"], "object_replaced": ["Hay digs paper", "Hay digs clouds", "Hay digs books", "Hay digs stones", "Hay digs stars"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Hay digs dirt\nsubject token: Hay\nobject token: dirt\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. He shovels dirt, He excavates dirt, He scoops dirt, He digs up dirt, He burrows dirt.\nQ2. Hay excavates dirt, Hay scoops dirt, Hay unearths dirt, Hay delves dirt, Hay rakes dirt.\nQ3. Hay digs sand, Hay digs soil, Hay digs gravel, Hay digs clay, Hay digs pebbles.", "subject_replaced": ["He excavates dirt", "He digs up dirt", "He shovels dirt", "He scoops dirt", "He burrows dirt."], "verb_replaced": ["Hay unearths dirt", "Hay rakes dirt.", "Hay delves dirt", "Hay scoops dirt", "Hay excavates dirt"], "object_replaced": ["Hay digs soil", "Hay digs sand", "Hay digs gravel", "Hay digs pebbles.", "Hay digs clay"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Hay digs dirt\n", "AffectedParaphraseMaker_gptoutput": "\n1. Hay is excavating soil\n2. Hay is burrowing into the earth\n3. Hay is scooping up dirt\n4. Hay is shoveling the ground\n5. Hay is delving into the dirt", "affected_paraphrase": ["Hay is shoveling the ground", "Hay is delving into the dirt", "Hay is scooping up dirt", "Hay is burrowing into the earth", "Hay is excavating soil"]}]}
{"inputs": {"id": 512, "prompt": "House breeds tree", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "House", "verb": "breeds", "object": "tree", "neg": null, "prompt_polarity_grounded": "House breeds tree"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "House breeds tree. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. House provides shelter for tree. \n2. Tree grows in house's environment.", "affected_reasoning": ["House provides shelter for tree.", "Tree grows in house's environment."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: House breeds tree\nsubject token: House\nobject token: tree\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Car breeds tree\n2. Book breeds tree\n3. Pen breeds tree\n4. Chair breeds tree\n5. Dog breeds tree\n\nQ2. Replacements:\n1. House breeds flower\n2. House breeds pencil\n3. House breeds chair\n4. House breeds car\n5. House breeds book", "subject_replaced": ["Book breeds tree", "Dog breeds tree", "Chair breeds tree", "Pen breeds tree", "Car breeds tree"], "object_replaced": ["House breeds book", "House breeds flower", "House breeds pencil", "House breeds chair", "House breeds car"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: House breeds tree\nsubject token: House\nobject token: tree\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Mansion breeds tree, Abode breeds tree, Dwelling breeds tree, Residence breeds tree, Home breeds tree.\nQ2. House nurtures tree, House fosters tree, House grows tree, House cultivates tree, House propagates tree.\nQ3. House breeds sapling, House breeds shrub, House breeds bush, House breeds foliage, House breeds vegetation.", "subject_replaced": ["Abode breeds tree", "Mansion breeds tree", "Residence breeds tree", "Home breeds tree.", "Dwelling breeds tree"], "verb_replaced": ["House grows tree", "House fosters tree", "House nurtures tree", "House cultivates tree", "House propagates tree."], "object_replaced": ["House breeds bush", "House breeds foliage", "House breeds shrub", "House breeds sapling", "House breeds vegetation."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: House breeds tree\n", "AffectedParaphraseMaker_gptoutput": "\n1. Home cultivates plant\n2. Dwelling propagates shrub\n3. Abode propagates bush\n4. Residence cultivates sapling\n5. Domicile breeds vegetation", "affected_paraphrase": ["Residence cultivates sapling", "Home cultivates plant", "Domicile breeds vegetation", "Dwelling propagates shrub", "Abode propagates bush"]}]}
{"inputs": {"id": 514, "prompt": "dog heats sand", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "dog", "verb": "heats", "object": "sand", "neg": null, "prompt_polarity_grounded": "Dog does not heat sand."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Dog does not heat sand.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Dogs do not have the ability to generate heat. \n2. Sand does not require heat to be heated.", "affected_reasoning": ["Dogs do not have ability to generate heat.", "Sand does not require heat to be heated."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: dog heats sand\nsubject token: dog\nobject token: sand\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. text: cat heats sand\n2. text: bird heats sand\n3. text: fish heats sand\n4. text: mouse heats sand\n5. text: frog heats sand\n\nQ2. Replacements:\n1. text: dog heats rock\n2. text: dog heats grass\n3. text: dog heats snow\n4. text: dog heats ice\n5. text: dog heats dirt", "subject_replaced": ["fish heats sand", "frog heats sand", "bird heats sand", "mouse heats sand", "cat heats sand"], "object_replaced": ["dog heats grass", "dog heats snow", "dog heats rock", "dog heats ice", "dog heats dirt"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: dog heats sand\nsubject token: dog\nobject token: sand\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. Puppy heats sand\n2. Canine heats sand\n3. Hound heats sand\n4. Mutt heats sand\n5. Fido heats sand\n\nQ2. Variants:\n1. Dog warms sand\n2. Dog scatters sand\n3. Dog stirs sand\n4. Dog sprinkles sand\n5. Dog sifts sand\n\nQ3. Variants:\n1. Dog heats gravel\n2. Dog heats dust\n3. Dog heats pebbles\n4. Dog heats soil\n5. Dog heats powder", "subject_replaced": ["Puppy heats sand", "Hound heats sand", "Canine heats sand", "Mutt heats sand", "Fido heats sand"], "verb_replaced": ["Dog warms sand", "Dog sifts sand", "Dog scatters sand", "Dog stirs sand", "Dog sprinkles sand"], "object_replaced": ["Dog heats gravel", "Dog heats soil", "Dog heats powder", "Dog heats pebbles", "Dog heats dust"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: dog heats sand\n", "AffectedParaphraseMaker_gptoutput": "\n1. Canines warm up the beach\n2. Dogs make the sand toasty\n3. Canines heat the shore\n4. Pups warm the sand\n5. Dogs heat the beach", "affected_paraphrase": ["Dogs make the sand toasty", "Canines warm up the beach", "Dogs heat the beach", "Pups warm the sand", "Canines heat the shore"]}]}
{"inputs": {"id": 532, "prompt": "house fills plate", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "house", "verb": "fills", "object": "plate", "neg": null, "prompt_polarity_grounded": "House does not fill plate."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "House does not fill plate.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. House does not have arms. \n2. Arms are needed to fill plate.", "affected_reasoning": ["House does not have arms.", "Arms are needed to fill plate."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: house fills plate\nsubject token: house\nobject token: plate\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Tree fills plate\n2. Car fills plate\n3. Moon fills plate\n4. Dog fills plate\n5. Sun fills plate\n\nQ2. Replacements:\n1. House fills cup\n2. House fills bowl\n3. House fills spoon\n4. House fills fork\n5. House fills knife", "subject_replaced": ["Dog fills plate", "Sun fills plate", "Car fills plate", "Moon fills plate", "Tree fills plate"], "object_replaced": ["House fills fork", "House fills cup", "House fills bowl", "House fills knife", "House fills spoon"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: house fills plate\nsubject token: house\nobject token: plate\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Home fills plate, abode fills plate, dwelling fills plate, residence fills plate, domicile fills plate.\nQ2. House stocks plate, house loads plate, house furnishes plate, house supplies plate, house fills plate.\nQ3. House fills dish, house fills bowl, house fills platter, house fills cup, house fills saucer.", "subject_replaced": ["Home fills plate", "dwelling fills plate", "residence fills plate", "domicile fills plate.", "abode fills plate"], "verb_replaced": ["house supplies plate", "house furnishes plate", "house loads plate", "House stocks plate", "house fills plate."], "object_replaced": ["house fills cup", "house fills platter", "house fills saucer.", "House fills dish", "house fills bowl"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: house fills plate\n", "AffectedParaphraseMaker_gptoutput": "\n1. Home furnishes dish\n2. Abode supplies platter\n3. Residence provides plate\n4. Domicile stocks saucer\n5. Habitation fills plate", "affected_paraphrase": ["Abode supplies platter", "Domicile stocks saucer", "Habitation fills plate", "Residence provides plate", "Home furnishes dish"]}]}
{"inputs": {"id": 536, "prompt": "A knife trims rope", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "knife", "verb": "trims", "object": "rope", "neg": null, "prompt_polarity_grounded": "A knife trims rope"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A knife trims rope. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Knife has sharp edge. \n2. Sharp edge cuts rope.", "affected_reasoning": ["Knife has sharp edge.", "Sharp edge cuts rope."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: A knife trims rope\nsubject token: knife\nobject token: rope\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A hammer trims rope\n2. A spoon trims rope\n3. A fork trims rope\n4. A saw trims rope\n5. A scissors trims rope\n\nQ2. Replacements:\n1. A knife trims paper\n2. A knife trims cloth\n3. A knife trims wood\n4. A knife trims metal\n5. A knife trims plastic", "subject_replaced": ["A scissors trims rope", "A hammer trims rope", "A spoon trims rope", "A saw trims rope", "A fork trims rope"], "object_replaced": ["A knife trims metal", "A knife trims wood", "A knife trims paper", "A knife trims plastic", "A knife trims cloth"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: A knife trims rope\nsubject token: knife\nobject token: rope\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A blade trims rope, A scissors trims rope, A cutter trims rope, A chopper trims rope, A slicer trims rope.\n\nQ2. A knife snips rope, A knife clips rope, A knife cuts rope, A knife slices rope, A knife shears rope.\n\nQ3. A knife trims twine, A knife trims cord, A knife trims yarn, A knife trims string, A knife trims thread.", "subject_replaced": ["A blade trims rope", "A slicer trims rope.", "A scissors trims rope", "A chopper trims rope", "A cutter trims rope"], "verb_replaced": ["A knife shears rope.", "A knife slices rope", "A knife snips rope", "A knife cuts rope", "A knife clips rope"], "object_replaced": ["A knife trims string", "A knife trims thread.", "A knife trims yarn", "A knife trims twine", "A knife trims cord"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: A knife trims rope\n", "AffectedParaphraseMaker_gptoutput": "\n1. A blade cuts string\n2. A knife slices cord\n3. A sharp edge shapes rope\n4. A blade shapes twine\n5. A knife shapes rope", "affected_paraphrase": ["A blade shapes twine", "A sharp edge shapes rope", "A blade cuts string", "A knife slices cord", "A knife shapes rope"]}]}
{"inputs": {"id": 544, "prompt": "Girl grope melon", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Girl", "verb": "grope", "object": "melon", "neg": null, "prompt_polarity_grounded": "Girl did not grope melon."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Girl did not grope melon.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Girl does not have hands.\n2. Hands are needed to grope melon.", "affected_reasoning": ["Girl does not have hands.", "Hands are needed to grope melon."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Girl grope melon\nsubject token: Girl\nobject token: melon\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Boy grope melon\n2. Child grope melon\n3. Woman grope melon\n4. Lady grope melon\n5. Person grope melon\n\nQ2. Replacements:\n1. Girl grope apple\n2. Girl grope banana\n3. Girl grope orange\n4. Girl grope peach\n5. Girl grope strawberry", "subject_replaced": ["Child grope melon", "Woman grope melon", "Boy grope melon", "Lady grope melon", "Person grope melon"], "object_replaced": ["Girl grope strawberry", "Girl grope orange", "Girl grope banana", "Girl grope apple", "Girl grope peach"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Girl grope melon\nsubject token: Girl\nobject token: melon\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. Woman grope melon\n2. Lady grope melon\n3. Child grope melon\n4. Female grope melon\n5. Young girl grope melon\n\nQ2. Variants:\n1. Girl fondle melon\n2. Girl caress melon\n3. Girl squeeze melon\n4. Girl grasp melon\n5. Girl touch melon\n\nQ3. Variants:\n1. Girl grope fruit\n2. Girl grope gourd\n3. Girl grope cucumber\n4. Girl grope squash\n5. Girl grope pumpkin", "subject_replaced": ["Child grope melon", "Woman grope melon", "Female grope melon", "Lady grope melon", "Young girl grope melon"], "verb_replaced": ["Girl fondle melon", "Girl touch melon", "Girl caress melon", "Girl squeeze melon", "Girl grasp melon"], "object_replaced": ["Girl grope fruit", "Girl grope cucumber", "Girl grope gourd", "Girl grope pumpkin", "Girl grope squash"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Girl grope melon\n", "AffectedParaphraseMaker_gptoutput": "\n1. Female fondle cantaloupe\n2. Woman caress melon\n3. Lady squeeze fruit\n4. Maiden manipulate melon\n5. Lassie fondle melon", "affected_paraphrase": ["Maiden manipulate melon", "Lassie fondle melon", "Woman caress melon", "Female fondle cantaloupe", "Lady squeeze fruit"]}]}
{"inputs": {"id": 547, "prompt": "the man clips water", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "man", "verb": "clips", "object": "water", "neg": null, "prompt_polarity_grounded": "The man does not clip water."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The man does not clip water.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Clipping is a cutting action.\n2. Water cannot be cut.", "affected_reasoning": ["Clipping is cutting action.", "Water cannot be cut."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the man clips water\nsubject token: man\nobject token: water\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements: \n1. The elephant clips water\n2. The dog clips water\n3. The tree clips water\n4. The cat clips water\n5. The bird clips water\n\nQ2. Replacements:\n1. The man clips fire\n2. The man clips air\n3. The man clips earth\n4. The man clips ice\n5. The man clips wind", "subject_replaced": ["The elephant clips water", "The tree clips water", "The dog clips water", "The cat clips water", "The bird clips water"], "object_replaced": ["The man clips ice", "The man clips air", "The man clips fire", "The man clips wind", "The man clips earth"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the man clips water\nsubject token: man\nobject token: water\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The person clips water, the individual clips water, the human clips water, the male clips water, the gentleman clips water.\nQ2. The man snips water, the man trims water, the man cuts water, the man shears water, the man prunes water.\nQ3. The man clips liquid, the man clips fluid, the man clips juice, the man clips beverage, the man clips broth.", "subject_replaced": ["the gentleman clips water.", "the male clips water", "the human clips water", "The person clips water", "the individual clips water"], "verb_replaced": ["the man trims water", "the man prunes water.", "the man shears water", "The man snips water", "the man cuts water"], "object_replaced": ["the man clips broth.", "the man clips juice", "the man clips fluid", "the man clips beverage", "The man clips liquid"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the man clips water\n", "AffectedParaphraseMaker_gptoutput": "\n1. The male snips liquid\n2. The guy trims the water\n3. The man cuts the water\n4. The man shears the water\n5. The man prunes the water", "affected_paraphrase": ["The male snips liquid", "The man cuts the water", "The man shears the water", "The guy trims the water", "The man prunes the water"]}]}
{"inputs": {"id": 552, "prompt": "Man count coins", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Man", "verb": "count", "object": "coins", "neg": null, "prompt_polarity_grounded": "Man does not count coins."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Man does not count coins.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Coins are physical objects. \n2. Humans cannot count physical objects without the use of tools.", "affected_reasoning": ["Coins are physical objects.", "Humans cannot count physical objects without use of tools."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Man count coins\nsubject token: Man\nobject token: coins\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Woman count books\n2. Child count stamps\n3. Dog count toys\n4. Cat count pencils\n5. Teacher count erasers\n\nQ2. Replacements:\n1. Man count apples\n2. Man count chairs\n3. Man count rocks\n4. Man count plants\n5. Man count cars", "subject_replaced": ["Dog count toys", "Teacher count erasers", "Child count stamps", "Woman count books", "Cat count pencils"], "object_replaced": ["Man count rocks", "Man count chairs", "Man count cars", "Man count apples", "Man count plants"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Man count coins\nsubject token: Man\nobject token: coins\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Person count coins, Individual tally coins, Human enumerate coins, Personage calculate coins, Being reckon coins\nQ2. Man tabulate coins, Man total coins, Man compute coins, Man add coins, Man subtract coins\nQ3. Man count change, Man count currency, Man count money, Man count specie, Man count bullion", "subject_replaced": ["Individual tally coins", "Personage calculate coins", "Person count coins", "Being reckon coins", "Human enumerate coins"], "verb_replaced": ["Man add coins", "Man subtract coins", "Man compute coins", "Man tabulate coins", "Man total coins"], "object_replaced": ["Man count bullion", "Man count money", "Man count specie", "Man count change", "Man count currency"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Man count coins\n", "AffectedParaphraseMaker_gptoutput": "\n1. A man is tallying up coins.\n2. A man is keeping track of coins.\n3. A man is enumerating coins.\n4. A man is calculating coins.\n5. A man is assessing coins.", "affected_paraphrase": ["A man is calculating coins.", "A man is tallying up coins.", "A man is assessing coins.", "A man is enumerating coins.", "A man is keeping track of coins."]}]}
{"inputs": {"id": 553, "prompt": "Monkey grasps ant", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Monkey", "verb": "grasps", "object": "ant", "neg": null, "prompt_polarity_grounded": "Monkey grasps ant"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Monkey grasps ant. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Monkey sees ant. \n2. Monkey reaches out and grasps ant.", "affected_reasoning": ["Monkey sees ant.", "Monkey reaches out and grasps ant."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Monkey grasps ant\nsubject token: Monkey\nobject token: ant\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant grasps ant\n2. Tiger grasps ant\n3. Giraffe grasps ant\n4. Kangaroo grasps ant\n5. Gorilla grasps ant\n\nQ2. Replacements:\n1. Monkey grasps apple\n2. Monkey grasps banana\n3. Monkey grasps peach\n4. Monkey grasps strawberry\n5. Monkey grasps watermelon", "subject_replaced": ["Giraffe grasps ant", "Elephant grasps ant", "Gorilla grasps ant", "Kangaroo grasps ant", "Tiger grasps ant"], "object_replaced": ["Monkey grasps strawberry", "Monkey grasps watermelon", "Monkey grasps banana", "Monkey grasps peach", "Monkey grasps apple"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Monkey grasps ant\nsubject token: Monkey\nobject token: ant\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Ape grasps ant, Chimpanzee grasps ant, Primate grasps ant, Gorilla grasps ant, Orangutan grasps ant.\nQ2. Monkey grabs ant, Monkey clutches ant, Monkey snatches ant, Monkey seizes ant, Monkey captures ant.\nQ3. Monkey grasps insect, Monkey grasps bug, Monkey grasps beetle, Monkey grasps spider, Monkey grasps fly.", "subject_replaced": ["Orangutan grasps ant.", "Chimpanzee grasps ant", "Ape grasps ant", "Gorilla grasps ant", "Primate grasps ant"], "verb_replaced": ["Monkey clutches ant", "Monkey snatches ant", "Monkey seizes ant", "Monkey captures ant.", "Monkey grabs ant"], "object_replaced": ["Monkey grasps spider", "Monkey grasps fly.", "Monkey grasps beetle", "Monkey grasps insect", "Monkey grasps bug"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Monkey grasps ant\n", "AffectedParaphraseMaker_gptoutput": "\n1. The monkey grabs the ant.\n2. The primate clutches the insect.\n3. The simian holds the ant.\n4. The ape takes the ant.\n5. The monkey snatches the ant.", "affected_paraphrase": ["The simian holds the ant.", "The primate clutches the insect.", "The monkey grabs the ant.", "The monkey snatches the ant.", "The ape takes the ant."]}]}
{"inputs": {"id": 561, "prompt": "Rock fractures pillow", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Rock", "verb": "fractures", "object": "pillow", "neg": null, "prompt_polarity_grounded": "Rock does not fracture pillow."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Rock does not fracture pillow.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Rocks are hard and solid. \n2. Pillows are soft and squishy.", "affected_reasoning": ["Rocks are hard and solid.", "Pillows are soft and squishy."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Rock fractures pillow\nsubject token: Rock\nobject token: pillow\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Car fractures pillow\n2. Tree fractures pillow\n3. Ocean fractures pillow\n4. Moon fractures pillow\n5. Wind fractures pillow\n\nQ2. Replacements:\n1. Rock fractures blanket\n2. Rock fractures chair\n3. Rock fractures table\n4. Rock fractures book\n5. Rock fractures sky", "subject_replaced": ["Ocean fractures pillow", "Wind fractures pillow", "Car fractures pillow", "Moon fractures pillow", "Tree fractures pillow"], "object_replaced": ["Rock fractures table", "Rock fractures sky", "Rock fractures book", "Rock fractures chair", "Rock fractures blanket"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Rock fractures pillow\nsubject token: Rock\nobject token: pillow\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Pebble fractures pillow, Stone fractures pillow, Boulder fractures pillow, Granite fractures pillow, Gravel fractures pillow\nQ2. Rock shatters pillow, Rock cracks pillow, Rock splits pillow, Rock fractures pillow, Rock breaks pillow\nQ3. Rock fractures cushion, Rock fractures bolster, Rock fractures mattress, Rock fractures quilt, Rock fractures duvet", "subject_replaced": ["Gravel fractures pillow", "Stone fractures pillow", "Granite fractures pillow", "Pebble fractures pillow", "Boulder fractures pillow"], "verb_replaced": ["Rock cracks pillow", "Rock breaks pillow", "Rock shatters pillow", "Rock splits pillow", "Rock fractures pillow"], "object_replaced": ["Rock fractures duvet", "Rock fractures cushion", "Rock fractures mattress", "Rock fractures quilt", "Rock fractures bolster"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Rock fractures pillow\n", "AffectedParaphraseMaker_gptoutput": "\n1. Pillow-shaped rock splintering\n2. Rock breaks apart into a cushion shape\n3. Rock shatters into a pillow form\n4. Rock breaks up into a pillow-like shape\n5. Rock splits into a pillow-like structure", "affected_paraphrase": ["Rock shatters into a pillow form", "Rock breaks apart into a cushion shape", "Pillow-shaped rock splintering", "Rock splits into a pillow-like structure", "Rock breaks up into a pillow-like shape"]}]}
{"inputs": {"id": 582, "prompt": "a grandma knits wool", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "grandma", "verb": "knits", "object": "wool", "neg": null, "prompt_polarity_grounded": "a grandma knits wool"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a grandma knits wool. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nGrandma knits because she enjoys it. She enjoys it because it is a relaxing activity.", "affected_reasoning": ["Grandma knits because she enjoys it", "She enjoys it because it is relaxing activity."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a grandma knits wool\nsubject token: grandma\nobject token: wool\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a clown knits wool\n2. a teacher knits wool\n3. a doctor knits wool\n4. a chef knits wool\n5. a dancer knits wool\n\nQ2. Replacements:\n1. a grandma knits plastic\n2. a grandma knits paper\n3. a grandma knits metal\n4. a grandma knits fabric\n5. a grandma knits glass", "subject_replaced": ["a teacher knits wool", "a clown knits wool", "a doctor knits wool", "a chef knits wool", "a dancer knits wool"], "object_replaced": ["a grandma knits paper", "a grandma knits plastic", "a grandma knits metal", "a grandma knits glass", "a grandma knits fabric"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a grandma knits wool\nsubject token: grandma\nobject token: wool\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants: a grandmother knits wool, a grandparent knits wool, an elder knits wool, a senior knits wool, a matriarch knits wool.\nQ2. Variants: a grandma crochets wool, a grandma weaves wool, a grandma stitches wool, a grandma sews wool, a grandma knitted wool.\nQ3. Variants: a grandma knits yarn, a grandma knits cotton, a grandma knits acrylic, a grandma knits mohair, a grandma knits alpaca.", "subject_replaced": ["an elder knits wool", "a grandmother knits wool", "a senior knits wool", "a matriarch knits wool.", "a grandparent knits wool"], "verb_replaced": ["a grandma sews wool", "a grandma crochets wool", "a grandma weaves wool", "a grandma stitches wool", "a grandma knitted wool."], "object_replaced": ["a grandma knits yarn", "a grandma knits mohair", "a grandma knits acrylic", "a grandma knits alpaca.", "a grandma knits cotton"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a grandma knits wool\n", "AffectedParaphraseMaker_gptoutput": "\n1. An elderly woman weaves yarn\n2. An elderly woman crochets wool\n3. An elderly woman creates garments from wool\n4. An elderly woman stitches wool\n5. An elderly woman interlaces wool", "affected_paraphrase": ["An elderly woman stitches wool", "An elderly woman interlaces wool", "An elderly woman weaves yarn", "An elderly woman creates garments from wool", "An elderly woman crochets wool"]}]}
{"inputs": {"id": 588, "prompt": "Mud is erased by cloth", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Mud", "verb": "erased", "object": "cloth", "neg": null, "prompt_polarity_grounded": "Mud is erased by cloth"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Mud is erased by cloth. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Cloth absorbs the mud.\n2. Absorbed mud is removed from the surface.", "affected_reasoning": ["Cloth absorbs mud.", "Absorbed mud is removed from surface."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Mud is erased by cloth\nsubject token: Mud\nobject token: cloth\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1.\n1. Fire is erased by cloth\n2. Music is erased by cloth\n3. Clouds is erased by cloth\n4. Trees is erased by cloth\n5. Stars is erased by cloth\n\nQ2.\n1. Mud is erased by water\n2. Mud is erased by wind\n3. Mud is erased by sun\n4. Mud is erased by moon\n5. Mud is erased by snow", "subject_replaced": ["Fire is erased by cloth", "Stars is erased by cloth", "Music is erased by cloth", "Trees is erased by cloth", "Clouds is erased by cloth"], "object_replaced": ["Mud is erased by snow", "Mud is erased by water", "Mud is erased by wind", "Mud is erased by sun", "Mud is erased by moon"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Mud is erased by cloth\nsubject token: Mud\nobject token: cloth\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Sludge is erased by cloth\n2. Dirt is erased by cloth\n3. Grime is erased by cloth\n4. Muck is erased by cloth\n5. Silt is erased by cloth\n\nQ2.\n1. Mud is wiped by cloth\n2. Mud is scrubbed by cloth\n3. Mud is wiped away by cloth\n4. Mud is removed by cloth\n5. Mud is cleared by cloth\n\nQ3.\n1. Mud is erased by rag\n2. Mud is erased by towel\n3. Mud is erased by fabric\n4. Mud is erased by sponge\n5. Mud is erased by material", "subject_replaced": ["Muck is erased by cloth", "Silt is erased by cloth", "Grime is erased by cloth", "Dirt is erased by cloth", "Sludge is erased by cloth"], "verb_replaced": ["Mud is wiped by cloth", "Mud is cleared by cloth", "Mud is wiped away by cloth", "Mud is scrubbed by cloth", "Mud is removed by cloth"], "object_replaced": ["Mud is erased by towel", "Mud is erased by sponge", "Mud is erased by fabric", "Mud is erased by material", "Mud is erased by rag"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Mud is erased by cloth\n", "AffectedParaphraseMaker_gptoutput": "\n1. Cloth wipes away mud.\n2. Fabric eliminates mud.\n3. Cloth erases mud.\n4. Fabric removes mud.\n5. Cloth cleans up mud.", "affected_paraphrase": ["Cloth wipes away mud.", "Cloth cleans up mud.", "Fabric eliminates mud.", "Cloth erases mud.", "Fabric removes mud."]}]}
{"inputs": {"id": 598, "prompt": "hands dig dirt", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "hands", "verb": "dig", "object": "dirt", "neg": null, "prompt_polarity_grounded": "hands dig dirt"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "hands dig dirt. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nHands have the ability to move objects. Dirt can be moved by hands.", "affected_reasoning": ["Hands have ability to move objects", "Dirt can be moved by hands."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: hands dig dirt\nsubject token: hands\nobject token: dirt\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Wheels dig dirt\n2. Fingers dig dirt\n3. Arms dig dirt\n4. Legs dig dirt\n5. Feet dig dirt\n\nQ2. Replacements:\n1. Hands dig sand\n2. Hands dig clay\n3. Hands dig rocks\n4. Hands dig gravel\n5. Hands dig soil", "subject_replaced": ["Legs dig dirt", "Wheels dig dirt", "Fingers dig dirt", "Feet dig dirt", "Arms dig dirt"], "object_replaced": ["Hands dig gravel", "Hands dig clay", "Hands dig sand", "Hands dig rocks", "Hands dig soil"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: hands dig dirt\nsubject token: hands\nobject token: dirt\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Fingers dig dirt, Palms dig dirt, Claws dig dirt, Digits dig dirt, Knuckles dig dirt.\nQ2. Hands scoop dirt, Hands scooped dirt, Hands scooping dirt, Hands scoops dirt, Hands scoopsed dirt.\nQ3. Hands dig soil, Hands dig clay, Hands dig gravel, Hands dig sand, Hands dig mud.", "subject_replaced": ["Digits dig dirt", "Claws dig dirt", "Knuckles dig dirt.", "Fingers dig dirt", "Palms dig dirt"], "verb_replaced": ["Hands scooped dirt", "Hands scoops dirt", "Hands scooping dirt", "Hands scoopsed dirt.", "Hands scoop dirt"], "object_replaced": ["Hands dig gravel", "Hands dig mud.", "Hands dig clay", "Hands dig sand", "Hands dig soil"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: hands dig dirt\n", "AffectedParaphraseMaker_gptoutput": "\n1. Hands scoop up soil\n2. Fingers burrow into the earth\n3. Palms excavate the ground\n4. Digging with hands in the dirt\n5. Manipulating the earth with hands", "affected_paraphrase": ["Fingers burrow into the earth", "Digging with hands in the dirt", "Hands scoop up soil", "Manipulating the earth with hands", "Palms excavate the ground"]}]}
{"inputs": {"id": 604, "prompt": "a hand smashes rock", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "hand", "verb": "smashes", "object": "rock", "neg": null, "prompt_polarity_grounded": "a hand smashes rock"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a hand smashes rock. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nRock is hard. Hand is soft.", "affected_reasoning": ["Rock is hard", "Hand is soft."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a hand smashes rock\nsubject token: hand\nobject token: rock\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A foot smashes rock\n2. A tree smashes rock\n3. A cloud smashes rock\n4. A car smashes rock\n5. A dog smashes rock\n\nQ2. Replacements:\n1. A hand smashes paper\n2. A hand smashes glass\n3. A hand smashes metal\n4. A hand smashes wood\n5. A hand smashes plastic", "subject_replaced": ["A foot smashes rock", "A dog smashes rock", "A tree smashes rock", "A cloud smashes rock", "A car smashes rock"], "object_replaced": ["A hand smashes wood", "A hand smashes glass", "A hand smashes metal", "A hand smashes paper", "A hand smashes plastic"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a hand smashes rock\nsubject token: hand\nobject token: rock\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A fist pulverizes rock, A palm crushes rock, A knuckle breaks rock, A grip shatters rock, A claw crunches rock.\n\nQ2. A hand smashes pulverize, A hand smashes crushes, A hand smashes breaks, A hand smashes shatters, A hand smashes crunches.\n\nQ3. A hand smashes boulder, A hand smashes pebble, A hand smashes gravel, A hand smashes stone, A hand smashes chunk.", "subject_replaced": ["A fist pulverizes rock", "A knuckle breaks rock", "A claw crunches rock.", "A grip shatters rock", "A palm crushes rock"], "verb_replaced": ["A hand smashes breaks", "A hand smashes pulverize", "A hand smashes crushes", "A hand smashes crunches.", "A hand smashes shatters"], "object_replaced": ["A hand smashes chunk.", "A hand smashes pebble", "A hand smashes boulder", "A hand smashes gravel", "A hand smashes stone"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a hand smashes rock\n", "AffectedParaphraseMaker_gptoutput": "\n1. A hand crushes rock.\n2. A hand pulverizes rock.\n3. A hand shatters rock.\n4. A hand demolishes rock.\n5. A hand breaks rock.", "affected_paraphrase": ["A hand pulverizes rock.", "A hand crushes rock.", "A hand breaks rock.", "A hand shatters rock.", "A hand demolishes rock."]}]}
{"inputs": {"id": 605, "prompt": "elephant squashes bus", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "elephant", "verb": "squashes", "object": "bus", "neg": null, "prompt_polarity_grounded": "elephant squashes bus"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "elephant squashes bus. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nElephant is bigger than bus. Elephant is heavier than bus.", "affected_reasoning": ["Elephant is bigger than bus", "Elephant is heavier than bus."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: elephant squashes bus\nsubject token: elephant\nobject token: bus\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Tiger squashes bus\n2. Giraffe squashes bus\n3. Zebra squashes bus\n4. Hippo squashes bus\n5. Rhino squashes bus\n\nQ2. Replacements:\n1. Elephant squashes car\n2. Elephant squashes truck\n3. Elephant squashes train\n4. Elephant squashes airplane\n5. Elephant squashes boat", "subject_replaced": ["Giraffe squashes bus", "Zebra squashes bus", "Hippo squashes bus", "Tiger squashes bus", "Rhino squashes bus"], "object_replaced": ["Elephant squashes train", "Elephant squashes boat", "Elephant squashes airplane", "Elephant squashes truck", "Elephant squashes car"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: elephant squashes bus\nsubject token: elephant\nobject token: bus\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Mammoth squashes bus\n2. Pachyderm squashes bus\n3. Rhinoceros squashes bus\n4. Hippopotamus squashes bus\n5. Trunk squashes bus\n\nQ2.\n1. Elephant crushes bus\n2. Elephant smashes bus\n3. Elephant pulverizes bus\n4. Elephant demolishes bus\n5. Elephant obliterates bus\n\nQ3.\n1. Elephant squashes vehicle\n2. Elephant squashes automobile\n3. Elephant squashes truck\n4. Elephant squashes van\n5. Elephant squashes coach", "subject_replaced": ["Mammoth squashes bus", "Pachyderm squashes bus", "Rhinoceros squashes bus", "Hippopotamus squashes bus", "Trunk squashes bus"], "verb_replaced": ["Elephant crushes bus", "Elephant demolishes bus", "Elephant obliterates bus", "Elephant pulverizes bus", "Elephant smashes bus"], "object_replaced": ["Elephant squashes automobile", "Elephant squashes coach", "Elephant squashes vehicle", "Elephant squashes van", "Elephant squashes truck"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: elephant squashes bus\n", "AffectedParaphraseMaker_gptoutput": "\n1. An elephant stepped on a bus.\n2. A bus was crushed by an elephant.\n3. An elephant flattened a bus.\n4. An elephant flattened a bus with its weight.\n5. An elephant crushed a bus beneath its feet.", "affected_paraphrase": ["A bus was crushed by an elephant.", "An elephant flattened a bus.", "An elephant crushed a bus beneath its feet.", "An elephant stepped on a bus.", "An elephant flattened a bus with its weight."]}]}
{"inputs": {"id": 614, "prompt": "Rock yanks house", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Rock", "verb": "yanks", "object": "house", "neg": null, "prompt_polarity_grounded": "Rock does not yank house."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Rock does not yank house.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Rock is an inanimate object. \n2. Inanimate objects cannot move on their own.", "affected_reasoning": ["Rock is inanimate object.", "Inanimate objects cannot move on their own."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Rock yanks house\nsubject token: Rock\nobject token: house\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Tiger yanks house\n2. Apple yanks house\n3. Moon yanks house\n4. Ocean yanks house\n5. Sun yanks house\n\nQ2. Replacements:\n1. Rock yanks tree\n2. Rock yanks car\n3. Rock yanks boat\n4. Rock yanks mountain\n5. Rock yanks cloud", "subject_replaced": ["Moon yanks house", "Tiger yanks house", "Ocean yanks house", "Sun yanks house", "Apple yanks house"], "object_replaced": ["Rock yanks boat", "Rock yanks cloud", "Rock yanks tree", "Rock yanks mountain", "Rock yanks car"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Rock yanks house\nsubject token: Rock\nobject token: house\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Pebble yanks house, Boulder yanks house, Granite yanks house, Stone yanks house, Pebble yanks dwelling.\nQ2. Rock jerks house, Rock tugs house, Rock drags house, Rock pulls house, Rock hauls house.\nQ3. Rock yanks abode, Rock yanks cottage, Rock yanks residence, Rock yanks manor, Rock yanks villa.", "subject_replaced": ["Granite yanks house", "Pebble yanks house", "Stone yanks house", "Pebble yanks dwelling.", "Boulder yanks house"], "verb_replaced": ["Rock tugs house", "Rock drags house", "Rock pulls house", "Rock hauls house.", "Rock jerks house"], "object_replaced": ["Rock yanks villa.", "Rock yanks abode", "Rock yanks residence", "Rock yanks cottage", "Rock yanks manor"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Rock yanks house\n", "AffectedParaphraseMaker_gptoutput": "\n1. Rock pulls house\n2. Rock drags house\n3. Rock tugs house\n4. Rock hauls house\n5. Rock jerks house", "affected_paraphrase": ["Rock hauls house", "Rock tugs house", "Rock drags house", "Rock pulls house", "Rock jerks house"]}]}
{"inputs": {"id": 633, "prompt": "knife smashes bone", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "knife", "verb": "smashes", "object": "bone", "neg": null, "prompt_polarity_grounded": "Knife does not smash bone."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Knife does not smash bone.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Bones are hard and dense, so they cannot be broken by a knife. \n2. Knives are not strong enough to break through the tough material of bone.", "affected_reasoning": ["Bones are hard and dense, so they cannot be broken by knife.", "Knives are not strong enough to break through tough material of bone."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: knife smashes bone\nsubject token: knife\nobject token: bone\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hammer smashes bone\n2. Fork smashes bone\n3. Pen smashes bone\n4. Spoon smashes bone\n5. Saw smashes bone\n\nQ2. Replacements:\n1. Knife smashes rock\n2. Knife smashes paper\n3. Knife smashes glass\n4. Knife smashes wood\n5. Knife smashes metal", "subject_replaced": ["Fork smashes bone", "Saw smashes bone", "Pen smashes bone", "Spoon smashes bone", "Hammer smashes bone"], "object_replaced": ["Knife smashes glass", "Knife smashes paper", "Knife smashes wood", "Knife smashes metal", "Knife smashes rock"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: knife smashes bone\nsubject token: knife\nobject token: bone\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Dagger smashes bone, Cleaver smashes bone, Blade smashes bone, Scalpel smashes bone, Machete smashes bone.\nQ2. Knife shatters bone, Knife pulverizes bone, Knife crushes bone, Knife demolishes bone, Knife annihilates bone.\nQ3. Knife smashes marrow, Knife smashes cartilage, Knife smashes rib, Knife smashes joint, Knife smashes skull.", "subject_replaced": ["Blade smashes bone", "Scalpel smashes bone", "Cleaver smashes bone", "Machete smashes bone.", "Dagger smashes bone"], "verb_replaced": ["Knife shatters bone", "Knife pulverizes bone", "Knife annihilates bone.", "Knife demolishes bone", "Knife crushes bone"], "object_replaced": ["Knife smashes marrow", "Knife smashes rib", "Knife smashes skull.", "Knife smashes cartilage", "Knife smashes joint"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: knife smashes bone\n", "AffectedParaphraseMaker_gptoutput": "\n1. A blade shatters bone\n2. A knife breaks apart bone\n3. A sharp object pulverizes bone\n4. A cutting instrument pulverizes bone\n5. A blade pulverizes bone", "affected_paraphrase": ["A sharp object pulverizes bone", "A knife breaks apart bone", "A blade pulverizes bone", "A blade shatters bone", "A cutting instrument pulverizes bone"]}]}
{"inputs": {"id": 642, "prompt": "Chef hugs ant", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Chef", "verb": "hugs", "object": "ant", "neg": null, "prompt_polarity_grounded": "Chef does not hug ant."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Chef does not hug ant.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Chefs are people who cook food. \n2. Hugging is not a cooking activity.", "affected_reasoning": ["Chefs are people who cook food.", "Hugging is not cooking activity."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Chef hugs ant\nsubject token: Chef\nobject token: ant\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Chef embraces balloon\n2. Chef cuddles dragon\n3. Chef squeezes tree\n4. Chef snuggles car\n5. Chef caresses moon\n\nQ2. Replacements:\n1. Chef hugs elephant\n2. Chef hugs butterfly\n3. Chef hugs cloud\n4. Chef hugs mountain\n5. Chef hugs river", "subject_replaced": ["Chef squeezes tree", "Chef cuddles dragon", "Chef snuggles car", "Chef embraces balloon", "Chef caresses moon"], "object_replaced": ["Chef hugs butterfly", "Chef hugs river", "Chef hugs cloud", "Chef hugs elephant", "Chef hugs mountain"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Chef hugs ant\nsubject token: Chef\nobject token: ant\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Cook embraces ant, Baker cuddles ant, Confectioner squeezes ant, Pastry chef snuggles ant, Sous chef holds ant.\nQ2. Chef caresses ant, Chef fondles ant, Chef strokes ant, Chef pats ant, Chef nuzzles ant.\nQ3. Chef hugs insect, Chef hugs bug, Chef hugs creature, Chef hugs arthropod, Chef hugs crawler.", "subject_replaced": ["Cook embraces ant", "Confectioner squeezes ant", "Pastry chef snuggles ant", "Baker cuddles ant", "Sous chef holds ant."], "verb_replaced": ["Chef nuzzles ant.", "Chef pats ant", "Chef caresses ant", "Chef strokes ant", "Chef fondles ant"], "object_replaced": ["Chef hugs bug", "Chef hugs crawler.", "Chef hugs creature", "Chef hugs insect", "Chef hugs arthropod"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Chef hugs ant\n", "AffectedParaphraseMaker_gptoutput": "\n1. The cook embraced the small insect.\n2. The culinary artist embraced the ant.\n3. The chef gave the ant a warm embrace.\n4. The cook gave the ant a hug.\n5. The culinary expert embraced the ant.", "affected_paraphrase": ["The chef gave the ant a warm embrace.", "The culinary artist embraced the ant.", "The culinary expert embraced the ant.", "The cook embraced the small insect.", "The cook gave the ant a hug."]}]}
{"inputs": {"id": 646, "prompt": "Skyscraper fills plate", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Skyscraper", "verb": "fills", "object": "plate", "neg": null, "prompt_polarity_grounded": "Skyscraper does not fill plate."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Skyscraper does not fill plate.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Skyscrapers are tall buildings. \n2. Plates are flat surfaces.", "affected_reasoning": ["Skyscrapers are tall buildings.", "Plates are flat surfaces."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Skyscraper fills plate\nsubject token: Skyscraper\nobject token: plate\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant fills plate\n2. Volcano fills plate\n3. Ocean fills plate\n4. Moon fills plate\n5. Tree fills plate\n\nQ2. Replacements:\n1. Skyscraper fills cup\n2. Skyscraper fills bowl\n3. Skyscraper fills spoon\n4. Skyscraper fills fork\n5. Skyscraper fills plateau", "subject_replaced": ["Volcano fills plate", "Ocean fills plate", "Moon fills plate", "Tree fills plate", "Elephant fills plate"], "object_replaced": ["Skyscraper fills cup", "Skyscraper fills spoon", "Skyscraper fills plateau", "Skyscraper fills bowl", "Skyscraper fills fork"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Skyscraper fills plate\nsubject token: Skyscraper\nobject token: plate\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Tower fills plate, Building fills plate, High-rise fills plate, Edifice fills plate, Structure fills plate\nQ2. Skyscraper adorns plate, Skyscraper decorates plate, Skyscraper furnishes plate, Skyscraper graces plate, Skyscraper supplies plate\nQ3. Skyscraper fills dish, Skyscraper fills bowl, Skyscraper fills platter, Skyscraper fills saucer, Skyscraper fills tray", "subject_replaced": ["Structure fills plate", "Tower fills plate", "High-rise fills plate", "Building fills plate", "Edifice fills plate"], "verb_replaced": ["Skyscraper decorates plate", "Skyscraper furnishes plate", "Skyscraper supplies plate", "Skyscraper adorns plate", "Skyscraper graces plate"], "object_replaced": ["Skyscraper fills dish", "Skyscraper fills saucer", "Skyscraper fills bowl", "Skyscraper fills tray", "Skyscraper fills platter"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Skyscraper fills plate\n", "AffectedParaphraseMaker_gptoutput": "\n1. A tall building fills a dish.\n2. A high-rise structure fills a platter.\n3. A tall edifice fills a plate.\n4. A towering structure fills a plate.\n5. A lofty building fills a plate.", "affected_paraphrase": ["A towering structure fills a plate.", "A tall building fills a dish.", "A lofty building fills a plate.", "A tall edifice fills a plate.", "A high-rise structure fills a platter."]}]}
{"inputs": {"id": 656, "prompt": "the dog stomps gorilla", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "dog", "verb": "stomps", "object": "gorilla", "neg": null, "prompt_polarity_grounded": "The dog does not stomp gorilla."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The dog does not stomp gorilla.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Dogs cannot stomp gorillas because gorillas are much larger than dogs.\n2. Dogs are not strong enough to cause any harm to gorillas.", "affected_reasoning": ["Dogs cannot stomp gorillas because gorillas are much larger than dogs.", "Dogs are not strong enough to cause any harm to gorillas."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the dog stomps gorilla\nsubject token: dog\nobject token: gorilla\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The cat stomps gorilla\n2. The horse stomps gorilla\n3. The bird stomps gorilla\n4. The fish stomps gorilla\n5. The mouse stomps gorilla\n\nQ2. Replacements:\n1. The dog stomps elephant\n2. The dog stomps tiger\n3. The dog stomps lion\n4. The dog stomps bear\n5. The dog stomps hippo", "subject_replaced": ["The horse stomps gorilla", "The cat stomps gorilla", "The mouse stomps gorilla", "The bird stomps gorilla", "The fish stomps gorilla"], "object_replaced": ["The dog stomps hippo", "The dog stomps tiger", "The dog stomps bear", "The dog stomps elephant", "The dog stomps lion"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the dog stomps gorilla\nsubject token: dog\nobject token: gorilla\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The canine stomps gorilla, The pup stomps gorilla, The hound stomps gorilla, The mutt stomps gorilla, The pooch stomps gorilla\nQ2. The dog tramples gorilla, The dog pounces gorilla, The dog strides gorilla, The dog strides gorilla, The dog marches gorilla\nQ3. The dog stomps ape, The dog stomps primate, The dog stomps simian, The dog stomps monkey, The dog stomps baboon", "subject_replaced": ["The hound stomps gorilla", "The mutt stomps gorilla", "The pup stomps gorilla", "The canine stomps gorilla", "The pooch stomps gorilla"], "verb_replaced": ["The dog strides gorilla", "The dog pounces gorilla", "The dog marches gorilla", "The dog tramples gorilla"], "object_replaced": ["The dog stomps baboon", "The dog stomps primate", "The dog stomps simian", "The dog stomps monkey", "The dog stomps ape"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the dog stomps gorilla\n", "AffectedParaphraseMaker_gptoutput": "\n1. The canine thumps the gorilla.\n2. The pooch pounds the gorilla.\n3. The canine pounds the gorilla.\n4. The dog pounds the gorilla.\n5. The canine slams the gorilla.", "affected_paraphrase": ["The canine pounds the gorilla.", "The canine thumps the gorilla.", "The canine slams the gorilla.", "The dog pounds the gorilla.", "The pooch pounds the gorilla."]}]}
{"inputs": {"id": 657, "prompt": "an ant lifts pin", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "ant", "verb": "lifts", "object": "pin", "neg": null, "prompt_polarity_grounded": "an ant lifts pin"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "an ant lifts pin. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nAnt uses its mandibles to grab the pin. Ant uses its legs to lift the pin.", "affected_reasoning": ["Ant uses its mandibles to grab pin", "Ant uses its legs to lift pin."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: an ant lifts pin\nsubject token: ant\nobject token: pin\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A bee lifts pin\n2. A dog lifts pin\n3. A cat lifts pin\n4. A mouse lifts pin\n5. A bird lifts pin\n\nQ2. Replacements:\n1. An ant lifts pencil\n2. An ant lifts paper\n3. An ant lifts eraser\n4. An ant lifts ruler\n5. An ant lifts marker", "subject_replaced": ["A mouse lifts pin", "A cat lifts pin", "A dog lifts pin", "A bee lifts pin", "A bird lifts pin"], "object_replaced": ["An ant lifts pencil", "An ant lifts eraser", "An ant lifts marker", "An ant lifts paper", "An ant lifts ruler"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: an ant lifts pin\nsubject token: ant\nobject token: pin\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A beetle lifts pin, A bug lifts pin, An insect lifts pin, A crawler lifts pin, A larva lifts pin.\n\nQ2. An ant carries pin, An ant holds pin, An ant grabs pin, An ant transports pin, An ant drags pin.\n\nQ3. An ant lifts needle, An ant lifts tack, An ant lifts spike, An ant lifts nail, An ant lifts thumbtack.", "subject_replaced": ["A crawler lifts pin", "A bug lifts pin", "A larva lifts pin.", "A beetle lifts pin", "An insect lifts pin"], "verb_replaced": ["An ant carries pin", "An ant holds pin", "An ant transports pin", "An ant drags pin.", "An ant grabs pin"], "object_replaced": ["An ant lifts nail", "An ant lifts needle", "An ant lifts spike", "An ant lifts tack", "An ant lifts thumbtack."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: an ant lifts pin\n", "AffectedParaphraseMaker_gptoutput": "\n1. An ant is capable of raising a pin.\n2. A pin is no match for an ant's strength.\n3. An ant can hoist a pin.\n4. An ant can manage to lift a pin.\n5. An ant has the power to move a pin.", "affected_paraphrase": ["An ant is capable of raising a pin.", "A pin is no match for an ant's strength.", "An ant can hoist a pin.", "An ant can manage to lift a pin.", "An ant has the power to move a pin."]}]}
{"inputs": {"id": 660, "prompt": "Rope hooks pan", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Rope", "verb": "hooks", "object": "pan", "neg": null, "prompt_polarity_grounded": "Rope hooks pan"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Rope hooks pan. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nRope hooks can be used to hang pans. Pans can be hung from a hook to free up counter space.", "affected_reasoning": ["Rope hooks can be used to hang pans", "Pans can be hung from hook to free up counter space."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Rope hooks pan\nsubject token: Rope\nobject token: pan\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Pen hooks pan\n2. Chair hooks pan\n3. Book hooks pan\n4. Lamp hooks pan\n5. Table hooks pan\n\nQ2. Replacements:\n1. Rope hooks box\n2. Rope hooks chair\n3. Rope hooks book\n4. Rope hooks lamp\n5. Rope hooks table", "subject_replaced": ["Book hooks pan", "Pen hooks pan", "Lamp hooks pan", "Table hooks pan", "Chair hooks pan"], "object_replaced": ["Rope hooks lamp", "Rope hooks chair", "Rope hooks book", "Rope hooks box", "Rope hooks table"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Rope hooks pan\nsubject token: Rope\nobject token: pan\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Cord hooks pan, Twine hooks pan, String hooks pan, Line hooks pan, Cable hooks pan\nQ2. Hangs hooks pan, Attaches hooks pan, Secures hooks pan, Fastens hooks pan, Connects hooks pan\nQ3. Rope hooks skillet, Rope hooks pot, Rope hooks cauldron, Rope hooks kettle, Rope hooks container", "subject_replaced": ["Twine hooks pan", "String hooks pan", "Cord hooks pan", "Line hooks pan", "Cable hooks pan"], "verb_replaced": ["Secures hooks pan", "Hangs hooks pan", "Fastens hooks pan", "Connects hooks pan", "Attaches hooks pan"], "object_replaced": ["Rope hooks cauldron", "Rope hooks container", "Rope hooks pot", "Rope hooks skillet", "Rope hooks kettle"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Rope hooks pan\n", "AffectedParaphraseMaker_gptoutput": "\n1. Cable clips skillet\n2. Cord clasps frying pan\n3. Line fasteners cooking vessel\n4. Twine holders griddle\n5. String snags saucepan", "affected_paraphrase": ["String snags saucepan", "Cord clasps frying pan", "Cable clips skillet", "Twine holders griddle", "Line fasteners cooking vessel"]}]}
{"inputs": {"id": 666, "prompt": "Horse crashes plane", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Horse", "verb": "crashes", "object": "plane", "neg": null, "prompt_polarity_grounded": "Horse does not crash plane."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Horse does not crash plane.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Horses cannot fly. \n2. Planes need to fly to crash.", "affected_reasoning": ["Horses cannot fly.", "Planes need to fly to crash."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Horse crashes plane\nsubject token: Horse\nobject token: plane\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant crashes plane\n2. Dog crashes plane\n3. Cat crashes plane\n4. Fish crashes plane\n5. Rabbit crashes plane\n\nQ2. Replacements:\n1. Horse crashes car\n2. Horse crashes train\n3. Horse crashes boat\n4. Horse crashes rocket\n5. Horse crashes helicopter", "subject_replaced": ["Fish crashes plane", "Rabbit crashes plane", "Cat crashes plane", "Elephant crashes plane", "Dog crashes plane"], "object_replaced": ["Horse crashes train", "Horse crashes boat", "Horse crashes car", "Horse crashes helicopter", "Horse crashes rocket"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Horse crashes plane\nsubject token: Horse\nobject token: plane\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Pony crashes plane\n2. Stallion crashes plane\n3. Colt crashes plane\n4. Foal crashes plane\n5. Mule crashes plane\n\nQ2.\n1. Horse smashes plane\n2. Horse demolishes plane\n3. Horse destroys plane\n4. Horse wrecks plane\n5. Horse crashes into plane\n\nQ3.\n1. Horse crashes aircraft\n2. Horse crashes jet\n3. Horse crashes glider\n4. Horse crashes helicopter\n5. Horse crashes balloon", "subject_replaced": ["Pony crashes plane", "Foal crashes plane", "Stallion crashes plane", "Colt crashes plane", "Mule crashes plane"], "verb_replaced": ["Horse demolishes plane", "Horse crashes into plane", "Horse wrecks plane", "Horse destroys plane", "Horse smashes plane"], "object_replaced": ["Horse crashes balloon", "Horse crashes aircraft", "Horse crashes glider", "Horse crashes helicopter", "Horse crashes jet"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Horse crashes plane\n", "AffectedParaphraseMaker_gptoutput": "\n1. Equine wrecks aircraft\n2. Horse causes plane to crash\n3. Horse brings down plane\n4. Horse causes airplane to crash\n5. Horse brings aircraft down", "affected_paraphrase": ["Equine wrecks aircraft", "Horse brings down plane", "Horse causes airplane to crash", "Horse brings aircraft down", "Horse causes plane to crash"]}]}
{"inputs": {"id": 670, "prompt": "Cat stomps ant", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Cat", "verb": "stomps", "object": "ant", "neg": null, "prompt_polarity_grounded": "Cat stomps ant"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Cat stomps ant. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nCat sees ant. Cat wants to catch ant.", "affected_reasoning": ["Cat sees ant", "Cat wants to catch ant."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Cat stomps ant\nsubject token: Cat\nobject token: ant\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Dog stomps ant\n2. Elephant stomps ant\n3. Fish stomps ant\n4. Monkey stomps ant\n5. Rabbit stomps ant\n\nQ2. Replacements:\n1. Cat stomps bee\n2. Cat stomps spider\n3. Cat stomps fly\n4. Cat stomps mouse\n5. Cat stomps snake", "subject_replaced": ["Dog stomps ant", "Rabbit stomps ant", "Elephant stomps ant", "Monkey stomps ant", "Fish stomps ant"], "object_replaced": ["Cat stomps bee", "Cat stomps spider", "Cat stomps mouse", "Cat stomps snake", "Cat stomps fly"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Cat stomps ant\nsubject token: Cat\nobject token: ant\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Feline stomps ant, Kitty stomps ant, Pussy stomps ant, Tabby stomps ant, Tomcat stomps ant\nQ2. Cat tramples ant, Cat crushes ant, Cat pulverizes ant, Cat smashes ant, Cat squashes ant\nQ3. Cat stomps insect, Cat stomps bug, Cat stomps crawler, Cat stomps creature, Cat stomps arthropod", "subject_replaced": ["Kitty stomps ant", "Feline stomps ant", "Tomcat stomps ant", "Pussy stomps ant", "Tabby stomps ant"], "verb_replaced": ["Cat squashes ant", "Cat tramples ant", "Cat pulverizes ant", "Cat crushes ant", "Cat smashes ant"], "object_replaced": ["Cat stomps insect", "Cat stomps creature", "Cat stomps bug", "Cat stomps arthropod", "Cat stomps crawler"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Cat stomps ant\n", "AffectedParaphraseMaker_gptoutput": "\n1. The cat stepped on the ant.\n2. The feline crushed the insect.\n3. The cat squashed the ant.\n4. The cat trampled the ant.\n5. The cat pulverized the ant.", "affected_paraphrase": ["The cat stepped on the ant.", "The feline crushed the insect.", "The cat pulverized the ant.", "The cat squashed the ant.", "The cat trampled the ant."]}]}
{"inputs": {"id": 671, "prompt": "and plane squashes tree.", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "plane", "verb": "squashes", "object": "tree", "neg": null, "prompt_polarity_grounded": "and plane squashes tree."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "and plane squashes tree.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Plane is heavier than tree. \n2. Therefore, plane squashes tree.", "affected_reasoning": ["Plane is heavier than tree.", "Therefore, plane squashes tree."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: and plane squashes tree.\nsubject token: plane\nobject token: tree\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. \"And balloon squashes tree.\"\n2. \"And car squashes tree.\"\n3. \"And train squashes tree.\"\n4. \"And boat squashes tree.\"\n5. \"And rocket squashes tree.\"\n\nQ2. Replacements:\n1. \"And plane squashes flower.\"\n2. \"And plane squashes house.\"\n3. \"And plane squashes mountain.\"\n4. \"And plane squashes lake.\"\n5. \"And plane squashes cloud.\"", "subject_replaced": ["\"And rocket squashes tree.\"", "\"And boat squashes tree.\"", "\"And train squashes tree.\"", "\"And balloon squashes tree.\"", "\"And car squashes tree.\""], "object_replaced": ["\"And plane squashes lake.\"", "\"And plane squashes flower.\"", "\"And plane squashes cloud.\"", "\"And plane squashes mountain.\"", "\"And plane squashes house.\""]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: and plane squashes tree.\nsubject token: plane\nobject token: tree\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. And aircraft crushes tree.\nQ2. And plane pulverizes tree.\nQ3. And plane flattens shrub.", "subject_replaced": ["And aircraft crushes tree."], "verb_replaced": ["And plane pulverizes tree."], "object_replaced": ["And plane flattens shrub."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: and plane squashes tree.\n", "AffectedParaphraseMaker_gptoutput": "\n1. The aircraft flattened the tree.\n2. The plane crushed the tree.\n3. The aeroplane pulverized the tree.\n4. The airplane flattened the tree.\n5. The jet squashed the tree.", "affected_paraphrase": ["The aeroplane pulverized the tree.", "The plane crushed the tree.", "The aircraft flattened the tree.", "The airplane flattened the tree.", "The jet squashed the tree."]}]}
{"inputs": {"id": 676, "prompt": "a bug climbed mountain", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "bug", "verb": "climbed", "object": "mountain", "neg": null, "prompt_polarity_grounded": "a bug climbed mountain"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a bug climbed mountain. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The bug was looking for food. \n2. It found food on the mountain.", "affected_reasoning": ["The bug was looking for food.", "It found food on mountain."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a bug climbed mountain\nsubject token: bug\nobject token: mountain\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A cat climbed mountain\n2. A fish climbed mountain\n3. A bird climbed mountain\n4. A mouse climbed mountain\n5. A snake climbed mountain\n\nQ2. Replacements:\n1. A bug climbed beach\n2. A bug climbed forest\n3. A bug climbed river\n4. A bug climbed sky\n5. A bug climbed valley", "subject_replaced": ["A mouse climbed mountain", "A fish climbed mountain", "A snake climbed mountain", "A cat climbed mountain", "A bird climbed mountain"], "object_replaced": ["A bug climbed valley", "A bug climbed sky", "A bug climbed beach", "A bug climbed river", "A bug climbed forest"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a bug climbed mountain\nsubject token: bug\nobject token: mountain\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A beetle climbed mountain, an insect ascended mountain, a caterpillar scaled mountain, a larva hiked mountain, a grub trekked mountain.\nQ2. A bug clambered mountain, a bug scrambled mountain, a bug ascended mountain, a bug hiked mountain, a bug trekked mountain.\nQ3. A bug climbed hill, a bug climbed peak, a bug climbed summit, a bug climbed ridge, a bug climbed cliff.", "subject_replaced": ["a caterpillar scaled mountain", "a grub trekked mountain.", "a larva hiked mountain", "an insect ascended mountain", "A beetle climbed mountain"], "verb_replaced": ["A bug clambered mountain", "a bug hiked mountain", "a bug trekked mountain.", "a bug scrambled mountain", "a bug ascended mountain"], "object_replaced": ["a bug climbed peak", "A bug climbed hill", "a bug climbed summit", "a bug climbed cliff.", "a bug climbed ridge"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a bug climbed mountain\n", "AffectedParaphraseMaker_gptoutput": "\n1. An insect ascended the peak.\n2. A creepy crawly scaled the mountain.\n3. A bug made its way up the mountain.\n4. A bug ventured up the mountain.\n5. A bug trekked up the mountain.", "affected_paraphrase": ["A bug ventured up the mountain.", "An insect ascended the peak.", "A bug made its way up the mountain.", "A creepy crawly scaled the mountain.", "A bug trekked up the mountain."]}]}
{"inputs": {"id": 683, "prompt": "Cotton slashes paper", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Cotton", "verb": "slashes", "object": "paper", "neg": null, "prompt_polarity_grounded": "Cotton does not tear paper."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Cotton does not tear paper.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nCotton is a soft, fibrous material; paper is made of cellulose fibers. Therefore, cotton cannot tear paper.", "affected_reasoning": ["Cotton is soft, fibrous material; paper is made of cellulose fibers", "Therefore, cotton cannot tear paper."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Cotton slashes paper\nsubject token: Cotton\nobject token: paper\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Butter slashes paper\n2. Fire slashes paper\n3. Stone slashes paper\n4. Wind slashes paper\n5. Water slashes paper\n\nQ2. Replacements:\n1. Cotton slashes rock\n2. Cotton slashes tree\n3. Cotton slashes metal\n4. Cotton slashes cloth\n5. Cotton slashes glass", "subject_replaced": ["Butter slashes paper", "Wind slashes paper", "Stone slashes paper", "Water slashes paper", "Fire slashes paper"], "object_replaced": ["Cotton slashes cloth", "Cotton slashes glass", "Cotton slashes rock", "Cotton slashes tree", "Cotton slashes metal"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Cotton slashes paper\nsubject token: Cotton\nobject token: paper\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Wool shreds paper, Linen tears paper, Muslin rips paper, Satin cuts paper, Denim slices paper.\nQ2. Cotton pulverizes paper, Cotton grinds paper, Cotton crushes paper, Cotton smashes paper, Cotton annihilates paper.\nQ3. Cotton slashes parchment, Cotton slashes cardstock, Cotton slashes vellum, Cotton slashes tissue, Cotton slashes newsprint.", "subject_replaced": ["Linen tears paper", "Denim slices paper.", "Wool shreds paper", "Satin cuts paper", "Muslin rips paper"], "verb_replaced": ["Cotton smashes paper", "Cotton pulverizes paper", "Cotton grinds paper", "Cotton annihilates paper.", "Cotton crushes paper"], "object_replaced": ["Cotton slashes parchment", "Cotton slashes newsprint.", "Cotton slashes vellum", "Cotton slashes tissue", "Cotton slashes cardstock"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Cotton slashes paper\n", "AffectedParaphraseMaker_gptoutput": "\n1. Paper is cut by cotton.\n2. Cotton is used to cut paper.\n3. Paper is sliced by cotton.\n4. Cotton is employed to sever paper.\n5. Cotton is utilized to reduce paper.", "affected_paraphrase": ["Cotton is used to cut paper.", "Cotton is utilized to reduce paper.", "Paper is sliced by cotton.", "Paper is cut by cotton.", "Cotton is employed to sever paper."]}]}
{"inputs": {"id": 690, "prompt": "the man plucks truck", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "man", "verb": "plucks", "object": "truck", "neg": null, "prompt_polarity_grounded": "The man does not pluck truck."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The man does not pluck truck.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Plucking is an action done to a stringed instrument.\n2. Trucks do not have strings.", "affected_reasoning": ["Plucking is action done to stringed instrument.", "Trucks do not have strings."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the man plucks truck\nsubject token: man\nobject token: truck\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The cat plucks truck\n2. The boy plucks truck\n3. The girl plucks truck\n4. The tree plucks truck\n5. The dog plucks truck\n\nQ2. Replacements:\n1. The man plucks car\n2. The man plucks boat\n3. The man plucks airplane\n4. The man plucks train\n5. The man plucks bicycle", "subject_replaced": ["The girl plucks truck", "The cat plucks truck", "The boy plucks truck", "The tree plucks truck", "The dog plucks truck"], "object_replaced": ["The man plucks airplane", "The man plucks train", "The man plucks bicycle", "The man plucks car", "The man plucks boat"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the man plucks truck\nsubject token: man\nobject token: truck\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The person plucks truck, the individual plucks truck, the human plucks truck, the male plucks truck, the guy plucks truck.\nQ2. The man plucks lorry, the man grabs truck, the man hauls truck, the man drags truck, the man lifts truck.\nQ3. The man plucks automobile, the man plucks van, the man plucks lorry, the man plucks pickup, the man plucks SUV.", "subject_replaced": ["the human plucks truck", "the individual plucks truck", "the male plucks truck", "The person plucks truck", "the guy plucks truck."], "verb_replaced": ["the man lifts truck.", "the man grabs truck", "the man hauls truck", "the man drags truck", "The man plucks lorry"], "object_replaced": ["the man plucks SUV.", "the man plucks lorry", "the man plucks van", "The man plucks automobile", "the man plucks pickup"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the man plucks truck\n", "AffectedParaphraseMaker_gptoutput": "\n1. The man harvests truck.\n2. The man reaps truck.\n3. The man gathers truck.\n4. The man collects truck.\n5. The man picks truck.", "affected_paraphrase": ["The man harvests truck.", "The man collects truck.", "The man picks truck.", "The man gathers truck.", "The man reaps truck."]}]}
{"inputs": {"id": 700, "prompt": "Oil curb boat", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Oil", "verb": "curb", "object": "boat", "neg": null, "prompt_polarity_grounded": "Oil does not curb boat."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Oil does not curb boat.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Oil is a liquid, and liquids do not provide enough friction to slow down a boat. \n2. Therefore, oil does not curb boat movement.", "affected_reasoning": ["Oil is liquid, and liquids do not provide enough friction to slow down boat.", "Therefore, oil does not curb boat movement."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Oil curb boat\nsubject token: Oil\nobject token: boat\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\n1. Chair curb boat\n2. Pencil curb boat\n3. Car curb boat\n4. Apple curb boat\n5. Book curb boat\n\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n1. Oil curb tree\n2. Oil curb house\n3. Oil curb car\n4. Oil curb pencil\n5. Oil curb chair", "subject_replaced": ["Make 5 such replacements.", "Apple curb boat", "Pencil curb boat", "Book curb boat", "Chair curb boat", "Car curb boat"], "object_replaced": ["Make 5 such replacements.", "Oil curb chair", "Oil curb pencil", "Oil curb tree", "Oil curb house"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Oil curb boat\nsubject token: Oil\nobject token: boat\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants: Grease curb boat, Lubricate curb boat, Fuel curb boat, Petroleum curb boat, Gasoline curb boat.\nQ2. Variants: Oil restrain boat, Oil contain boat, Oil check boat, Oil limit boat, Oil control boat.\nQ3. Variants: Oil curb vessel, Oil curb canoe, Oil curb dinghy, Oil curb yacht, Oil curb raft.", "subject_replaced": ["Gasoline curb boat.", "Grease curb boat", "Petroleum curb boat", "Fuel curb boat", "Lubricate curb boat"], "verb_replaced": ["Oil control boat.", "Oil contain boat", "Oil restrain boat", "Oil check boat", "Oil limit boat"], "object_replaced": ["Oil curb raft.", "Oil curb canoe", "Oil curb dinghy", "Oil curb yacht", "Oil curb vessel"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Oil curb boat\n", "AffectedParaphraseMaker_gptoutput": "\n1. Boat that is powered by oil\n2. Vessel that is restricted by oil\n3. Ship that is limited by oil\n4. Boat that is regulated by oil\n5. Vessel that is controlled by oil", "affected_paraphrase": ["Vessel that is restricted by oil", "Vessel that is controlled by oil", "Ship that is limited by oil", "Boat that is powered by oil", "Boat that is regulated by oil"]}]}
{"inputs": {"id": 703, "prompt": "a hand clenches bird", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "hand", "verb": "clenches", "object": "bird", "neg": null, "prompt_polarity_grounded": "a hand clenches bird"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a hand clenches bird. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The hand is trying to catch the bird.\n2. The hand is clenching to hold onto the bird.", "affected_reasoning": ["The hand is trying to catch bird.", "The hand is clenching to hold onto bird."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a hand clenches bird\nsubject token: hand\nobject token: bird\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A foot clenches bird\n2. A fist clenches bird\n3. A paw clenches bird\n4. A claw clenches bird\n5. A grip clenches bird\n\nQ2. Replacements:\n1. A hand clenches fish\n2. A hand clenches insect\n3. A hand clenches mammal\n4. A hand clenches reptile\n5. A hand clenches amphibian", "subject_replaced": ["A foot clenches bird", "A grip clenches bird", "A fist clenches bird", "A paw clenches bird", "A claw clenches bird"], "object_replaced": ["A hand clenches amphibian", "A hand clenches insect", "A hand clenches reptile", "A hand clenches mammal", "A hand clenches fish"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a hand clenches bird\nsubject token: hand\nobject token: bird\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A fist clenches bird, a paw clenches bird, a grip clenches bird, a grasp clenches bird, a hold clenches bird.\nQ2. A hand grasps bird, a hand squeezes bird, a hand clutches bird, a hand grips bird, a hand seizes bird.\nQ3. A hand clenches avian, a hand clenches fowl, a hand clenches raptor, a hand clenches pigeon, a hand clenches crow.", "subject_replaced": ["a grip clenches bird", "A fist clenches bird", "a grasp clenches bird", "a paw clenches bird", "a hold clenches bird."], "verb_replaced": ["A hand grasps bird", "a hand grips bird", "a hand clutches bird", "a hand seizes bird.", "a hand squeezes bird"], "object_replaced": ["a hand clenches crow.", "a hand clenches raptor", "a hand clenches fowl", "a hand clenches pigeon", "A hand clenches avian"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a hand clenches bird\n", "AffectedParaphraseMaker_gptoutput": "\n1. A hand grasps a bird.\n2. A hand squeezes a bird.\n3. A hand holds a bird.\n4. A hand grips a bird.\n5. A hand clutches a bird.", "affected_paraphrase": ["A hand grasps a bird.", "A hand squeezes a bird.", "A hand grips a bird.", "A hand clutches a bird.", "A hand holds a bird."]}]}
{"inputs": {"id": 716, "prompt": "a ball hurled trolley", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "ball", "verb": "hurled", "object": "trolley", "neg": null, "prompt_polarity_grounded": "A ball was not hurled by the trolley."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A ball was not hurled by the trolley.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The trolley does not have the ability to hurl a ball.\n2. Therefore, the trolley could not have hurled a ball.", "affected_reasoning": ["The trolley does not have ability to hurl ball.", "Therefore, trolley could not have hurled ball."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a ball hurled trolley\nsubject token: ball\nobject token: trolley\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a rock hurled trolley\n2. a car hurled trolley\n3. a tree hurled trolley\n4. a plane hurled trolley\n5. a dog hurled trolley\n\nQ2. Replacements:\n1. a ball hurled train\n2. a ball hurled boat\n3. a ball hurled house\n4. a ball hurled bike\n5. a ball hurled chair", "subject_replaced": ["a dog hurled trolley", "a rock hurled trolley", "a plane hurled trolley", "a tree hurled trolley", "a car hurled trolley"], "object_replaced": ["a ball hurled chair", "a ball hurled train", "a ball hurled bike", "a ball hurled boat", "a ball hurled house"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a ball hurled trolley\nsubject token: ball\nobject token: trolley\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A sphere hurled trolley, a globe hurled trolley, a pellet hurled trolley, a marble hurled trolley, a bocce hurled trolley.\n\nQ2. Threw a ball trolley, tossed a ball trolley, flung a ball trolley, hurled a ball trolley, lobbed a ball trolley.\n\nQ3. A ball hurled cart, a ball hurled wagon, a ball hurled carriage, a ball hurled chariot, a ball hurled buggy.", "subject_replaced": ["A sphere hurled trolley", "a globe hurled trolley", "a pellet hurled trolley", "a bocce hurled trolley.", "a marble hurled trolley"], "verb_replaced": ["lobbed a ball trolley.", "flung a ball trolley", "tossed a ball trolley", "hurled a ball trolley", "Threw a ball trolley"], "object_replaced": ["a ball hurled buggy.", "A ball hurled cart", "a ball hurled carriage", "a ball hurled chariot", "a ball hurled wagon"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a ball hurled trolley\n", "AffectedParaphraseMaker_gptoutput": "\n1. A trolley thrown with a ball\n2. A trolley that was tossed with a ball\n3. A trolley that was thrown using a ball\n4. A trolley that was propelled with a ball\n5. A trolley that was slung with a ball", "affected_paraphrase": ["A trolley that was tossed with a ball", "A trolley that was slung with a ball", "A trolley that was propelled with a ball", "A trolley thrown with a ball", "A trolley that was thrown using a ball"]}]}
{"inputs": {"id": 718, "prompt": "a man constructs building", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "man", "verb": "constructs", "object": "building", "neg": null, "prompt_polarity_grounded": "a man constructs building"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a man constructs building. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Man needs shelter.\n2. He builds a building to provide shelter.", "affected_reasoning": ["Man needs shelter.", "He builds building to provide shelter."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a man constructs building\nsubject token: man\nobject token: building\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A cat constructs building\n2. A tree constructs building\n3. A dog constructs building\n4. A bird constructs building\n5. A fish constructs building\n\nQ2. Replacements:\n1. A man constructs cars\n2. A man constructs airplanes\n3. A man constructs boats\n4. A man constructs robots\n5. A man constructs furniture", "subject_replaced": ["A fish constructs building", "A cat constructs building", "A bird constructs building", "A tree constructs building", "A dog constructs building"], "object_replaced": ["A man constructs robots", "A man constructs furniture", "A man constructs boats", "A man constructs cars", "A man constructs airplanes"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a man constructs building\nsubject token: man\nobject token: building\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A person constructs building, an engineer builds building, a craftsman creates building, a builder erects building, a contractor constructs building.\n\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nA man constructs, assembles, erects, builds, fabricates building.\n\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\nA man constructs edifice, structure, dwelling, residence, mansion.", "subject_replaced": ["A person constructs building", " an engineer builds building", " a craftsman creates building", " a builder erects building", " a contractor constructs building."], "verb_replaced": ["A man constructs", " assembles", " erects", " builds", " fabricates building.", "Write up to 5 such variants."], "object_replaced": ["A man constructs edifice", " structure", " dwelling", " residence", " mansion.", "Write up to 5 such variants."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a man constructs building\n", "AffectedParaphraseMaker_gptoutput": "\n1. A person puts together structures\n2. An individual assembles edifices\n3. A male fabricates constructions\n4. A human being erects structures\n5. A guy creates buildings", "affected_paraphrase": ["A male fabricates constructions", "An individual assembles edifices", "A human being erects structures", "A person puts together structures", "A guy creates buildings"]}]}
{"inputs": {"id": 720, "prompt": "a hand taps floor", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "hand", "verb": "taps", "object": "floor", "neg": null, "prompt_polarity_grounded": "a hand taps floor"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a hand taps floor. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Person taps floor. \n2. Person wants to make noise.", "affected_reasoning": ["Person taps floor.", "Person wants to make noise."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a hand taps floor\nsubject token: hand\nobject token: floor\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A spoon taps floor\n2. A foot taps floor\n3. A finger taps floor\n4. A nose taps floor\n5. A head taps floor\n\nQ2. Replacements:\n1. A hand taps wall\n2. A hand taps ceiling\n3. A hand taps table\n4. A hand taps chair\n5. A hand taps carpet", "subject_replaced": ["A finger taps floor", "A nose taps floor", "A foot taps floor", "A head taps floor", "A spoon taps floor"], "object_replaced": ["A hand taps wall", "A hand taps carpet", "A hand taps ceiling", "A hand taps table", "A hand taps chair"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a hand taps floor\nsubject token: hand\nobject token: floor\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A fist taps floor, a palm strikes floor, a knuckle raps floor, a finger knocks floor, a thumb thumps floor.\n\nQ2. A hand drums floor, a hand beats floor, a hand pats floor, a hand claps floor, a hand taps surface.\n\nQ3. A hand taps tile, a hand taps wood, a hand taps carpet, a hand taps concrete, a hand taps stone.", "subject_replaced": ["a finger knocks floor", "a knuckle raps floor", "a thumb thumps floor.", "a palm strikes floor", "A fist taps floor"], "verb_replaced": ["a hand taps surface.", "a hand pats floor", "a hand claps floor", "A hand drums floor", "a hand beats floor"], "object_replaced": ["a hand taps carpet", "a hand taps concrete", "A hand taps tile", "a hand taps stone.", "a hand taps wood"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a hand taps floor\n", "AffectedParaphraseMaker_gptoutput": "\n1. A palm strikes the ground\n2. A fist thumps the floor\n3. A knuckle raps the surface\n4. A digit knocks the floor\n5. A digit drums the floor", "affected_paraphrase": ["A fist thumps the floor", "A digit knocks the floor", "A palm strikes the ground", "A digit drums the floor", "A knuckle raps the surface"]}]}
{"inputs": {"id": 745, "prompt": "car smashes table", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "car", "verb": "smashes", "object": "table", "neg": null, "prompt_polarity_grounded": "car smashes table"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "car smashes table. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nCar hits table; table breaks.", "affected_reasoning": ["Car hits table; table breaks."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: car smashes table\nsubject token: car\nobject token: table\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Plane smashes table\n2. Dog smashes table\n3. Pen smashes table\n4. Book smashes table\n5. Chair smashes table\n\nQ2. Replacements:\n1. Car smashes chair\n2. Car smashes pen\n3. Car smashes book\n4. Car smashes dog\n5. Car smashes plane", "subject_replaced": ["Plane smashes table", "Pen smashes table", "Book smashes table", "Chair smashes table", "Dog smashes table"], "object_replaced": ["Car smashes chair", "Car smashes pen", "Car smashes dog", "Car smashes book", "Car smashes plane"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: car smashes table\nsubject token: car\nobject token: table\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Automobile smashes table\n2. Vehicle smashes table\n3. Truck smashes table\n4. Sedan smashes table\n5. SUV smashes table\n\nQ2.\n1. Car crashes table\n2. Car demolishes table\n3. Car shatters table\n4. Car destroys table\n5. Car pulverizes table\n\nQ3.\n1. Car smashes desk\n2. Car smashes counter\n3. Car smashes countertop\n4. Car smashes furniture\n5. Car smashes stool", "subject_replaced": ["Sedan smashes table", "Vehicle smashes table", "Truck smashes table", "Automobile smashes table", "SUV smashes table"], "verb_replaced": ["Car demolishes table", "Car shatters table", "Car pulverizes table", "Car crashes table", "Car destroys table"], "object_replaced": ["Car smashes desk", "Car smashes countertop", "Car smashes counter", "Car smashes furniture", "Car smashes stool"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: car smashes table\n", "AffectedParaphraseMaker_gptoutput": "\n1. The car collided with the table.\n2. The car crashed into the table.\n3. The car plowed into the table.\n4. The car slammed into the table.\n5. The car smashed into the table.", "affected_paraphrase": ["The car collided with the table.", "The car smashed into the table.", "The car slammed into the table.", "The car crashed into the table.", "The car plowed into the table."]}]}
{"inputs": {"id": 754, "prompt": "Giraffe bakes cake", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Giraffe", "verb": "bakes", "object": "cake", "neg": null, "prompt_polarity_grounded": "Giraffe does not bake cake."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Giraffe does not bake cake.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Giraffes are animals.\n2. Animals cannot bake cakes.", "affected_reasoning": ["Giraffes are animals.", "Animals cannot bake cakes."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Giraffe bakes cake\nsubject token: Giraffe\nobject token: cake\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant bakes cake\n2. Tiger bakes cake\n3. Monkey bakes cake\n4. Zebra bakes cake\n5. Kangaroo bakes cake\n\nQ2. Replacements:\n1. Giraffe bakes pie\n2. Giraffe bakes bread\n3. Giraffe bakes cookies\n4. Giraffe bakes ice cream\n5. Giraffe bakes donuts", "subject_replaced": ["Monkey bakes cake", "Kangaroo bakes cake", "Zebra bakes cake", "Elephant bakes cake", "Tiger bakes cake"], "object_replaced": ["Giraffe bakes cookies", "Giraffe bakes ice cream", "Giraffe bakes donuts", "Giraffe bakes bread", "Giraffe bakes pie"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Giraffe bakes cake\nsubject token: Giraffe\nobject token: cake\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Elephant bakes cake, Zebra bakes cake, Mammoth bakes cake, Rhino bakes cake, Antelope bakes cake.\nQ2. Giraffe concocts cake, Giraffe whips cake, Giraffe stirs cake, Giraffe mixes cake, Giraffe kneads cake.\nQ3. Giraffe bakes pastry, Giraffe bakes muffin, Giraffe bakes tart, Giraffe bakes cupcake, Giraffe bakes brownie.", "subject_replaced": ["Rhino bakes cake", "Antelope bakes cake.", "Mammoth bakes cake", "Zebra bakes cake", "Elephant bakes cake"], "verb_replaced": ["Giraffe whips cake", "Giraffe concocts cake", "Giraffe kneads cake.", "Giraffe mixes cake", "Giraffe stirs cake"], "object_replaced": ["Giraffe bakes brownie.", "Giraffe bakes tart", "Giraffe bakes muffin", "Giraffe bakes pastry", "Giraffe bakes cupcake"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Giraffe bakes cake\n", "AffectedParaphraseMaker_gptoutput": "\n1. A giraffe is making a cake.\n2. A giraffe is baking a dessert.\n3. A giraffe is concocting a cake.\n4. A giraffe is preparing a cake.\n5. A giraffe is cooking up a cake.", "affected_paraphrase": ["A giraffe is baking a dessert.", "A giraffe is cooking up a cake.", "A giraffe is making a cake.", "A giraffe is concocting a cake.", "A giraffe is preparing a cake."]}]}
{"inputs": {"id": 759, "prompt": "car fills cup", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "car", "verb": "fills", "object": "cup", "neg": null, "prompt_polarity_grounded": "Car does not fill cup."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Car does not fill cup.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Car does not have a cup. \n2. Therefore, it cannot fill a cup.", "affected_reasoning": ["Car does not have cup.", "Therefore, it cannot fill cup."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: car fills cup\nsubject token: car\nobject token: cup\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Plane fills cup\n2. Dog fills cup\n3. Pen fills cup\n4. Tree fills cup\n5. Book fills cup\n\nQ2. Replacements:\n1. Car fills bowl\n2. Car fills chair\n3. Car fills box\n4. Car fills pencil\n5. Car fills tree", "subject_replaced": ["Dog fills cup", "Tree fills cup", "Plane fills cup", "Pen fills cup", "Book fills cup"], "object_replaced": ["Car fills chair", "Car fills pencil", "Car fills bowl", "Car fills box", "Car fills tree"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: car fills cup\nsubject token: car\nobject token: cup\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Automobile fills cup\n2. Vehicle fills cup\n3. Motor fills cup\n4. Sedan fills cup\n5. Truck fills cup\n\nQ2.\n1. Car pours cup\n2. Car empties cup\n3. Car refills cup\n4. Car tops up cup\n5. Car replenishes cup\n\nQ3.\n1. Car fills mug\n2. Car fills glass\n3. Car fills container\n4. Car fills vessel\n5. Car fills jar", "subject_replaced": ["Automobile fills cup", "Motor fills cup", "Vehicle fills cup", "Truck fills cup", "Sedan fills cup"], "verb_replaced": ["Car replenishes cup", "Car tops up cup", "Car empties cup", "Car refills cup", "Car pours cup"], "object_replaced": ["Car fills vessel", "Car fills container", "Car fills glass", "Car fills mug", "Car fills jar"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: car fills cup\n", "AffectedParaphraseMaker_gptoutput": "\n1. The car is filling the cup.\n2. The cup is being filled by the car.\n3. The car is pouring into the cup.\n4. The cup is being supplied with liquid from the car.\n5. The car is topping off the cup.", "affected_paraphrase": ["The cup is being filled by the car.", "The cup is being supplied with liquid from the car.", "The car is topping off the cup.", "The car is pouring into the cup.", "The car is filling the cup."]}]}
{"inputs": {"id": 772, "prompt": "an arm hooked spatula", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "arm", "verb": "hooked", "object": "spatula", "neg": null, "prompt_polarity_grounded": "an arm hooked spatula"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "an arm hooked spatula. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. A spatula is a tool used for flipping food. \n2. An arm hooked spatula has a handle that curves around the arm, making it easier to flip food.", "affected_reasoning": ["A spatula is tool used for flipping food.", "An arm hooked spatula has handle that curves around arm, making it easier to flip food."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: an arm hooked spatula\nsubject token: arm\nobject token: spatula\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. an elephant hooked spatula\n2. a pencil hooked spatula\n3. a tree hooked spatula\n4. a shoe hooked spatula\n5. a book hooked spatula\n\nQ2. Replacements:\n1. an arm hooked balloon\n2. an arm hooked hammer\n3. an arm hooked fork\n4. an arm hooked spoon\n5. an arm hooked knife", "subject_replaced": ["a pencil hooked spatula", "a shoe hooked spatula", "a book hooked spatula", "a tree hooked spatula", "an elephant hooked spatula"], "object_replaced": ["an arm hooked fork", "an arm hooked balloon", "an arm hooked spoon", "an arm hooked knife", "an arm hooked hammer"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: an arm hooked spatula\nsubject token: arm\nobject token: spatula\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A hand hooked spatula, a forearm hooked spatula, a limb hooked spatula, a wrist hooked spatula, an elbow hooked spatula.\nQ2. An arm clasped spatula, an arm grasped spatula, an arm seized spatula, an arm clutched spatula, an arm snagged spatula.\nQ3. An arm hooked spoon, an arm hooked ladle, an arm hooked turner, an arm hooked tongs, an arm hooked whisk.", "subject_replaced": ["a forearm hooked spatula", "a limb hooked spatula", "an elbow hooked spatula.", "A hand hooked spatula", "a wrist hooked spatula"], "verb_replaced": ["an arm seized spatula", "An arm clasped spatula", "an arm grasped spatula", "an arm snagged spatula.", "an arm clutched spatula"], "object_replaced": ["an arm hooked ladle", "an arm hooked turner", "an arm hooked whisk.", "An arm hooked spoon", "an arm hooked tongs"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: an arm hooked spatula\n", "AffectedParaphraseMaker_gptoutput": "\n1. A spatula with a curved handle\n2. A spoon-shaped tool with a bent arm\n3. A scooping utensil with a bent arm\n4. A curved-handled scooping implement\n5. A spoon-like device with a curved arm", "affected_paraphrase": ["A spatula with a curved handle", "A spoon-shaped tool with a bent arm", "A scooping utensil with a bent arm", "A spoon-like device with a curved arm", "A curved-handled scooping implement"]}]}
{"inputs": {"id": 773, "prompt": "rope attaches letter", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "rope", "verb": "attaches", "object": "letter", "neg": null, "prompt_polarity_grounded": "Rope does not attach letter."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Rope does not attach letter.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Rope is an inanimate object. \n2. Inanimate objects cannot attach letters.", "affected_reasoning": ["Rope is inanimate object.", "Inanimate objects cannot attach letters."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: rope attaches letter\nsubject token: rope\nobject token: letter\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1.\n1. Glue attaches letter\n2. String attaches letter\n3. Chain attaches letter\n4. Cable attaches letter\n5. Twine attaches letter\n\nQ2.\n1. Rope attaches envelope\n2. Rope attaches package\n3. Rope attaches box\n4. Rope attaches postcard\n5. Rope attaches parcel", "subject_replaced": ["Chain attaches letter", "Cable attaches letter", "String attaches letter", "Twine attaches letter", "Glue attaches letter"], "object_replaced": ["Rope attaches package", "Rope attaches envelope", "Rope attaches postcard", "Rope attaches parcel", "Rope attaches box"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: rope attaches letter\nsubject token: rope\nobject token: letter\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Cord attaches letter, String ties letter, Twine binds letter, Lanyard secures letter, Cable fastens letter.\nQ2. Connects attaches letter, Links ties letter, Joins binds letter, Unites secures letter, Attaches fastens letter.\nQ3. Correspondence attaches letter, Envelope ties letter, Postcard binds letter, Document secures letter, Note fastens letter.", "subject_replaced": ["Lanyard secures letter", "Twine binds letter", "Cable fastens letter.", "String ties letter", "Cord attaches letter"], "verb_replaced": ["Connects attaches letter", "Joins binds letter", "Unites secures letter", "Links ties letter", "Attaches fastens letter."], "object_replaced": ["Note fastens letter.", "Correspondence attaches letter", "Document secures letter", "Postcard binds letter", "Envelope ties letter"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: rope attaches letter\n", "AffectedParaphraseMaker_gptoutput": "\n1. Letter is connected by rope\n2. Rope binds letter\n3. Letter is tied with rope\n4. Rope links letter\n5. Rope fastens letter", "affected_paraphrase": ["Rope binds letter", "Letter is connected by rope", "Rope links letter", "Rope fastens letter", "Letter is tied with rope"]}]}
{"inputs": {"id": 774, "prompt": "a stick draws house", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "stick", "verb": "draws", "object": "house", "neg": null, "prompt_polarity_grounded": "a stick draws house"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a stick draws house. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Stick moves across paper to create lines. \n2. Lines form a house shape.", "affected_reasoning": ["Stick moves across paper to create lines.", "Lines form house shape."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a stick draws house\nsubject token: stick\nobject token: house\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A balloon draws house\n2. A pencil draws house\n3. A hammer draws house\n4. A spoon draws house\n5. A fork draws house\n\nQ2. Replacements:\n1. A stick draws tree\n2. A stick draws car\n3. A stick draws mountain\n4. A stick draws ocean\n5. A stick draws balloon", "subject_replaced": ["A pencil draws house", "A fork draws house", "A spoon draws house", "A balloon draws house", "A hammer draws house"], "object_replaced": ["A stick draws ocean", "A stick draws balloon", "A stick draws mountain", "A stick draws car", "A stick draws tree"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a stick draws house\nsubject token: stick\nobject token: house\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A rod draws house, a cane draws house, a baton draws house, a staff draws house, a wand draws house.\n\nQ2. A stick creates house, a stick builds house, a stick designs house, a stick constructs house, a stick paints house.\n\nQ3. A stick draws mansion, a stick draws cottage, a stick draws abode, a stick draws dwelling, a stick draws residence.", "subject_replaced": ["A rod draws house", "a wand draws house.", "a staff draws house", "a cane draws house", "a baton draws house"], "verb_replaced": ["a stick paints house.", "a stick designs house", "A stick creates house", "a stick builds house", "a stick constructs house"], "object_replaced": ["a stick draws residence.", "A stick draws mansion", "a stick draws abode", "a stick draws cottage", "a stick draws dwelling"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a stick draws house\n", "AffectedParaphraseMaker_gptoutput": "\n1. A branch creates a dwelling\n2. A stick is used to sketch a house\n3. A stick is employed to draw a house\n4. A stick is utilized to depict a house\n5. A stick is utilized to construct a house", "affected_paraphrase": ["A stick is employed to draw a house", "A stick is used to sketch a house", "A stick is utilized to depict a house", "A stick is utilized to construct a house", "A branch creates a dwelling"]}]}
{"inputs": {"id": 783, "prompt": "Ant heaves pea", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Ant", "verb": "heaves", "object": "pea", "neg": null, "prompt_polarity_grounded": "Ant heaves pea"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Ant heaves pea. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nAnt is strong. \nAnt pushes pea.", "affected_reasoning": ["Ant is strong.", "Ant pushes pea."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Ant heaves pea\nsubject token: Ant\nobject token: pea\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Ant flings balloon\n2. Ant tosses feather\n3. Ant launches rocket\n4. Ant throws stone\n5. Ant hurls disc\n\nQ2. Replacements:\n1. Ant heaves apple\n2. Ant heaves kite\n3. Ant heaves wheel\n4. Ant heaves book\n5. Ant heaves star", "subject_replaced": ["Ant flings balloon", "Ant hurls disc", "Ant tosses feather", "Ant throws stone", "Ant launches rocket"], "object_replaced": ["Ant heaves star", "Ant heaves book", "Ant heaves apple", "Ant heaves wheel", "Ant heaves kite"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Ant heaves pea\nsubject token: Ant\nobject token: pea\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. Beetle heaves pea\n2. Spider heaves pea\n3. Insect heaves pea\n4. Worm heaves pea\n5. Fly heaves pea\n\nQ2. Variants:\n1. Ant heaves flings\n2. Ant tosses pea\n3. Ant throws pea\n4. Ant launches pea\n5. Ant hurls pea\n\nQ3. Variants:\n1. Ant heaves bean\n2. Ant heaves lentil\n3. Ant heaves chickpea\n4. Ant heaves split pea\n5. Ant heaves kidney bean", "subject_replaced": ["Worm heaves pea", "Spider heaves pea", "Beetle heaves pea", "Fly heaves pea", "Insect heaves pea"], "verb_replaced": ["Ant heaves flings", "Ant throws pea", "Ant launches pea", "Ant hurls pea", "Ant tosses pea"], "object_replaced": ["Ant heaves lentil", "Ant heaves split pea", "Ant heaves bean", "Ant heaves chickpea", "Ant heaves kidney bean"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Ant heaves pea\n", "AffectedParaphraseMaker_gptoutput": "\n1. He lifts the pea with effort.\n2. He struggles to raise the pea.\n3. He strains to hoist the pea.\n4. He exerts himself to move the pea.\n5. He toils to heave the pea.", "affected_paraphrase": ["He struggles to raise the pea.", "He exerts himself to move the pea.", "He toils to heave the pea.", "He strains to hoist the pea.", "He lifts the pea with effort."]}]}
{"inputs": {"id": 786, "prompt": "the worm slams door", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "worm", "verb": "slams", "object": "door", "neg": null, "prompt_polarity_grounded": "The worm does not slam door."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The worm does not slam door.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Worms do not have arms to slam doors. \n2. Therefore, they cannot slam doors.", "affected_reasoning": ["Worms do not have arms to slam doors.", "Therefore, they cannot slam doors."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the worm slams door\nsubject token: worm\nobject token: door\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The cat slams door\n2. The bird slams door\n3. The fish slams door\n4. The mouse slams door\n5. The snake slams door\n\nQ2. Replacements:\n1. The worm slams window\n2. The worm slams table\n3. The worm slams chair\n4. The worm slams wall\n5. The worm slams cupboard", "subject_replaced": ["The cat slams door", "The bird slams door", "The fish slams door", "The mouse slams door", "The snake slams door"], "object_replaced": ["The worm slams table", "The worm slams chair", "The worm slams window", "The worm slams cupboard", "The worm slams wall"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the worm slams door\nsubject token: worm\nobject token: door\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The caterpillar slams door, The grub slams door, The larva slams door, The maggot slams door, The pupa slams door.\nQ2. The worm slams shut, The worm slams close, The worm slams latch, The worm slams seal, The worm slams bar.\nQ3. The worm slams gate, The worm slams portal, The worm slams entrance, The worm slams window, The worm slams barrier.", "subject_replaced": ["The caterpillar slams door", "The pupa slams door.", "The larva slams door", "The grub slams door", "The maggot slams door"], "verb_replaced": ["The worm slams latch", "The worm slams shut", "The worm slams bar.", "The worm slams seal", "The worm slams close"], "object_replaced": ["The worm slams entrance", "The worm slams barrier.", "The worm slams gate", "The worm slams window", "The worm slams portal"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the worm slams door\n", "AffectedParaphraseMaker_gptoutput": "\n1. The worm shut the door with force.\n2. The worm slammed the door shut.\n3. The worm closed the door with a bang.\n4. The worm banged the door shut.\n5. The worm shut the door abruptly.", "affected_paraphrase": ["The worm shut the door with force.", "The worm shut the door abruptly.", "The worm slammed the door shut.", "The worm banged the door shut.", "The worm closed the door with a bang."]}]}
{"inputs": {"id": 787, "prompt": "A boat contains lion", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "boat", "verb": "contains", "object": "lion", "neg": null, "prompt_polarity_grounded": "A boat contains lion"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A boat contains lion. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The boat is transporting a lion. \n2. The lion is being moved to a new location.", "affected_reasoning": ["The boat is transporting lion.", "The lion is being moved to new location."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: A boat contains lion\nsubject token: boat\nobject token: lion\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A car contains lion\n2. A plane contains lion\n3. A train contains lion\n4. A house contains lion\n5. A tree contains lion\n\nQ2. Replacements:\n1. A boat contains tiger\n2. A boat contains elephant\n3. A boat contains monkey\n4. A boat contains giraffe\n5. A boat contains zebra", "subject_replaced": ["A tree contains lion", "A car contains lion", "A train contains lion", "A house contains lion", "A plane contains lion"], "object_replaced": ["A boat contains zebra", "A boat contains giraffe", "A boat contains monkey", "A boat contains elephant", "A boat contains tiger"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: A boat contains lion\nsubject token: boat\nobject token: lion\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A vessel contains lion, A craft holds lion, A ship carries lion, A canoe contains lion, A dinghy holds lion.\n\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nA boat includes lion, A boat houses lion, A boat holds lion, A boat shelters lion, A boat contains lion.\n\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\nA boat contains tiger, A boat contains cougar, A boat contains panther, A boat contains jaguar, A boat contains cheetah.", "subject_replaced": ["A vessel contains lion", " A craft holds lion", " A ship carries lion", " A canoe contains lion", " A dinghy holds lion."], "verb_replaced": ["A boat includes lion", " A boat houses lion", " A boat holds lion", " A boat shelters lion", " A boat contains lion.", "Write up to 5 such variants."], "object_replaced": ["A boat contains tiger", " A boat contains cougar", " A boat contains panther", " A boat contains jaguar", " A boat contains cheetah.", "Write up to 5 such variants."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: A boat contains lion\n", "AffectedParaphraseMaker_gptoutput": "\n1. A vessel holds a lion.\n2. A ship has a lion inside.\n3. A boat is home to a lion.\n4. A boat is harboring a lion.\n5. A boat is carrying a lion.", "affected_paraphrase": ["A ship has a lion inside.", "A boat is home to a lion.", "A vessel holds a lion.", "A boat is carrying a lion.", "A boat is harboring a lion."]}]}
{"inputs": {"id": 790, "prompt": "Infant chew toy", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Infant", "verb": "chew", "object": "toy", "neg": null, "prompt_polarity_grounded": "Infant not chew toy."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Infant not chew toy.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Infants lack the necessary teeth to chew toys. \n2. Chewing toys requires teeth to break them down.", "affected_reasoning": ["Infants lack necessary teeth to chew toys.", "Chewing toys requires teeth to break them down."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Infant chew toy\nsubject token: Infant\nobject token: toy\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Puppy chew toy\n2. Child chew toy\n3. Adult chew toy\n4. Baby chew toy\n5. Toddler chew toy\n\nQ2. Replacements:\n1. Infant chew book\n2. Infant chew game\n3. Infant chew ball\n4. Infant chew doll\n5. Infant chew block", "subject_replaced": ["Puppy chew toy", "Toddler chew toy", "Child chew toy", "Adult chew toy", "Baby chew toy"], "object_replaced": ["Infant chew book", "Infant chew game", "Infant chew block", "Infant chew ball", "Infant chew doll"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Infant chew toy\nsubject token: Infant\nobject token: toy\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Baby chew toy, Toddler chew toy, Newborn chew toy, Young child chew toy, Preemie chew toy\nQ2. Infant gnaw toy, Infant munch toy, Infant nibble toy, Infant chomp toy, Infant crunch toy\nQ3. Infant chew rattle, Infant chew block, Infant chew teether, Infant chew pacifier, Infant chew ball", "subject_replaced": ["Newborn chew toy", "Toddler chew toy", "Young child chew toy", "Preemie chew toy", "Baby chew toy"], "verb_replaced": ["Infant nibble toy", "Infant crunch toy", "Infant gnaw toy", "Infant munch toy", "Infant chomp toy"], "object_replaced": ["Infant chew pacifier", "Infant chew teether", "Infant chew block", "Infant chew ball", "Infant chew rattle"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Infant chew toy\n", "AffectedParaphraseMaker_gptoutput": "\n1. Baby teether\n2. Teething toy\n3. Chewing plaything for infants\n4. Chewable item for babies\n5. Munchable toy for infants", "affected_paraphrase": ["Teething toy", "Baby teether", "Chewing plaything for infants", "Munchable toy for infants", "Chewable item for babies"]}]}
{"inputs": {"id": 792, "prompt": "a student erects wall", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "student", "verb": "erects", "object": "wall", "neg": null, "prompt_polarity_grounded": "a student erects wall"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a student erects wall. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Student needs a wall. \n2. Student builds wall.", "affected_reasoning": ["Student needs wall.", "Student builds wall."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a student erects wall\nsubject token: student\nobject token: wall\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A teacher erects wall\n2. A doctor erects wall\n3. A lawyer erects wall\n4. An engineer erects wall\n5. A scientist erects wall\n\nQ2. Replacements:\n1. A student erects door\n2. A student erects window\n3. A student erects fence\n4. A student erects roof\n5. A student erects bridge", "subject_replaced": ["A teacher erects wall", "A scientist erects wall", "A doctor erects wall", "A lawyer erects wall", "An engineer erects wall"], "object_replaced": ["A student erects roof", "A student erects bridge", "A student erects window", "A student erects door", "A student erects fence"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a student erects wall\nsubject token: student\nobject token: wall\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A pupil builds wall, a learner constructs wall, a scholar erects wall, an apprentice assembles wall, a freshman raises wall.\nQ2. A student puts up wall, a student creates wall, a student erects wall, a student assembles wall, a student raises wall.\nQ3. A student erects barrier, a student erects fence, a student erects partition, a student erects divider, a student erects screen.", "subject_replaced": ["A pupil builds wall", "an apprentice assembles wall", "a scholar erects wall", "a freshman raises wall.", "a learner constructs wall"], "verb_replaced": ["a student erects wall", "a student assembles wall", "a student creates wall", "A student puts up wall", "a student raises wall."], "object_replaced": ["A student erects barrier", "a student erects partition", "a student erects fence", "a student erects divider", "a student erects screen."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a student erects wall\n", "AffectedParaphraseMaker_gptoutput": "\n1. A learner builds a barrier\n2. A scholar constructs a partition\n3. An academic puts up a wall\n4. A pupil assembles a divider\n5. A student creates a wall", "affected_paraphrase": ["An academic puts up a wall", "A pupil assembles a divider", "A learner builds a barrier", "A student creates a wall", "A scholar constructs a partition"]}]}
{"inputs": {"id": 794, "prompt": "elephant tosses boat", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "elephant", "verb": "tosses", "object": "boat", "neg": null, "prompt_polarity_grounded": "elephant tosses boat"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "elephant tosses boat. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nElephant is strong; Elephant lifted boat.", "affected_reasoning": ["Elephant is strong; Elephant lifted boat."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: elephant tosses boat\nsubject token: elephant\nobject token: boat\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant launches rocket\n2. Elephant flips coin\n3. Elephant throws dart\n4. Elephant flips switch\n5. Elephant flips pancake\n\nQ2. Replacements:\n1. Elephant tosses balloon\n2. Elephant tosses stone\n3. Elephant tosses dice\n4. Elephant tosses feather\n5. Elephant tosses kite", "subject_replaced": ["Elephant flips coin", "Elephant launches rocket", "Elephant flips pancake", "Elephant flips switch", "Elephant throws dart"], "object_replaced": ["Elephant tosses kite", "Elephant tosses feather", "Elephant tosses dice", "Elephant tosses stone", "Elephant tosses balloon"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: elephant tosses boat\nsubject token: elephant\nobject token: boat\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Mammoth tosses boat\n2. Pachyderm tosses boat\n3. Trunk tosses boat\n4. Tusker tosses boat\n5. Jumbo tosses boat\n\nQ2.\n1. Elephant flings boat\n2. Elephant hurls boat\n3. Elephant launches boat\n4. Elephant propels boat\n5. Elephant throws boat\n\nQ3.\n1. Elephant tosses canoe\n2. Elephant tosses dinghy\n3. Elephant tosses raft\n4. Elephant tosses skiff\n5. Elephant tosses vessel", "subject_replaced": ["Jumbo tosses boat", "Tusker tosses boat", "Mammoth tosses boat", "Trunk tosses boat", "Pachyderm tosses boat"], "verb_replaced": ["Elephant flings boat", "Elephant throws boat", "Elephant launches boat", "Elephant hurls boat", "Elephant propels boat"], "object_replaced": ["Elephant tosses canoe", "Elephant tosses vessel", "Elephant tosses dinghy", "Elephant tosses skiff", "Elephant tosses raft"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: elephant tosses boat\n", "AffectedParaphraseMaker_gptoutput": "\n1. An elephant flings a boat.\n2. An elephant hurls a boat.\n3. An elephant throws a boat.\n4. An elephant launches a boat.\n5. An elephant propels a boat.", "affected_paraphrase": ["An elephant throws a boat.", "An elephant propels a boat.", "An elephant hurls a boat.", "An elephant flings a boat.", "An elephant launches a boat."]}]}
{"inputs": {"id": 798, "prompt": "water dampens cloth", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "water", "verb": "dampens", "object": "cloth", "neg": null, "prompt_polarity_grounded": "water dampens cloth"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "water dampens cloth. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nWater molecules stick to the cloth fibers, which makes the cloth heavier and less able to move air around it, so it feels damp.", "affected_reasoning": ["Water molecules stick to cloth fibers, which makes cloth heavier and less able to move air around it, so it feels damp."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: water dampens cloth\nsubject token: water\nobject token: cloth\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Fire dampens cloth\n2. Wind dampens cloth\n3. Ice dampens cloth\n4. Sun dampens cloth\n5. Rain dampens cloth\n\nQ2. Replacements:\n1. Water dampens paper\n2. Water dampens wood\n3. Water dampens metal\n4. Water dampens stone\n5. Water dampens glass", "subject_replaced": ["Ice dampens cloth", "Wind dampens cloth", "Fire dampens cloth", "Sun dampens cloth", "Rain dampens cloth"], "object_replaced": ["Water dampens metal", "Water dampens stone", "Water dampens wood", "Water dampens paper", "Water dampens glass"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: water dampens cloth\nsubject token: water\nobject token: cloth\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Moisture dampens cloth\n2. Humidity dampens cloth\n3. Rain dampens cloth\n4. Dew dampens cloth\n5. Wetness dampens cloth\n\nQ2.\n1. Water soaks cloth\n2. Water saturates cloth\n3. Water wets cloth\n4. Water moistens cloth\n5. Water drenches cloth\n\nQ3.\n1. Water dampens fabric\n2. Water dampens material\n3. Water dampens textile\n4. Water dampens garment\n5. Water dampens cloths", "subject_replaced": ["Moisture dampens cloth", "Wetness dampens cloth", "Humidity dampens cloth", "Dew dampens cloth", "Rain dampens cloth"], "verb_replaced": ["Water drenches cloth", "Water moistens cloth", "Water soaks cloth", "Water wets cloth", "Water saturates cloth"], "object_replaced": ["Water dampens textile", "Water dampens material", "Water dampens cloths", "Water dampens fabric", "Water dampens garment"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: water dampens cloth\n", "AffectedParaphraseMaker_gptoutput": "\n1. Moisture soaks into fabric\n2. Liquid saturates fabric\n3. H2O absorbs into cloth\n4. Fluids permeate the material\n5. Humidity permeates the cloth", "affected_paraphrase": ["H2O absorbs into cloth", "Liquid saturates fabric", "Moisture soaks into fabric", "Humidity permeates the cloth", "Fluids permeate the material"]}]}
{"inputs": {"id": 804, "prompt": "the shovel peels milk", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "shovel", "verb": "peels", "object": "milk", "neg": null, "prompt_polarity_grounded": "The shovel does not peel milk."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The shovel does not peel milk.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Shovels are tools used for digging.\n2. Milk is a liquid that cannot be dug.", "affected_reasoning": ["Shovels are tools used for digging.", "Milk is liquid that cannot be dug."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the shovel peels milk\nsubject token: shovel\nobject token: milk\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The hammer peels milk\n2. The rake peels milk\n3. The broom peels milk\n4. The spade peels milk\n5. The hoe peels milk\n\nQ2. Replacements:\n1. The shovel peels juice\n2. The shovel peels water\n3. The shovel peels soda\n4. The shovel peels tea\n5. The shovel peels coffee", "subject_replaced": ["The hoe peels milk", "The rake peels milk", "The spade peels milk", "The broom peels milk", "The hammer peels milk"], "object_replaced": ["The shovel peels tea", "The shovel peels soda", "The shovel peels water", "The shovel peels coffee", "The shovel peels juice"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the shovel peels milk\nsubject token: shovel\nobject token: milk\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The spade peels milk, The hoe peels milk, The trowel peels milk, The scoop peels milk, The rake peels milk.\nQ2. The shovel scrapes milk, The shovel scoops milk, The shovel digs milk, The shovel slices milk, The shovel grinds milk.\nQ3. The shovel peels cream, The shovel peels yogurt, The shovel peels cheese, The shovel peels butter, The shovel peels custard.", "subject_replaced": ["The hoe peels milk", "The spade peels milk", "The rake peels milk.", "The scoop peels milk", "The trowel peels milk"], "verb_replaced": ["The shovel digs milk", "The shovel grinds milk.", "The shovel slices milk", "The shovel scoops milk", "The shovel scrapes milk"], "object_replaced": ["The shovel peels cheese", "The shovel peels yogurt", "The shovel peels cream", "The shovel peels custard.", "The shovel peels butter"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the shovel peels milk\n", "AffectedParaphraseMaker_gptoutput": "\n1. The shovel strips away the milk.\n2. The shovel removes the milk.\n3. The shovel takes off the milk.\n4. The shovel scrapes away the milk.\n5. The shovel sloughs off the milk.", "affected_paraphrase": ["The shovel takes off the milk.", "The shovel removes the milk.", "The shovel sloughs off the milk.", "The shovel strips away the milk.", "The shovel scrapes away the milk."]}]}
{"inputs": {"id": 805, "prompt": "a pin digs mud", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "pin", "verb": "digs", "object": "mud", "neg": null, "prompt_polarity_grounded": "a pin digs mud"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a pin digs mud. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. A pin has a sharp point. \n2. The sharp point can penetrate the ground.", "affected_reasoning": ["A pin has sharp point.", "The sharp point can penetrate ground."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a pin digs mud\nsubject token: pin\nobject token: mud\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a hat digs mud\n2. a spoon digs mud\n3. a shoe digs mud\n4. a pencil digs mud\n5. a fork digs mud\n\nQ2. Replacements:\n1. a pin digs sand\n2. a pin digs water\n3. a pin digs snow\n4. a pin digs ice\n5. a pin digs leaves", "subject_replaced": ["a spoon digs mud", "a shoe digs mud", "a hat digs mud", "a pencil digs mud", "a fork digs mud"], "object_replaced": ["a pin digs water", "a pin digs snow", "a pin digs sand", "a pin digs ice", "a pin digs leaves"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a pin digs mud\nsubject token: pin\nobject token: mud\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A needle pricks mud, A spike punctures mud, A tack pierces mud, A nail penetrates mud, A pin perforates mud.\n\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nA pin burrows mud, A pin excavates mud, A pin scoops mud, A pin shovels mud, A pin plows mud.\n\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\nA pin digs dirt, A pin digs soil, A pin digs clay, A pin digs sediment, A pin digs loam.", "subject_replaced": ["A needle pricks mud", " A spike punctures mud", " A tack pierces mud", " A nail penetrates mud", " A pin perforates mud."], "verb_replaced": ["Write up to 5 such variants.", "A pin burrows mud", " A pin excavates mud", " A pin scoops mud", " A pin shovels mud", " A pin plows mud."], "object_replaced": ["A pin digs dirt", " A pin digs soil", " A pin digs clay", " A pin digs sediment", " A pin digs loam.", "Write up to 5 such variants."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a pin digs mud\n", "AffectedParaphraseMaker_gptoutput": "\n1. A pin is used to scoop up mud.\n2. A pin is employed to excavate mud.\n3. A pin is utilized to burrow into mud.\n4. A pin is utilized to scoop out mud.\n5. A pin is employed to delve into mud.", "affected_paraphrase": ["A pin is employed to excavate mud.", "A pin is utilized to scoop out mud.", "A pin is used to scoop up mud.", "A pin is utilized to burrow into mud.", "A pin is employed to delve into mud."]}]}
{"inputs": {"id": 806, "prompt": "a map attached string", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "map", "verb": "attached", "object": "string", "neg": null, "prompt_polarity_grounded": "No map is attached string."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "No map is attached string.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. A map is not included in the statement. \n2. Therefore, no map is attached.", "affected_reasoning": ["A map is not included in statement.", "Therefore, no map is attached."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a map attached string\nsubject token: map\nobject token: string\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a balloon attached string\n2. a picture attached string\n3. a book attached string\n4. a car attached string\n5. a tree attached string\n\nQ2. Replacements:\n1. a map attached rope\n2. a map attached paper\n3. a map attached box\n4. a map attached chair\n5. a map attached pencil", "subject_replaced": ["a book attached string", "a balloon attached string", "a tree attached string", "a picture attached string", "a car attached string"], "object_replaced": ["a map attached box", "a map attached paper", "a map attached rope", "a map attached chair", "a map attached pencil"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a map attached string\nsubject token: map\nobject token: string\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. An illustration attached string\n2. A diagram attached string\n3. A chart attached string\n4. A sketch attached string\n5. A blueprint attached string\n\nQ2. Variants:\n1. A map linked string\n2. A map connected string\n3. A map coupled string\n4. A map affixed string\n5. A map fastened string\n\nQ3. Variants:\n1. A map attached rope\n2. A map attached cord\n3. A map attached yarn\n4. A map attached thread\n5. A map attached twine", "subject_replaced": ["An illustration attached string", "A sketch attached string", "A chart attached string", "A diagram attached string", "A blueprint attached string"], "verb_replaced": ["A map fastened string", "A map connected string", "A map linked string", "A map coupled string", "A map affixed string"], "object_replaced": ["A map attached cord", "A map attached twine", "A map attached thread", "A map attached rope", "A map attached yarn"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a map attached string\n", "AffectedParaphraseMaker_gptoutput": "\n1. A diagram linked to a cord\n2. A plan connected to a rope\n3. A chart tied to a string\n4. An illustration affixed to a line\n5. A representation secured to a thread", "affected_paraphrase": ["A plan connected to a rope", "A chart tied to a string", "A diagram linked to a cord", "An illustration affixed to a line", "A representation secured to a thread"]}]}
{"inputs": {"id": 811, "prompt": "a cat exhales air", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "cat", "verb": "exhales", "object": "air", "neg": null, "prompt_polarity_grounded": "a cat exhales air"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a cat exhales air. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Cats inhale oxygen. \n2. Oxygen is then exhaled as air.", "affected_reasoning": ["Cats inhale oxygen.", "Oxygen is then exhaled as air."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a cat exhales air\nsubject token: cat\nobject token: air\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A dog exhales air\n2. A mouse exhales air\n3. A bird exhales air\n4. A fish exhales air\n5. A snake exhales air\n\nQ2. Replacements:\n1. A cat exhales water\n2. A cat exhales fire\n3. A cat exhales smoke\n4. A cat exhales ice\n5. A cat exhales wind", "subject_replaced": ["A dog exhales air", "A fish exhales air", "A snake exhales air", "A mouse exhales air", "A bird exhales air"], "object_replaced": ["A cat exhales ice", "A cat exhales wind", "A cat exhales smoke", "A cat exhales fire", "A cat exhales water"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a cat exhales air\nsubject token: cat\nobject token: air\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A feline exhales air, A kitten exhales air, A tomcat exhales air, A tabby exhales air, A panther exhales air.\nQ2. A cat breathes air, A cat inhales air, A cat releases air, A cat expels air, A cat vents air.\nQ3. A cat exhales oxygen, A cat exhales breath, A cat exhales vapour, A cat exhales gas, A cat exhales atmosphere.", "subject_replaced": ["A tabby exhales air", "A panther exhales air.", "A feline exhales air", "A kitten exhales air", "A tomcat exhales air"], "verb_replaced": ["A cat breathes air", "A cat expels air", "A cat vents air.", "A cat releases air", "A cat inhales air"], "object_replaced": ["A cat exhales vapour", "A cat exhales atmosphere.", "A cat exhales gas", "A cat exhales breath", "A cat exhales oxygen"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a cat exhales air\n", "AffectedParaphraseMaker_gptoutput": "\n1. A cat breathes out air.\n2. A cat releases air from its lungs.\n3. A cat expels air.\n4. A cat vents air.\n5. A cat lets out air.", "affected_paraphrase": ["A cat lets out air.", "A cat vents air.", "A cat releases air from its lungs.", "A cat expels air.", "A cat breathes out air."]}]}
{"inputs": {"id": 815, "prompt": "rock vent room", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "rock", "verb": "vent", "object": "room", "neg": null, "prompt_polarity_grounded": "Rock does not vent room."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Rock does not vent room.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Rocks are solid objects. \n2. Solid objects cannot vent air.", "affected_reasoning": ["Rocks are solid objects.", "Solid objects cannot vent air."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: rock vent room\nsubject token: rock\nobject token: room\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. text: balloon vent room\n2. text: apple vent room\n3. text: train vent room\n4. text: ocean vent room\n5. text: tree vent room\n\nQ2. Replacements:\n1. text: rock vent kitchen\n2. text: rock vent house\n3. text: rock vent garden\n4. text: rock vent office\n5. text: rock vent park", "subject_replaced": ["train vent room", "apple vent room", "ocean vent room", "tree vent room", "balloon vent room"], "object_replaced": ["rock vent house", "rock vent office", "rock vent park", "rock vent kitchen", "rock vent garden"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: rock vent room\nsubject token: rock\nobject token: room\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Pebble vent room, Stone vent room, Boulder vent room, Gravel vent room, Rocker vent room\nQ2. Rock penetrated room, Rock drilled room, Rock burrowed room, Rock tunneled room, Rock excavated room\nQ3. Rock vent chamber, Rock vent den, Rock vent cave, Rock vent hideout, Rock vent lair", "subject_replaced": ["Gravel vent room", "Pebble vent room", "Boulder vent room", "Stone vent room", "Rocker vent room"], "verb_replaced": ["Rock tunneled room", "Rock drilled room", "Rock excavated room", "Rock burrowed room", "Rock penetrated room"], "object_replaced": ["Rock vent lair", "Rock vent chamber", "Rock vent den", "Rock vent cave", "Rock vent hideout"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: rock vent room\n", "AffectedParaphraseMaker_gptoutput": "\n1. Stone air chamber\n2. Rock fissure chamber\n3. Pebble crevice room\n4. Boulder cleft chamber\n5. Granite fracture room", "affected_paraphrase": ["Pebble crevice room", "Granite fracture room", "Rock fissure chamber", "Boulder cleft chamber", "Stone air chamber"]}]}
{"inputs": {"id": 821, "prompt": "the cat fries cake", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "cat", "verb": "fries", "object": "cake", "neg": null, "prompt_polarity_grounded": "The cat does not fry cake."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The cat does not fry cake.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Cats cannot use kitchen appliances.\n2. Frying cake requires the use of a kitchen appliance.", "affected_reasoning": ["Cats cannot use kitchen appliances.", "Frying cake requires use of kitchen appliance."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the cat fries cake\nsubject token: cat\nobject token: cake\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The dog fries cake\n2. The elephant fries cake\n3. The giraffe fries cake\n4. The hippo fries cake\n5. The koala fries cake\n\nQ2. Replacements:\n1. The cat fries ice cream\n2. The cat fries pizza\n3. The cat fries donut\n4. The cat fries apple\n5. The cat fries cookie", "subject_replaced": ["The hippo fries cake", "The dog fries cake", "The koala fries cake", "The giraffe fries cake", "The elephant fries cake"], "object_replaced": ["The cat fries cookie", "The cat fries donut", "The cat fries ice cream", "The cat fries apple", "The cat fries pizza"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the cat fries cake\nsubject token: cat\nobject token: cake\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The feline fries cake, The kitten fries cake, The tomcat fries cake, The tabby fries cake, The panther fries cake.\nQ2. The cat grills cake, The cat bakes cake, The cat boils cake, The cat roasts cake, The cat broils cake.\nQ3. The cat fries pastry, The cat fries dessert, The cat fries confection, The cat fries sweet, The cat fries treat.", "subject_replaced": ["The feline fries cake", "The kitten fries cake", "The tabby fries cake", "The panther fries cake.", "The tomcat fries cake"], "verb_replaced": ["The cat grills cake", "The cat boils cake", "The cat roasts cake", "The cat bakes cake", "The cat broils cake."], "object_replaced": ["The cat fries treat.", "The cat fries confection", "The cat fries sweet", "The cat fries dessert", "The cat fries pastry"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the cat fries cake\n", "AffectedParaphraseMaker_gptoutput": "\n1. The feline cooks pastry.\n2. The kitty prepares cake.\n3. The cat is frying cake.\n4. The cat is making a cake in a frying pan.\n5. The cat is saut\u00e9ing a cake.", "affected_paraphrase": ["The cat is saut\u00e9ing a cake.", "The cat is making a cake in a frying pan.", "The cat is frying cake.", "The feline cooks pastry.", "The kitty prepares cake."]}]}
{"inputs": {"id": 831, "prompt": "a tube puffed air", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "tube", "verb": "puffed", "object": "air", "neg": null, "prompt_polarity_grounded": "a tube puffed air"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a tube puffed air. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nAir is heated in the tube, causing it to expand. This expansion creates pressure, which pushes the air out of the tube.", "affected_reasoning": ["Air is heated in tube, causing it to expand", "This expansion creates pressure, which pushes air out of tube."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a tube puffed air\nsubject token: tube\nobject token: air\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A balloon puffed air\n2. A car puffed air\n3. A tree puffed air\n4. A book puffed air\n5. A phone puffed air\n\nQ2. Replacements:\n1. A tube puffed water\n2. A tube puffed fire\n3. A tube puffed smoke\n4. A tube puffed dust\n5. A tube puffed wind", "subject_replaced": ["A book puffed air", "A phone puffed air", "A car puffed air", "A tree puffed air", "A balloon puffed air"], "object_replaced": ["A tube puffed fire", "A tube puffed dust", "A tube puffed smoke", "A tube puffed water", "A tube puffed wind"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a tube puffed air\nsubject token: tube\nobject token: air\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A pipe puffed air, A cylinder puffed air, A conduit puffed air, A hose puffed air, A straw puffed air.\nQ2. A tube blew air, A tube exhaled air, A tube vented air, A tube discharged air, A tube emitted air.\nQ3. A tube puffed oxygen, A tube puffed wind, A tube puffed vapor, A tube puffed gas, A tube puffed breeze.", "subject_replaced": ["A cylinder puffed air", "A pipe puffed air", "A conduit puffed air", "A hose puffed air", "A straw puffed air."], "verb_replaced": ["A tube discharged air", "A tube blew air", "A tube vented air", "A tube exhaled air", "A tube emitted air."], "object_replaced": ["A tube puffed vapor", "A tube puffed breeze.", "A tube puffed wind", "A tube puffed gas", "A tube puffed oxygen"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a tube puffed air\n", "AffectedParaphraseMaker_gptoutput": "\n1. A pipe blew air\n2. A conduit exhaled air\n3. A cylinder expelled air\n4. A conduit emitted air\n5. A pipe emitted a gust of air", "affected_paraphrase": ["A pipe blew air", "A cylinder expelled air", "A conduit emitted air", "A pipe emitted a gust of air", "A conduit exhaled air"]}]}
{"inputs": {"id": 833, "prompt": "Elephant rotates bowling", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Elephant", "verb": "rotates", "object": "bowling", "neg": null, "prompt_polarity_grounded": "Elephant rotates bowling"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Elephant rotates bowling. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Elephant uses trunk to pick up bowling ball.\n2. Elephant swings trunk to rotate bowling ball.", "affected_reasoning": ["Elephant uses trunk to pick up bowling ball.", "Elephant swings trunk to rotate bowling ball."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Elephant rotates bowling\nsubject token: Elephant\nobject token: bowling\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Tiger rotates bowling\n2. Giraffe rotates bowling\n3. Zebra rotates bowling\n4. Hippo rotates bowling\n5. Rhinoceros rotates bowling\n\nQ2. Replacements:\n1. Elephant rotates tennis\n2. Elephant rotates soccer\n3. Elephant rotates basketball\n4. Elephant rotates hockey\n5. Elephant rotates golf", "subject_replaced": ["Rhinoceros rotates bowling", "Giraffe rotates bowling", "Tiger rotates bowling", "Hippo rotates bowling", "Zebra rotates bowling"], "object_replaced": ["Elephant rotates soccer", "Elephant rotates hockey", "Elephant rotates golf", "Elephant rotates tennis", "Elephant rotates basketball"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Elephant rotates bowling\nsubject token: Elephant\nobject token: bowling\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Mammoth rotates bowling\n2. Hippopotamus rotates bowling\n3. Rhinoceros rotates bowling\n4. Pachyderm rotates bowling\n5. Jumbo rotates bowling\n\nQ2.\n1. Elephant whirls bowling\n2. Elephant pivots bowling\n3. Elephant gyrates bowling\n4. Elephant revolves bowling\n5. Elephant spins bowling\n\nQ3.\n1. Elephant rotates pins\n2. Elephant rotates ten-pin\n3. Elephant rotates skittles\n4. Elephant rotates alleys\n5. Elephant rotates alleys", "subject_replaced": ["Mammoth rotates bowling", "Rhinoceros rotates bowling", "Jumbo rotates bowling", "Pachyderm rotates bowling", "Hippopotamus rotates bowling"], "verb_replaced": ["Elephant whirls bowling", "Elephant revolves bowling", "Elephant pivots bowling", "Elephant spins bowling", "Elephant gyrates bowling"], "object_replaced": ["Elephant rotates skittles", "Elephant rotates pins", "Elephant rotates ten-pin", "Elephant rotates alleys"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Elephant rotates bowling\n", "AffectedParaphraseMaker_gptoutput": "\n1. An elephant turns a bowling ball.\n2. An elephant spins a bowling ball.\n3. An elephant revolves a bowling ball.\n4. An elephant revolves around a bowling ball.\n5. An elephant revolves the bowling ball.", "affected_paraphrase": ["An elephant spins a bowling ball.", "An elephant revolves around a bowling ball.", "An elephant turns a bowling ball.", "An elephant revolves the bowling ball.", "An elephant revolves a bowling ball."]}]}
{"inputs": {"id": 836, "prompt": "a lion wrestles elephant", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "lion", "verb": "wrestles", "object": "elephant", "neg": null, "prompt_polarity_grounded": "a lion wrestles elephant"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a lion wrestles elephant. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Lions are strong predators, capable of taking down large prey. \n2. Elephants are large animals, making them a potential target for a lion.", "affected_reasoning": ["Lions are strong predators, capable of taking down large prey.", "Elephants are large animals, making them potential target for lion."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a lion wrestles elephant\nsubject token: lion\nobject token: elephant\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a bear wrestles elephant\n2. a dog wrestles elephant\n3. a monkey wrestles elephant\n4. a giraffe wrestles elephant\n5. a tiger wrestles elephant\n\nQ2. Replacements:\n1. a lion wrestles mouse\n2. a lion wrestles bird\n3. a lion wrestles rabbit\n4. a lion wrestles squirrel\n5. a lion wrestles fox", "subject_replaced": ["a monkey wrestles elephant", "a giraffe wrestles elephant", "a dog wrestles elephant", "a tiger wrestles elephant", "a bear wrestles elephant"], "object_replaced": ["a lion wrestles fox", "a lion wrestles mouse", "a lion wrestles rabbit", "a lion wrestles bird", "a lion wrestles squirrel"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a lion wrestles elephant\nsubject token: lion\nobject token: elephant\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A tiger wrestles elephant, a panther wrestles elephant, a cougar wrestles elephant, a cheetah wrestles elephant, a jaguar wrestles elephant.\n\nQ2. A lion clashes with elephant, a lion battles with elephant, a lion fights with elephant, a lion contends with elephant, a lion struggles with elephant.\n\nQ3. A lion wrestles pachyderm, a lion wrestles mammoth, a lion wrestles rhinoceros, a lion wrestles hippopotamus, a lion wrestles wildebeest.", "subject_replaced": ["a jaguar wrestles elephant.", "a cougar wrestles elephant", "a panther wrestles elephant", "A tiger wrestles elephant", "a cheetah wrestles elephant"], "verb_replaced": ["a lion fights with elephant", "a lion struggles with elephant.", "a lion contends with elephant", "A lion clashes with elephant", "a lion battles with elephant"], "object_replaced": ["A lion wrestles pachyderm", "a lion wrestles mammoth", "a lion wrestles rhinoceros", "a lion wrestles hippopotamus", "a lion wrestles wildebeest."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a lion wrestles elephant\n", "AffectedParaphraseMaker_gptoutput": "\n1. A lion engages in a physical struggle with an elephant.\n2. A lion and an elephant grapple with each other.\n3. A lion and an elephant tussle.\n4. A lion and an elephant battle.\n5. A lion and an elephant clash.", "affected_paraphrase": ["A lion and an elephant clash.", "A lion engages in a physical struggle with an elephant.", "A lion and an elephant tussle.", "A lion and an elephant grapple with each other.", "A lion and an elephant battle."]}]}
{"inputs": {"id": 845, "prompt": "Pillow scratch toe", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Pillow", "verb": "scratch", "object": "toe", "neg": null, "prompt_polarity_grounded": "Pillow not scratch toe."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Pillow not scratch toe.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pillows are soft.\n2. Soft objects don't scratch toes.", "affected_reasoning": ["Pillows are soft.", "Soft objects don't scratch toes."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Pillow scratch toe\nsubject token: Pillow\nobject token: toe\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hammer scratch toe\n2. Chair scratch toe\n3. Apple scratch toe\n4. Pencil scratch toe\n5. Book scratch toe\n\nQ2. Replacements:\n1. Pillow scratch hand\n2. Pillow scratch finger\n3. Pillow scratch nose\n4. Pillow scratch ear\n5. Pillow scratch eye", "subject_replaced": ["Hammer scratch toe", "Chair scratch toe", "Book scratch toe", "Apple scratch toe", "Pencil scratch toe"], "object_replaced": ["Pillow scratch ear", "Pillow scratch eye", "Pillow scratch hand", "Pillow scratch finger", "Pillow scratch nose"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Pillow scratch toe\nsubject token: Pillow\nobject token: toe\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Cushion scratch toe, Bolster scratch toe, Mattress scratch toe, Quilt scratch toe, Blanket scratch toe\nQ2. Pillow nudge toe, Pillow prod toe, Pillow jab toe, Pillow tap toe, Pillow stroke toe\nQ3. Pillow scratch foot, Pillow scratch heel, Pillow scratch ankle, Pillow scratch big toe, Pillow scratch little toe", "subject_replaced": ["Cushion scratch toe", "Mattress scratch toe", "Blanket scratch toe", "Bolster scratch toe", "Quilt scratch toe"], "verb_replaced": ["Pillow nudge toe", "Pillow jab toe", "Pillow tap toe", "Pillow stroke toe", "Pillow prod toe"], "object_replaced": ["Pillow scratch little toe", "Pillow scratch ankle", "Pillow scratch heel", "Pillow scratch foot", "Pillow scratch big toe"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Pillow scratch toe\n", "AffectedParaphraseMaker_gptoutput": "\n1. Cushion scuff foot\n2. Pad abrade digit\n3. Bolster scrape appendage\n4. Mattress scrape extremity\n5. Headrest scrape toe", "affected_paraphrase": ["Pad abrade digit", "Mattress scrape extremity", "Headrest scrape toe", "Cushion scuff foot", "Bolster scrape appendage"]}]}
{"inputs": {"id": 853, "prompt": "Dog sews curtain", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Dog", "verb": "sews", "object": "curtain", "neg": null, "prompt_polarity_grounded": "Dog does not sew curtain."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Dog does not sew curtain.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Dogs do not have the necessary skills to sew.\n2. Sewing requires the use of a needle and thread.", "affected_reasoning": ["Dogs do not have necessary skills to sew.", "Sewing requires use of needle and thread."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Dog sews curtain\nsubject token: Dog\nobject token: curtain\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Cat sews curtain\n2. Horse sews curtain\n3. Elephant sews curtain\n4. Monkey sews curtain\n5. Rabbit sews curtain\n\nQ2. Replacements:\n1. Dog sews pillow\n2. Dog sews blanket\n3. Dog sews rug\n4. Dog sews table\n5. Dog sews chair", "subject_replaced": ["Elephant sews curtain", "Monkey sews curtain", "Cat sews curtain", "Rabbit sews curtain", "Horse sews curtain"], "object_replaced": ["Dog sews pillow", "Dog sews chair", "Dog sews blanket", "Dog sews table"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Dog sews curtain\nsubject token: Dog\nobject token: curtain\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Cat sews curtain, Puppy sews curtain, Hound sews curtain, Canine sews curtain, Mutt sews curtain\nQ2. Dog stitches curtain, Dog mends curtain, Dog patches curtain, Dog drapes curtain, Dog hems curtain\nQ3. Dog sews drape, Dog sews blind, Dog sews shade, Dog sews tapestry, Dog sews fabric", "subject_replaced": ["Mutt sews curtain", "Cat sews curtain", "Canine sews curtain", "Puppy sews curtain", "Hound sews curtain"], "verb_replaced": ["Dog drapes curtain", "Dog patches curtain", "Dog hems curtain", "Dog mends curtain", "Dog stitches curtain"], "object_replaced": ["Dog sews shade", "Dog sews blind", "Dog sews fabric", "Dog sews drape", "Dog sews tapestry"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Dog sews curtain\n", "AffectedParaphraseMaker_gptoutput": "\n1. Canine stitches drapery\n2. Pooch assembles curtains\n3. Hound tailors window covering\n4. Mutt fashions window treatment\n5. Fido crafts window drapes", "affected_paraphrase": ["Mutt fashions window treatment", "Pooch assembles curtains", "Canine stitches drapery", "Fido crafts window drapes", "Hound tailors window covering"]}]}
{"inputs": {"id": 858, "prompt": "mallet damages house", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "mallet", "verb": "damages", "object": "house", "neg": null, "prompt_polarity_grounded": "mallet damages house"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "mallet damages house. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Mallet hits house. \n2. House breaks due to impact.", "affected_reasoning": ["Mallet hits house.", "House breaks due to impact."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: mallet damages house\nsubject token: mallet\nobject token: house\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "1. Mallet destroys castle\n2. Mallet demolishes hut\n3. Mallet wrecks cabin\n4. Mallet shatters mansion\n5. Mallet ruins palace\n\n1. House crumbles hammer\n2. House collapses wrench\n3. House shatters screwdriver\n4. House disintegrates saw\n5. House demolishes drill", "subject_replaced": ["Mallet demolishes hut", "Mallet destroys castle", "Mallet wrecks cabin", "Mallet ruins palace", "Mallet shatters mansion"], "object_replaced": ["House shatters screwdriver", "House collapses wrench", "House demolishes drill", "House disintegrates saw", "House crumbles hammer"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: mallet damages house\nsubject token: mallet\nobject token: house\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Hammer damages house, Bludgeon damages house, Club damages house, Mace damages house, Sledgehammer damages house.\nQ2. Mallet wrecks house, Mallet demolishes house, Mallet shatters house, Mallet destroys house, Mallet ruins house.\nQ3. Mallet damages dwelling, Mallet damages abode, Mallet damages residence, Mallet damages domicile, Mallet damages mansion.", "subject_replaced": ["Hammer damages house", "Sledgehammer damages house.", "Mace damages house", "Bludgeon damages house", "Club damages house"], "verb_replaced": ["Mallet destroys house", "Mallet demolishes house", "Mallet shatters house", "Mallet ruins house.", "Mallet wrecks house"], "object_replaced": ["Mallet damages dwelling", "Mallet damages abode", "Mallet damages domicile", "Mallet damages residence", "Mallet damages mansion."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: mallet damages house\n", "AffectedParaphraseMaker_gptoutput": "\n1. The mallet caused destruction to the house.\n2. The house was damaged by the mallet.\n3. The mallet inflicted harm to the house.\n4. The mallet wreaked havoc on the house.\n5. The mallet wreaked destruction on the house.", "affected_paraphrase": ["The mallet inflicted harm to the house.", "The mallet caused destruction to the house.", "The mallet wreaked destruction on the house.", "The house was damaged by the mallet.", "The mallet wreaked havoc on the house."]}]}
{"inputs": {"id": 861, "prompt": "Pebbles crash into ant", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Pebbles", "verb": "crash", "object": "ant", "neg": null, "prompt_polarity_grounded": "Pebbles crash into ant"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Pebbles crash into ant. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nAnt gets knocked over. Pebbles hit ant.", "affected_reasoning": ["Ant gets knocked over", "Pebbles hit ant."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Pebbles crash into ant\nsubject token: Pebbles\nobject token: ant\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Clouds crash into ant\n2. Cars crash into ant\n3. Trees crash into ant\n4. Rocks crash into ant\n5. Stars crash into ant\n\nQ2. Replacements:\n1. Pebbles crash into dog\n2. Pebbles crash into cat\n3. Pebbles crash into bird\n4. Pebbles crash into mouse\n5. Pebbles crash into fish", "subject_replaced": ["Cars crash into ant", "Rocks crash into ant", "Stars crash into ant", "Trees crash into ant", "Clouds crash into ant"], "object_replaced": ["Pebbles crash into mouse", "Pebbles crash into cat", "Pebbles crash into dog", "Pebbles crash into fish", "Pebbles crash into bird"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Pebbles crash into ant\nsubject token: Pebbles\nobject token: ant\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Rocks crash into ant, Gravels crash into ant, Boulders crash into ant, Pebbles crash into ant, Stones crash into ant.\nQ2. Pebbles slam into ant, Pebbles collide into ant, Pebbles dash into ant, Pebbles crash into ant, Pebbles strike into ant.\nQ3. Pebbles crash into insect, Pebbles crash into bug, Pebbles crash into beetle, Pebbles crash into spider, Pebbles crash into caterpillar.", "subject_replaced": ["Gravels crash into ant", "Rocks crash into ant", "Stones crash into ant.", "Boulders crash into ant", "Pebbles crash into ant"], "verb_replaced": ["Pebbles collide into ant", "Pebbles strike into ant.", "Pebbles slam into ant", "Pebbles crash into ant", "Pebbles dash into ant"], "object_replaced": ["Pebbles crash into caterpillar.", "Pebbles crash into beetle", "Pebbles crash into spider", "Pebbles crash into bug", "Pebbles crash into insect"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Pebbles crash into ant\n", "AffectedParaphraseMaker_gptoutput": "\n1. Pebbles collide with ant\n2. Pebbles strike ant\n3. Pebbles impact ant\n4. Pebbles ram into ant\n5. Pebbles slam into ant", "affected_paraphrase": ["Pebbles collide with ant", "Pebbles strike ant", "Pebbles slam into ant", "Pebbles impact ant", "Pebbles ram into ant"]}]}
{"inputs": {"id": 867, "prompt": "wrench fixes wolf", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "wrench", "verb": "fixes", "object": "wolf", "neg": null, "prompt_polarity_grounded": "Wrench does not fix wolf."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Wrench does not fix wolf.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Wolves are living creatures, not machines. \n2. Wrenches are tools used to fix machines, not living creatures.", "affected_reasoning": ["Wolves are living creatures, not machines.", "Wrenches are tools used to fix machines, not living creatures."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: wrench fixes wolf\nsubject token: wrench\nobject token: wolf\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1.\n1. Hammer fixes wolf\n2. Screwdriver fixes wolf\n3. Pliers fixes wolf\n4. Saw fixes wolf\n5. Spanner fixes wolf\n\nQ2.\n1. Wrench fixes airplane\n2. Wrench fixes car\n3. Wrench fixes boat\n4. Wrench fixes bicycle\n5. Wrench fixes tree", "subject_replaced": ["Hammer fixes wolf", "Spanner fixes wolf", "Screwdriver fixes wolf", "Saw fixes wolf", "Pliers fixes wolf"], "object_replaced": ["Wrench fixes airplane", "Wrench fixes car", "Wrench fixes tree", "Wrench fixes boat", "Wrench fixes bicycle"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: wrench fixes wolf\nsubject token: wrench\nobject token: wolf\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Spanner fixes wolf, Adjuster fixes wolf, Socket fixes wolf, Screwdriver fixes wolf, Hammer fixes wolf.\nQ2. Wrench mends wolf, Wrench repairs wolf, Wrench rectifies wolf, Wrench amends wolf, Wrench corrects wolf.\nQ3. Wrench fixes canine, Wrench fixes coyote, Wrench fixes jackal, Wrench fixes fox, Wrench fixes dog.", "subject_replaced": ["Hammer fixes wolf.", "Spanner fixes wolf", "Adjuster fixes wolf", "Socket fixes wolf", "Screwdriver fixes wolf"], "verb_replaced": ["Wrench rectifies wolf", "Wrench corrects wolf.", "Wrench amends wolf", "Wrench repairs wolf", "Wrench mends wolf"], "object_replaced": ["Wrench fixes canine", "Wrench fixes jackal", "Wrench fixes dog.", "Wrench fixes fox", "Wrench fixes coyote"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: wrench fixes wolf\n", "AffectedParaphraseMaker_gptoutput": "\n1. Wrench rectifies wolf\n2. Wrench remedies wolf\n3. Wrench repairs wolf\n4. Wrench mends wolf\n5. Wrench ameliorates wolf", "affected_paraphrase": ["Wrench rectifies wolf", "Wrench remedies wolf", "Wrench repairs wolf", "Wrench ameliorates wolf", "Wrench mends wolf"]}]}
{"inputs": {"id": 877, "prompt": "a child swallows nail", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "child", "verb": "swallows", "object": "nail", "neg": null, "prompt_polarity_grounded": "a child swallows nail"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a child swallows nail. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Nail is a foreign object. \n2. Foreign objects can cause choking.", "affected_reasoning": ["Nail is foreign object.", "Foreign objects can cause choking."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a child swallows nail\nsubject token: child\nobject token: nail\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A dog swallows nail\n2. A teacher swallows nail\n3. A student swallows nail\n4. A parent swallows nail\n5. A doctor swallows nail\n\nQ2. Replacements:\n1. A child swallows pencil\n2. A child swallows paper\n3. A child swallows eraser\n4. A child swallows marker\n5. A child swallows crayon", "subject_replaced": ["A parent swallows nail", "A student swallows nail", "A doctor swallows nail", "A dog swallows nail", "A teacher swallows nail"], "object_replaced": ["A child swallows paper", "A child swallows pencil", "A child swallows eraser", "A child swallows crayon", "A child swallows marker"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a child swallows nail\nsubject token: child\nobject token: nail\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A toddler swallows nail, A youngster swallows nail, An infant swallows nail, A baby swallows nail, A kid swallows nail.\n\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\n\nA child ingested nail, A child consumed nail, A child devoured nail, A child gulped nail, A child nibbled nail.\n\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n\nA child swallows pin, A child swallows tack, A child swallows spike, A child swallows screw, A child swallows bolt.", "subject_replaced": ["A toddler swallows nail", " A youngster swallows nail", " An infant swallows nail", " A baby swallows nail", " A kid swallows nail."], "verb_replaced": ["A child ingested nail", " A child consumed nail", " A child devoured nail", " A child gulped nail", " A child nibbled nail.", "Write up to 5 such variants."], "object_replaced": ["A child swallows pin", " A child swallows tack", " A child swallows spike", " A child swallows screw", " A child swallows bolt.", "Write up to 5 such variants."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a child swallows nail\n", "AffectedParaphraseMaker_gptoutput": "\n1. A kid ingested a nail.\n2. A young one gulped down a nail.\n3. A youngster consumed a nail.\n4. A minor swallowed a nail.\n5. A toddler took in a nail.", "affected_paraphrase": ["A kid ingested a nail.", "A young one gulped down a nail.", "A youngster consumed a nail.", "A toddler took in a nail.", "A minor swallowed a nail."]}]}
{"inputs": {"id": 882, "prompt": "Pillows peel bananas", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Pillows", "verb": "peel", "object": "bananas", "neg": null, "prompt_polarity_grounded": "Pillows do not peel bananas."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Pillows do not peel bananas.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pillows are not tools.\n2. Peeling bananas requires a tool.", "affected_reasoning": ["Pillows are not tools.", "Peeling bananas requires tool."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Pillows peel bananas\nsubject token: Pillows\nobject token: bananas\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1.\n1. Cars peel bananas\n2. Trees peel bananas\n3. Clouds peel bananas\n4. Books peel bananas\n5. Shoes peel bananas\n\nQ2.\n1. Pillows peel apples\n2. Pillows peel oranges\n3. Pillows peel strawberries\n4. Pillows peel cherries\n5. Pillows peel grapes", "subject_replaced": ["Shoes peel bananas", "Trees peel bananas", "Clouds peel bananas", "Books peel bananas", "Cars peel bananas"], "object_replaced": ["Pillows peel cherries", "Pillows peel apples", "Pillows peel strawberries", "Pillows peel grapes", "Pillows peel oranges"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Pillows peel bananas\nsubject token: Pillows\nobject token: bananas\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Cushions peel bananas, Mattresses peel bananas, Bolsters peel bananas, Quilts peel bananas, Blankets peel bananas.\nQ2. Pillows munch bananas, Pillows devour bananas, Pillows crunch bananas, Pillows gobble bananas, Pillows nibble bananas.\nQ3. Pillows peel plantains, Pillows peel apples, Pillows peel oranges, Pillows peel kiwis, Pillows peel mangoes.", "subject_replaced": ["Blankets peel bananas.", "Mattresses peel bananas", "Bolsters peel bananas", "Quilts peel bananas", "Cushions peel bananas"], "verb_replaced": ["Pillows munch bananas", "Pillows gobble bananas", "Pillows nibble bananas.", "Pillows crunch bananas", "Pillows devour bananas"], "object_replaced": ["Pillows peel plantains", "Pillows peel apples", "Pillows peel kiwis", "Pillows peel mangoes.", "Pillows peel oranges"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Pillows peel bananas\n", "AffectedParaphraseMaker_gptoutput": "\n1. Cushions can be used to remove the skin from bananas.\n2. Pillows can be utilized to strip the yellow covering from bananas.\n3. Using a pillow to take off the banana's peel is possible.\n4. Pillows can be used to take away the banana's outer layer.\n5. Pillows can be employed to remove the banana's peel.", "affected_paraphrase": ["Using a pillow to take off the banana's peel is possible.", "Cushions can be used to remove the skin from bananas.", "Pillows can be utilized to strip the yellow covering from bananas.", "Pillows can be employed to remove the banana's peel.", "Pillows can be used to take away the banana's outer layer."]}]}
{"inputs": {"id": 888, "prompt": "Cup buries sand", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Cup", "verb": "buries", "object": "sand", "neg": null, "prompt_polarity_grounded": "Cup does not bury sand."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Cup does not bury sand.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Sand is a solid material. \n2. Liquids cannot bury solids.", "affected_reasoning": ["Sand is solid material.", "Liquids cannot bury solids."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Cup buries sand\nsubject token: Cup\nobject token: sand\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Car buries sand\n2. Pen buries sand\n3. Chair buries sand\n4. Book buries sand\n5. Tree buries sand\n\nQ2. Replacements:\n1. Cup buries rock\n2. Cup buries paper\n3. Cup buries pencil\n4. Cup buries chair\n5. Cup buries book", "subject_replaced": ["Pen buries sand", "Car buries sand", "Book buries sand", "Tree buries sand", "Chair buries sand"], "object_replaced": ["Cup buries book", "Cup buries paper", "Cup buries rock", "Cup buries chair", "Cup buries pencil"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Cup buries sand\nsubject token: Cup\nobject token: sand\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Mug buries sand, Bowl buries sand, Vessel buries sand, Container buries sand, Jug buries sand\nQ2. Cup covers sand, Cup smothers sand, Cup conceals sand, Cup blankets sand, Cup masks sand\nQ3. Cup buries grains, Cup buries pebbles, Cup buries dirt, Cup buries dust, Cup buries particles", "subject_replaced": ["Vessel buries sand", "Container buries sand", "Jug buries sand", "Mug buries sand", "Bowl buries sand"], "verb_replaced": ["Cup conceals sand", "Cup covers sand", "Cup masks sand", "Cup blankets sand", "Cup smothers sand"], "object_replaced": ["Cup buries dirt", "Cup buries grains", "Cup buries pebbles", "Cup buries dust", "Cup buries particles"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Cup buries sand\n", "AffectedParaphraseMaker_gptoutput": "\n1. The cup covers the sand.\n2. The cup conceals the sand.\n3. The cup hides the sand.\n4. The cup envelops the sand.\n5. The cup obscures the sand.", "affected_paraphrase": ["The cup hides the sand.", "The cup conceals the sand.", "The cup covers the sand.", "The cup envelops the sand.", "The cup obscures the sand."]}]}
{"inputs": {"id": 892, "prompt": "a string pierced board", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "string", "verb": "pierced", "object": "board", "neg": null, "prompt_polarity_grounded": "A string did not pierce the board."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A string did not pierce the board.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The string was too thick. \n2. The board was too hard.", "affected_reasoning": ["The string was too thick.", "The board was too hard."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a string pierced board\nsubject token: string\nobject token: board\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a rope pierced board\n2. a thread pierced board\n3. a wire pierced board\n4. a cloth pierced board\n5. a ribbon pierced board\n\nQ2. Replacements:\n1. a string pierced wall\n2. a string pierced table\n3. a string pierced chair\n4. a string pierced window\n5. a string pierced door", "subject_replaced": ["a wire pierced board", "a thread pierced board", "a rope pierced board", "a cloth pierced board", "a ribbon pierced board"], "object_replaced": ["a string pierced chair", "a string pierced table", "a string pierced window", "a string pierced wall", "a string pierced door"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a string pierced board\nsubject token: string\nobject token: board\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A cord pierced board, a thread pierced board, a rope pierced board, a line pierced board, a yarn pierced board.\nQ2. Impaled a string board, jabbed a string board, thrust a string board, drove a string board, pierced a string board.\nQ3. A string pierced panel, a string pierced plank, a string pierced slab, a string pierced sheet, a string pierced surface.", "subject_replaced": ["a line pierced board", "a yarn pierced board.", "a thread pierced board", "a rope pierced board", "A cord pierced board"], "verb_replaced": ["drove a string board", "thrust a string board", "Impaled a string board", "pierced a string board.", "jabbed a string board"], "object_replaced": ["a string pierced surface.", "a string pierced plank", "a string pierced slab", "a string pierced sheet", "A string pierced panel"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a string pierced board\n", "AffectedParaphraseMaker_gptoutput": "\n1. A plank with a hole in it\n2. A board with a puncture\n3. A slab with a punctured opening\n4. A panel with a perforation\n5. A sheet with a pierced opening", "affected_paraphrase": ["A plank with a hole in it", "A board with a puncture", "A panel with a perforation", "A sheet with a pierced opening", "A slab with a punctured opening"]}]}
{"inputs": {"id": 896, "prompt": "and spatula crashed bike.", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "spatula", "verb": "crashed", "object": "bike", "neg": null, "prompt_polarity_grounded": "and spatula did not crash bike."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "and spatula did not crash bike.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The spatula was not moving. \n2. Therefore, it could not cause the bike to crash.", "affected_reasoning": ["The spatula was not moving.", "Therefore, it could not cause bike to crash."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: and spatula crashed bike.\nsubject token: spatula\nobject token: bike\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. and balloon crashed bike.\n2. and eraser crashed bike.\n3. and pencil crashed bike.\n4. and ruler crashed bike.\n5. and scissors crashed bike.\n\nQ2. Replacements:\n1. and spatula crashed car.\n2. and spatula crashed train.\n3. and spatula crashed airplane.\n4. and spatula crashed boat.\n5. and spatula crashed rocket.", "subject_replaced": ["and balloon crashed bike.", "and pencil crashed bike.", "and scissors crashed bike.", "and eraser crashed bike.", "and ruler crashed bike."], "object_replaced": ["and spatula crashed airplane.", "and spatula crashed rocket.", "and spatula crashed boat.", "and spatula crashed car.", "and spatula crashed train."]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: and spatula crashed bike.\nsubject token: spatula\nobject token: bike\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. and ladle crashed bike.\nQ2. and spatula tumbled bike.\nQ3. and spatula crashed motorcycle.", "subject_replaced": ["and ladle crashed bike."], "verb_replaced": ["and spatula tumbled bike."], "object_replaced": ["and spatula crashed motorcycle."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: and spatula crashed bike.\n", "AffectedParaphraseMaker_gptoutput": "\n1. The spatula and the bicycle collided.\n2. The spatula and the bike had a crash.\n3. The spatula and the two-wheeler had a mishap.\n4. The spatula and the cycle collided.\n5. The spatula and the bicycle had a crash.", "affected_paraphrase": ["The spatula and the bike had a crash.", "The spatula and the bicycle collided.", "The spatula and the cycle collided.", "The spatula and the two-wheeler had a mishap.", "The spatula and the bicycle had a crash."]}]}
{"inputs": {"id": 899, "prompt": "air chills lion", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "air", "verb": "chills", "object": "lion", "neg": null, "prompt_polarity_grounded": "air chills lion"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "air chills lion. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Lion is a predator;\n2. Predators scare prey;", "affected_reasoning": ["Lion is predator;", "Predators scare prey;"]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: air chills lion\nsubject token: air\nobject token: lion\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Fire chills lion\n2. Water chills lion\n3. Wind chills lion\n4. Earth chills lion\n5. Sun chills lion\n\nQ2. Replacements:\n1. Air chills tiger\n2. Air chills bear\n3. Air chills elephant\n4. Air chills monkey\n5. Air chills bird", "subject_replaced": ["Earth chills lion", "Wind chills lion", "Sun chills lion", "Water chills lion", "Fire chills lion"], "object_replaced": ["Air chills elephant", "Air chills monkey", "Air chills bear", "Air chills bird", "Air chills tiger"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: air chills lion\nsubject token: air\nobject token: lion\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Wind chills lion, Breeze chills lion, Draft chills lion, Gust chills lion, Zephyr chills lion\nQ2. Air cools lion, Air freezes lion, Air numbs lion, Air refreshes lion, Air refreshes lion\nQ3. Air chills cub, Air chills cubs, Air chills cubby, Air chills cubbies, Air chills cubby-lion", "subject_replaced": ["Zephyr chills lion", "Breeze chills lion", "Wind chills lion", "Draft chills lion", "Gust chills lion"], "verb_replaced": ["Air refreshes lion", "Air freezes lion", "Air numbs lion", "Air cools lion"], "object_replaced": ["Air chills cubby", "Air chills cub", "Air chills cubby-lion", "Air chills cubbies", "Air chills cubs"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: air chills lion\n", "AffectedParaphraseMaker_gptoutput": "\n1. The air causes the lion to become cold.\n2. The atmosphere makes the lion shiver.\n3. The temperature drops and the lion feels it.\n4. The air temperature affects the lion's body temperature.\n5. The lion feels the chill of the air.", "affected_paraphrase": ["The temperature drops and the lion feels it.", "The air temperature affects the lion's body temperature.", "The lion feels the chill of the air.", "The atmosphere makes the lion shiver.", "The air causes the lion to become cold."]}]}
{"inputs": {"id": 905, "prompt": "Shirt cuts wool", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Shirt", "verb": "cuts", "object": "wool", "neg": null, "prompt_polarity_grounded": "Shirt does not cut wool."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Shirt does not cut wool.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Wool is a fabric. \n2. T-shirts are not designed to cut fabric.", "affected_reasoning": ["Wool is fabric.", "T-shirts are not designed to cut fabric."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Shirt cuts wool\nsubject token: Shirt\nobject token: wool\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Car cuts wool\n2. Pen cuts wool\n3. Book cuts wool\n4. Chair cuts wool\n5. Table cuts wool\n\nQ2. Replacements:\n1. Shirt cuts paper\n2. Shirt cuts plastic\n3. Shirt cuts glass\n4. Shirt cuts metal\n5. Shirt cuts fabric", "subject_replaced": ["Car cuts wool", "Book cuts wool", "Table cuts wool", "Chair cuts wool", "Pen cuts wool"], "object_replaced": ["Shirt cuts paper", "Shirt cuts plastic", "Shirt cuts metal", "Shirt cuts glass", "Shirt cuts fabric"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Shirt cuts wool\nsubject token: Shirt\nobject token: wool\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Blouse slices fleece, Garment slices fleece, Top slices fleece, Tunic slices fleece, Dress slices fleece\nQ2. Shirt chops wool, Shirt snips wool, Shirt shears wool, Shirt trims wool, Shirt shaves wool\nQ3. Shirt cuts fabric, Shirt cuts yarn, Shirt cuts flannel, Shirt cuts tweed, Shirt cuts cashmere", "subject_replaced": ["Top slices fleece", "Blouse slices fleece", "Garment slices fleece", "Dress slices fleece", "Tunic slices fleece"], "verb_replaced": ["Shirt chops wool", "Shirt trims wool", "Shirt shaves wool", "Shirt shears wool", "Shirt snips wool"], "object_replaced": ["Shirt cuts flannel", "Shirt cuts cashmere", "Shirt cuts tweed", "Shirt cuts fabric", "Shirt cuts yarn"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Shirt cuts wool\n", "AffectedParaphraseMaker_gptoutput": "\n1. Wool is sliced by a shirt.\n2. A shirt slices wool.\n3. Wool is divided by a shirt.\n4. A shirt divides wool.\n5. A shirt is used to cut wool.", "affected_paraphrase": ["A shirt divides wool.", "A shirt is used to cut wool.", "Wool is sliced by a shirt.", "Wool is divided by a shirt.", "A shirt slices wool."]}]}
{"inputs": {"id": 911, "prompt": "Woman vomits pea", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Woman", "verb": "vomits", "object": "pea", "neg": null, "prompt_polarity_grounded": "Woman vomits pea"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Woman vomits pea. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. She ate a pea.\n2. Her body rejected it.", "affected_reasoning": ["She ate pea.", "Her body rejected it."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Woman vomits pea\nsubject token: Woman\nobject token: pea\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant vomits pea\n2. Child vomits pea\n3. Teacher vomits pea\n4. Cat vomits pea\n5. Soldier vomits pea\n\nQ2. Replacements:\n1. Woman vomits apple\n2. Woman vomits banana\n3. Woman vomits orange\n4. Woman vomits grape\n5. Woman vomits strawberry", "subject_replaced": ["Teacher vomits pea", "Soldier vomits pea", "Elephant vomits pea", "Cat vomits pea", "Child vomits pea"], "object_replaced": ["Woman vomits orange", "Woman vomits strawberry", "Woman vomits banana", "Woman vomits grape", "Woman vomits apple"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Woman vomits pea\nsubject token: Woman\nobject token: pea\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Female vomits pea\n2. Lady vomits pea\n3. Girl vomits pea\n4. Woman regurgitates pea\n5. Lady disgorges pea\n\nQ2.\n1. Woman retches pea\n2. Woman heaves pea\n3. Woman ejects pea\n4. Woman spews pea\n5. Woman disgorges pea\n\nQ3.\n1. Woman vomits bean\n2. Woman vomits lentil\n3. Woman vomits chickpea\n4. Woman vomits split pea\n5. Woman vomits pea pod", "subject_replaced": ["Lady vomits pea", "Girl vomits pea", "Woman regurgitates pea", "Female vomits pea", "Lady disgorges pea"], "verb_replaced": ["Woman heaves pea", "Woman ejects pea", "Woman disgorges pea", "Woman spews pea", "Woman retches pea"], "object_replaced": ["Woman vomits bean", "Woman vomits chickpea", "Woman vomits lentil", "Woman vomits split pea", "Woman vomits pea pod"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Woman vomits pea\n", "AffectedParaphraseMaker_gptoutput": "\n1. A female expels a pea through her mouth.\n2. A female regurgitates a pea.\n3. A female ejects a pea from her stomach.\n4. A female disgorges a pea.\n5. A female disgorges a pea through her mouth.", "affected_paraphrase": ["A female ejects a pea from her stomach.", "A female disgorges a pea.", "A female regurgitates a pea.", "A female disgorges a pea through her mouth.", "A female expels a pea through her mouth."]}]}
{"inputs": {"id": 921, "prompt": "worm drinks gravy", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "worm", "verb": "drinks", "object": "gravy", "neg": null, "prompt_polarity_grounded": "worm drinks gravy"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "worm drinks gravy. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Worms eat small particles of food.\n2. Gravy is made of small particles of food.", "affected_reasoning": ["Worms eat small particles of food.", "Gravy is made of small particles of food."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: worm drinks gravy\nsubject token: worm\nobject token: gravy\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant drinks gravy\n2. Cat drinks gravy\n3. Fish drinks gravy\n4. Bird drinks gravy\n5. Mouse drinks gravy\n\nQ2. Replacements:\n1. Worm drinks juice\n2. Worm drinks milk\n3. Worm drinks water\n4. Worm drinks tea\n5. Worm drinks soda", "subject_replaced": ["Elephant drinks gravy", "Cat drinks gravy", "Fish drinks gravy", "Mouse drinks gravy", "Bird drinks gravy"], "object_replaced": ["Worm drinks tea", "Worm drinks soda", "Worm drinks water", "Worm drinks milk", "Worm drinks juice"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: worm drinks gravy\nsubject token: worm\nobject token: gravy\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Caterpillar drinks gravy\n2. Larva drinks gravy\n3. Maggot drinks gravy\n4. Grub drinks gravy\n5. Slug drinks gravy\n\nQ2.\n1. Worm gulps gravy\n2. Worm sips gravy\n3. Worm slurps gravy\n4. Worm guzzles gravy\n5. Worm swallows gravy\n\nQ3.\n1. Worm drinks sauce\n2. Worm drinks jus\n3. Worm drinks broth\n4. Worm drinks drippings\n5. Worm drinks stock", "subject_replaced": ["Caterpillar drinks gravy", "Maggot drinks gravy", "Slug drinks gravy", "Larva drinks gravy", "Grub drinks gravy"], "verb_replaced": ["Worm swallows gravy", "Worm guzzles gravy", "Worm gulps gravy", "Worm slurps gravy", "Worm sips gravy"], "object_replaced": ["Worm drinks drippings", "Worm drinks sauce", "Worm drinks stock", "Worm drinks broth", "Worm drinks jus"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: worm drinks gravy\n", "AffectedParaphraseMaker_gptoutput": "\n1. The worm imbibes the sauce.\n2. The annelid consumes the gravy.\n3. The invertebrate sips the gravy.\n4. The worm slurps the gravy.\n5. The worm guzzles the gravy.", "affected_paraphrase": ["The worm imbibes the sauce.", "The worm slurps the gravy.", "The invertebrate sips the gravy.", "The annelid consumes the gravy.", "The worm guzzles the gravy."]}]}
{"inputs": {"id": 934, "prompt": "A cool water was ac", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "water", "verb": "was", "object": "ac", "neg": null, "prompt_polarity_grounded": "A cool water was ac"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A cool water was ac. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Water absorbs heat from its surroundings.\n2. Cool water has less heat than its surroundings.", "affected_reasoning": ["Water absorbs heat from its surroundings.", "Cool water has less heat than its surroundings."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: A cool water was ac\nsubject token: water\nobject token: ac\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1.\n1. A cool balloon was ac\n2. A cool chair was ac\n3. A cool tree was ac\n4. A cool book was ac\n5. A cool pencil was ac\n\nQ2.\n1. A cool water was dog\n2. A cool water was cat\n3. A cool water was car\n4. A cool water was house\n5. A cool water was phone", "subject_replaced": ["A cool tree was ac", "A cool pencil was ac", "A cool book was ac", "A cool balloon was ac", "A cool chair was ac"], "object_replaced": ["A cool water was dog", "A cool water was car", "A cool water was phone", "A cool water was house", "A cool water was cat"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: A cool water was ac\nsubject token: water\nobject token: ac\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A cool liquid was ac, A cool beverage was ac, A cool refreshment was ac, A cool draught was ac, A cool drink was ac.\nQ2. A cool water bubbled, A cool water trickled, A cool water flowed, A cool water cascaded, A cool water gushed.\nQ3. A cool water was activated, A cool water was energized, A cool water was powered, A cool water was ignited, A cool water was charged.", "subject_replaced": ["A cool refreshment was ac", "A cool beverage was ac", "A cool draught was ac", "A cool drink was ac.", "A cool liquid was ac"], "verb_replaced": ["A cool water bubbled", "A cool water trickled", "A cool water gushed.", "A cool water cascaded", "A cool water flowed"], "object_replaced": ["A cool water was energized", "A cool water was activated", "A cool water was powered", "A cool water was charged.", "A cool water was ignited"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: A cool water was ac\n", "AffectedParaphraseMaker_gptoutput": "\n1. A refreshing liquid was present.\n2. An invigorating liquid was available.\n3. A chill liquid was present.\n4. A bracing liquid was present.\n5. A stimulating liquid was present.", "affected_paraphrase": ["A refreshing liquid was present.", "A stimulating liquid was present.", "A bracing liquid was present.", "An invigorating liquid was available.", "A chill liquid was present."]}]}
{"inputs": {"id": 945, "prompt": "Child chew hay", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Child", "verb": "chew", "object": "hay", "neg": null, "prompt_polarity_grounded": "Child does not chew hay."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Child does not chew hay.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Hay is too rough for a child to chew.\n2. Therefore, a child does not chew hay.", "affected_reasoning": ["Hay is too rough for child to chew.", "Therefore, child does not chew hay."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Child chew hay\nsubject token: Child\nobject token: hay\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant chew hay\n2. Puppy chew hay\n3. Teacher chew hay\n4. Student chew hay\n5. Cat chew hay\n\nQ2. Replacements:\n1. Child chew pencil\n2. Child chew paper\n3. Child chew book\n4. Child chew apple\n5. Child chew chair", "subject_replaced": ["Puppy chew hay", "Student chew hay", "Teacher chew hay", "Elephant chew hay"], "object_replaced": ["Child chew paper", "Child chew pencil", "Child chew apple", "Child chew book", "Child chew chair"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Child chew hay\nsubject token: Child\nobject token: hay\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants: Infant munch hay, Toddler nibble hay, Kid gnaw hay, Youth chomp hay, Juvenile crunch hay.\nQ2. Variants: Child munches hay, Child devours hay, Child gobbles hay, Child consumes hay, Child swallows hay.\nQ3. Variants: Child chew straw, Child chew grass, Child chew fodder, Child chew alfalfa, Child chew silage.", "subject_replaced": ["Juvenile crunch hay.", "Toddler nibble hay", "Infant munch hay", "Youth chomp hay", "Kid gnaw hay"], "verb_replaced": ["Child devours hay", "Child swallows hay.", "Child consumes hay", "Child gobbles hay", "Child munches hay"], "object_replaced": ["Child chew grass", "Child chew alfalfa", "Child chew fodder", "Child chew straw", "Child chew silage."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Child chew hay\n", "AffectedParaphraseMaker_gptoutput": "\n1. A youngster munching on straw\n2. A kid gnawing on hay\n3. A young one chomping on hay\n4. A minor nibbling on hay\n5. A juvenile devouring hay", "affected_paraphrase": ["A juvenile devouring hay", "A kid gnawing on hay", "A minor nibbling on hay", "A youngster munching on straw", "A young one chomping on hay"]}]}
{"inputs": {"id": 955, "prompt": "the clown puffs milk", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "clown", "verb": "puffs", "object": "milk", "neg": null, "prompt_polarity_grounded": "The clown does not puff milk."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The clown does not puff milk.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Clowns are not cows.\n2. Cows are the only animals that can produce milk.", "affected_reasoning": ["Clowns are not cows.", "Cows are only animals that can produce milk."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the clown puffs milk\nsubject token: clown\nobject token: milk\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The astronaut puffs milk\n2. The teacher puffs milk\n3. The doctor puffs milk\n4. The farmer puffs milk\n5. The engineer puffs milk\n\nQ2. Replacements:\n1. The clown puffs water\n2. The clown puffs juice\n3. The clown puffs soda\n4. The clown puffs tea\n5. The clown puffs coffee", "subject_replaced": ["The farmer puffs milk", "The doctor puffs milk", "The engineer puffs milk", "The astronaut puffs milk", "The teacher puffs milk"], "object_replaced": ["The clown puffs coffee", "The clown puffs soda", "The clown puffs tea", "The clown puffs juice", "The clown puffs water"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the clown puffs milk\nsubject token: clown\nobject token: milk\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The jester puffs milk, The harlequin puffs milk, The mime puffs milk, The buffoon puffs milk, The comedian puffs milk.\n\nQ2. The clown blows milk, The clown sprays milk, The clown squirts milk, The clown ejects milk, The clown spurts milk.\n\nQ3. The clown puffs cream, The clown puffs yogurt, The clown puffs custard, The clown puffs whey, The clown puffs skimmed milk.", "subject_replaced": ["The comedian puffs milk.", "The jester puffs milk", "The harlequin puffs milk", "The mime puffs milk", "The buffoon puffs milk"], "verb_replaced": ["The clown squirts milk", "The clown spurts milk.", "The clown sprays milk", "The clown blows milk", "The clown ejects milk"], "object_replaced": ["The clown puffs skimmed milk.", "The clown puffs custard", "The clown puffs cream", "The clown puffs yogurt", "The clown puffs whey"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the clown puffs milk\n", "AffectedParaphraseMaker_gptoutput": "\n1. The clown is blowing milk.\n2. The clown is puffing milk.\n3. The clown is exhaling milk.\n4. The clown is forcing milk out of his mouth.\n5. The clown is spewing milk.", "affected_paraphrase": ["The clown is forcing milk out of his mouth.", "The clown is spewing milk.", "The clown is puffing milk.", "The clown is exhaling milk.", "The clown is blowing milk."]}]}
{"inputs": {"id": 958, "prompt": "Elephant tackles bus", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Elephant", "verb": "tackles", "object": "bus", "neg": null, "prompt_polarity_grounded": "Elephant tackles bus"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Elephant tackles bus. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nElephant was startled by the bus; Elephant charged at the bus to protect itself.", "affected_reasoning": ["Elephant was startled by bus; Elephant charged at bus to protect itself."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Elephant tackles bus\nsubject token: Elephant\nobject token: bus\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Giraffe tackles bus\n2. Tiger tackles bus\n3. Gorilla tackles bus\n4. Hippo tackles bus\n5. Rhinoceros tackles bus\n\nQ2. Replacements:\n1. Elephant tackles car\n2. Elephant tackles train\n3. Elephant tackles airplane\n4. Elephant tackles boat\n5. Elephant tackles truck", "subject_replaced": ["Tiger tackles bus", "Gorilla tackles bus", "Rhinoceros tackles bus", "Giraffe tackles bus", "Hippo tackles bus"], "object_replaced": ["Elephant tackles boat", "Elephant tackles truck", "Elephant tackles car", "Elephant tackles airplane", "Elephant tackles train"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Elephant tackles bus\nsubject token: Elephant\nobject token: bus\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Mammoth tackles bus\n2. Pachyderm tackles bus\n3. Rhinoceros tackles bus\n4. Hippopotamus tackles bus\n5. Giant tackles bus\n\nQ2.\n1. Elephant smashes bus\n2. Elephant collides with bus\n3. Elephant slams into bus\n4. Elephant crashes into bus\n5. Elephant plows into bus\n\nQ3.\n1. Elephant tackles vehicle\n2. Elephant tackles automobile\n3. Elephant tackles truck\n4. Elephant tackles van\n5. Elephant tackles lorry", "subject_replaced": ["Pachyderm tackles bus", "Hippopotamus tackles bus", "Giant tackles bus", "Mammoth tackles bus", "Rhinoceros tackles bus"], "verb_replaced": ["Elephant plows into bus", "Elephant collides with bus", "Elephant crashes into bus", "Elephant smashes bus", "Elephant slams into bus"], "object_replaced": ["Elephant tackles automobile", "Elephant tackles lorry", "Elephant tackles truck", "Elephant tackles vehicle", "Elephant tackles van"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Elephant tackles bus\n", "AffectedParaphraseMaker_gptoutput": "\n1. An elephant collided with a bus.\n2. A bus was taken down by an elephant.\n3. An elephant and a bus had a physical altercation.\n4. An elephant and a bus had a confrontation.\n5. An elephant and a bus had a run-in.", "affected_paraphrase": ["An elephant and a bus had a physical altercation.", "An elephant and a bus had a run-in.", "An elephant and a bus had a confrontation.", "A bus was taken down by an elephant.", "An elephant collided with a bus."]}]}
{"inputs": {"id": 975, "prompt": "a nose exhales air", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "nose", "verb": "exhales", "object": "air", "neg": null, "prompt_polarity_grounded": "a nose exhales air"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a nose exhales air. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Air enters the nose.\n2. Air is then exhaled out of the nose.", "affected_reasoning": ["Air enters nose.", "Air is then exhaled out of nose."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a nose exhales air\nsubject token: nose\nobject token: air\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A tree exhales air\n2. A car exhales air\n3. A dog exhales air\n4. A book exhales air\n5. A chair exhales air\n\nQ2. Replacements:\n1. A nose exhales water\n2. A nose exhales fire\n3. A nose exhales smoke\n4. A nose exhales ice\n5. A nose exhales wind", "subject_replaced": ["A chair exhales air", "A book exhales air", "A tree exhales air", "A dog exhales air", "A car exhales air"], "object_replaced": ["A nose exhales water", "A nose exhales wind", "A nose exhales fire", "A nose exhales ice", "A nose exhales smoke"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a nose exhales air\nsubject token: nose\nobject token: air\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A nostril exhales air, A snout exhales air, A proboscis exhales air, A beak exhales air, A muzzle exhales air.\n\nQ2. A nose exhales oxygen, A nose inhales air, A nose pumps air, A nose releases air, A nose circulates air.\n\nQ3. A nose exhales breath, A nose exhales vapor, A nose exhales gas, A nose exhales fumes, A nose exhales wind.", "subject_replaced": ["A proboscis exhales air", "A muzzle exhales air.", "A nostril exhales air", "A snout exhales air", "A beak exhales air"], "verb_replaced": ["A nose exhales oxygen", "A nose circulates air.", "A nose releases air", "A nose inhales air", "A nose pumps air"], "object_replaced": ["A nose exhales fumes", "A nose exhales breath", "A nose exhales vapor", "A nose exhales gas", "A nose exhales wind."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a nose exhales air\n", "AffectedParaphraseMaker_gptoutput": "\n1. A nose releases air.\n2. A nose breathes out air.\n3. A nose expels air.\n4. A nose vents air.\n5. A nose emits air.", "affected_paraphrase": ["A nose expels air.", "A nose vents air.", "A nose emits air.", "A nose releases air.", "A nose breathes out air."]}]}
{"inputs": {"id": 977, "prompt": "rope attaches turtle", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "rope", "verb": "attaches", "object": "turtle", "neg": null, "prompt_polarity_grounded": "Rope does not attach turtle."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Rope does not attach turtle.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Turtles do not have anything to attach a rope to. \n2. Therefore, a rope cannot attach to a turtle.", "affected_reasoning": ["Turtles do not have anything to attach rope to.", "Therefore, rope cannot attach to turtle."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: rope attaches turtle\nsubject token: rope\nobject token: turtle\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hammer attaches turtle\n2. Pencil attaches turtle\n3. Glue attaches turtle\n4. String attaches turtle\n5. Magnet attaches turtle\n\nQ2. Replacements:\n1. Rope attaches elephant\n2. Rope attaches bird\n3. Rope attaches fish\n4. Rope attaches car\n5. Rope attaches balloon", "subject_replaced": ["String attaches turtle", "Hammer attaches turtle", "Magnet attaches turtle", "Pencil attaches turtle", "Glue attaches turtle"], "object_replaced": ["Rope attaches elephant", "Rope attaches bird", "Rope attaches car", "Rope attaches fish", "Rope attaches balloon"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: rope attaches turtle\nsubject token: rope\nobject token: turtle\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Cord attaches turtle, string binds turtle, tether ties turtle, line links turtle, cable connects turtle.\nQ2. Attaches binds turtle, ties links turtle, binds connects turtle, fastens secures turtle, binds ties turtle.\nQ3. Rope attaches tortoise, rope attaches terrapin, rope attaches aquatic reptile, rope attaches shelled creature, rope attaches amphibian.", "subject_replaced": ["Cord attaches turtle", "tether ties turtle", "string binds turtle", "cable connects turtle.", "line links turtle"], "verb_replaced": ["binds connects turtle", "ties links turtle", "fastens secures turtle", "Attaches binds turtle", "binds ties turtle."], "object_replaced": ["rope attaches amphibian.", "rope attaches shelled creature", "Rope attaches tortoise", "rope attaches terrapin", "rope attaches aquatic reptile"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: rope attaches turtle\n", "AffectedParaphraseMaker_gptoutput": "\n1. A rope is connected to the turtle.\n2. The turtle is tied to a rope.\n3. A rope is affixed to the turtle.\n4. The turtle is secured with a rope.\n5. A rope is linked to the turtle.", "affected_paraphrase": ["A rope is linked to the turtle.", "The turtle is tied to a rope.", "A rope is affixed to the turtle.", "A rope is connected to the turtle.", "The turtle is secured with a rope."]}]}
{"inputs": {"id": 983, "prompt": "the water curbs bike", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "water", "verb": "curbs", "object": "bike", "neg": null, "prompt_polarity_grounded": "The water does not curb the bike."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The water does not curb the bike.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Bikes are not buoyant, so they cannot float on water.\n2. Therefore, the water cannot curb the bike.", "affected_reasoning": ["Bikes are not buoyant, so they cannot float on water.", "Therefore, water cannot curb bike."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the water curbs bike\nsubject token: water\nobject token: bike\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The moon curbs bike\n2. The wind curbs bike\n3. The sun curbs bike\n4. The snow curbs bike\n5. The stars curbs bike\n\nQ2. Replacements:\n1. The water curbs car\n2. The water curbs train\n3. The water curbs airplane\n4. The water curbs boat\n5. The water curbs rocket", "subject_replaced": ["The wind curbs bike", "The sun curbs bike", "The moon curbs bike", "The snow curbs bike", "The stars curbs bike"], "object_replaced": ["The water curbs boat", "The water curbs car", "The water curbs train", "The water curbs airplane", "The water curbs rocket"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the water curbs bike\nsubject token: water\nobject token: bike\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The liquid curbs bike, The fluid curbs bike, The moisture curbs bike, The liquidation curbs bike, The precipitation curbs bike.\n\nQ2. The water restrains bike, The water controls bike, The water limits bike, The water restricts bike, The water regulates bike.\n\nQ3. The water curbs cycle, The water curbs scooter, The water curbs moped, The water curbs tricycle, The water curbs velocipede.", "subject_replaced": ["The moisture curbs bike", "The precipitation curbs bike.", "The liquid curbs bike", "The liquidation curbs bike", "The fluid curbs bike"], "verb_replaced": ["The water limits bike", "The water restricts bike", "The water restrains bike", "The water controls bike", "The water regulates bike."], "object_replaced": ["The water curbs moped", "The water curbs scooter", "The water curbs tricycle", "The water curbs velocipede.", "The water curbs cycle"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the water curbs bike\n", "AffectedParaphraseMaker_gptoutput": "\n1. The water impedes the progress of the bicycle.\n2. The water obstructs the movement of the bike.\n3. The water hinders the cycling.\n4. The water stops the bike.\n5. The water halts the cycling of the bike.", "affected_paraphrase": ["The water impedes the progress of the bicycle.", "The water hinders the cycling.", "The water halts the cycling of the bike.", "The water obstructs the movement of the bike.", "The water stops the bike."]}]}
{"inputs": {"id": 989, "prompt": "Wind chills table", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Wind", "verb": "chills", "object": "table", "neg": null, "prompt_polarity_grounded": "Wind chills table"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Wind chills table. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Wind chill is the temperature it feels like when the wind is blowing. \n2. A wind chill table shows the temperature it feels like for different wind speeds.", "affected_reasoning": ["Wind chill is temperature it feels like when wind is blowing.", "A wind chill table shows temperature it feels like for different wind speeds."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Wind chills table\nsubject token: Wind\nobject token: table\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Moon chills table\n2. Fire chills table\n3. Rain chills table\n4. Sun chills table\n5. Snow chills table\n\nQ2. Replacements:\n1. Wind chills chair\n2. Wind chills bed\n3. Wind chills sofa\n4. Wind chills desk\n5. Wind chills cupboard", "subject_replaced": ["Snow chills table", "Sun chills table", "Rain chills table", "Moon chills table", "Fire chills table"], "object_replaced": ["Wind chills desk", "Wind chills chair", "Wind chills sofa", "Wind chills cupboard", "Wind chills bed"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Wind chills table\nsubject token: Wind\nobject token: table\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Breeze chills table, Gales chills table, Gusts chills table, Zephyr chills table, Whirlwind chills table.\nQ2. Displayed chills table, Showed chills table, Presented chills table, Exhibited chills table, Demonstrated chills table.\nQ3. Wind chills chart, Wind chills graph, Wind chills diagram, Wind chills illustration, Wind chills figure.", "subject_replaced": ["Breeze chills table", "Gusts chills table", "Whirlwind chills table.", "Zephyr chills table", "Gales chills table"], "verb_replaced": ["Showed chills table", "Displayed chills table", "Demonstrated chills table.", "Exhibited chills table", "Presented chills table"], "object_replaced": ["Wind chills figure.", "Wind chills graph", "Wind chills illustration", "Wind chills chart", "Wind chills diagram"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Wind chills table\n", "AffectedParaphraseMaker_gptoutput": "\n1. Chart of air temperatures and wind speeds that indicate how cold it feels\n2. Graph of wind speeds and temperatures that show the chill factor\n3. Table of wind speeds and temperatures that illustrate the coldness\n4. Table of wind speeds and temperatures that demonstrate the chill\n5. Chart of wind speeds and temperatures that indicate the chilliness", "affected_paraphrase": ["Table of wind speeds and temperatures that demonstrate the chill", "Graph of wind speeds and temperatures that show the chill factor", "Table of wind speeds and temperatures that illustrate the coldness", "Chart of air temperatures and wind speeds that indicate how cold it feels", "Chart of wind speeds and temperatures that indicate the chilliness"]}]}
{"inputs": {"id": 995, "prompt": "spatula cools table", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "spatula", "verb": "cools", "object": "table", "neg": null, "prompt_polarity_grounded": "Spatula does not cool table."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Spatula does not cool table.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Spatulas are not designed to cool surfaces. \n2. Therefore, a spatula cannot cool a table.", "affected_reasoning": ["Spatulas are not designed to cool surfaces.", "Therefore, spatula cannot cool table."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: spatula cools table\nsubject token: spatula\nobject token: table\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1.\n1. Hammer cools table\n2. Pencil cools table\n3. Fork cools table\n4. Spoon cools table\n5. Knife cools table\n\nQ2.\n1. Spatula cools chair\n2. Spatula cools sofa\n3. Spatula cools bed\n4. Spatula cools desk\n5. Spatula cools cupboard", "subject_replaced": ["Pencil cools table", "Knife cools table", "Hammer cools table", "Spoon cools table", "Fork cools table"], "object_replaced": ["Spatula cools chair", "Spatula cools bed", "Spatula cools desk", "Spatula cools cupboard", "Spatula cools sofa"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: spatula cools table\nsubject token: spatula\nobject token: table\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Spatula cools tray, spatula cools counter, spatula cools countertop, spatula cools surface, spatula cools tabletop.\n\nQ2. Spatula chills table, spatula refrigerates table, spatula lowers temperature of table, spatula cools down table, spatula cools off table.\n\nQ3. Spatula cools desk, spatula cools counter, spatula cools countertop, spatula cools surface, spatula cools tabletop.", "subject_replaced": ["spatula cools surface", "spatula cools tabletop.", "Spatula cools tray", "spatula cools countertop", "spatula cools counter"], "verb_replaced": ["spatula lowers temperature of table", "spatula cools down table", "spatula cools off table.", "Spatula chills table", "spatula refrigerates table"], "object_replaced": ["Spatula cools desk", "spatula cools surface", "spatula cools tabletop.", "spatula cools countertop", "spatula cools counter"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: spatula cools table\n", "AffectedParaphraseMaker_gptoutput": "\n1. The spatula brings the temperature of the table down.\n2. The spatula reduces the heat of the table.\n3. The spatula lowers the temperature of the table.\n4. The spatula cools off the table.\n5. The spatula decreases the warmth of the table.", "affected_paraphrase": ["The spatula lowers the temperature of the table.", "The spatula decreases the warmth of the table.", "The spatula brings the temperature of the table down.", "The spatula cools off the table.", "The spatula reduces the heat of the table."]}]}
{"inputs": {"id": 1006, "prompt": "a dog jailed person", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "dog", "verb": "jailed", "object": "person", "neg": null, "prompt_polarity_grounded": "A dog did not jail a person."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A dog did not jail a person.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Dogs cannot make decisions.\n2. Jailing someone requires a decision.", "affected_reasoning": ["Dogs cannot make decisions.", "Jailing someone requires decision."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a dog jailed person\nsubject token: dog\nobject token: person\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a cat jailed person\n2. a bird jailed person\n3. a fish jailed person\n4. a mouse jailed person\n5. a rabbit jailed person\n\nQ2. Replacements:\n1. a dog jailed animal\n2. a dog jailed object\n3. a dog jailed creature\n4. a dog jailed thing\n5. a dog jailed being", "subject_replaced": ["a bird jailed person", "a rabbit jailed person", "a fish jailed person", "a cat jailed person", "a mouse jailed person"], "object_replaced": ["a dog jailed animal", "a dog jailed creature", "a dog jailed thing", "a dog jailed being", "a dog jailed object"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a dog jailed person\nsubject token: dog\nobject token: person\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A canine jailed person; A pup jailed person; A hound jailed person; A mutt jailed person; A terrier jailed person.\nQ2. Imprisoned a dog person; Detained a dog person; Confined a dog person; Restrained a dog person; Apprehended a dog person.\nQ3. A dog incarcerated individual; A dog confined individual; A dog detained individual; A dog restrained individual; A dog arrested individual.", "subject_replaced": ["A canine jailed person", " A pup jailed person", " A hound jailed person", " A mutt jailed person", " A terrier jailed person."], "verb_replaced": ["Imprisoned a dog person", " Detained a dog person", " Confined a dog person", " Restrained a dog person", " Apprehended a dog person."], "object_replaced": ["A dog incarcerated individual", " A dog confined individual", " A dog detained individual", " A dog restrained individual", " A dog arrested individual."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a dog jailed person\n", "AffectedParaphraseMaker_gptoutput": "\n1. An individual incarcerated who is a canine.\n2. A person who is behind bars and is a dog.\n3. A canine that is in prison.\n4. A person who is a dog and is in jail.\n5. A canine individual who is detained.", "affected_paraphrase": ["A canine that is in prison.", "A canine individual who is detained.", "An individual incarcerated who is a canine.", "A person who is a dog and is in jail.", "A person who is behind bars and is a dog."]}]}
{"inputs": {"id": 1009, "prompt": "Clown breeds elephant", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Clown", "verb": "breeds", "object": "elephant", "neg": null, "prompt_polarity_grounded": "Clown breeds elephant"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Clown breeds elephant. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Clowns can train elephants to do tricks.\n2. Training an elephant is a form of breeding.", "affected_reasoning": ["Clowns can train elephants to do tricks.", "Training elephant is form of breeding."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Clown breeds elephant\nsubject token: Clown\nobject token: elephant\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Pilot breeds elephant\n2. Teacher breeds elephant\n3. Artist breeds elephant\n4. Scientist breeds elephant\n5. Musician breeds elephant\n\nQ2. Replacements:\n1. Clown breeds dog\n2. Clown breeds cat\n3. Clown breeds bird\n4. Clown breeds fish\n5. Clown breeds rabbit", "subject_replaced": ["Teacher breeds elephant", "Musician breeds elephant", "Scientist breeds elephant", "Pilot breeds elephant", "Artist breeds elephant"], "object_replaced": ["Clown breeds bird", "Clown breeds fish", "Clown breeds dog", "Clown breeds rabbit", "Clown breeds cat"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Clown breeds elephant\nsubject token: Clown\nobject token: elephant\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Jester breeds elephant\n2. Harlequin breeds elephant\n3. Mime breeds elephant\n4. Fool breeds elephant\n5. Buffoon breeds elephant\n\nQ2.\n1. Clown rears elephant\n2. Clown nurtures elephant\n3. Clown raises elephant\n4. Clown breeds elephant\n5. Clown fosters elephant\n\nQ3.\n1. Clown breeds pachyderm\n2. Clown breeds mammoth\n3. Clown breeds jumbo\n4. Clown breeds rhinoceros\n5. Clown breeds hippopotamus", "subject_replaced": ["Harlequin breeds elephant", "Buffoon breeds elephant", "Mime breeds elephant", "Jester breeds elephant", "Fool breeds elephant"], "verb_replaced": ["Clown rears elephant", "Clown nurtures elephant", "Clown fosters elephant", "Clown breeds elephant", "Clown raises elephant"], "object_replaced": ["Clown breeds jumbo", "Clown breeds hippopotamus", "Clown breeds pachyderm", "Clown breeds rhinoceros", "Clown breeds mammoth"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Clown breeds elephant\n", "AffectedParaphraseMaker_gptoutput": "\n1. Clowns are responsible for the propagation of elephants.\n2. Clowns are the source of the elephant population.\n3. Clowns are the originators of the elephant species.\n4. Clowns are the progenitors of elephants.\n5. Clowns are the creators of the elephant species.", "affected_paraphrase": ["Clowns are the progenitors of elephants.", "Clowns are responsible for the propagation of elephants.", "Clowns are the creators of the elephant species.", "Clowns are the source of the elephant population.", "Clowns are the originators of the elephant species."]}]}
{"inputs": {"id": 1010, "prompt": "a mallet kneads cake", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "mallet", "verb": "kneads", "object": "cake", "neg": null, "prompt_polarity_grounded": "a mallet kneads cake"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a mallet kneads cake. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Mallet hits cake. \n2. Cake becomes soft.", "affected_reasoning": ["Mallet hits cake.", "Cake becomes soft."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a mallet kneads cake\nsubject token: mallet\nobject token: cake\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a hammer kneads cake\n2. a spoon kneads cake\n3. a fork kneads cake\n4. a whisk kneads cake\n5. a ladle kneads cake\n\nQ2. Replacements:\n1. a mallet kneads bread\n2. a mallet kneads dough\n3. a mallet kneads pastry\n4. a mallet kneads ice cream\n5. a mallet kneads jelly", "subject_replaced": ["a fork kneads cake", "a hammer kneads cake", "a whisk kneads cake", "a spoon kneads cake", "a ladle kneads cake"], "object_replaced": ["a mallet kneads ice cream", "a mallet kneads jelly", "a mallet kneads pastry", "a mallet kneads bread", "a mallet kneads dough"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a mallet kneads cake\nsubject token: mallet\nobject token: cake\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A hammer kneads cake, A pestle kneads cake, A maul kneads cake, A club kneads cake, A gavel kneads cake.\n\nQ2. A mallet mashes cake, A mallet pummels cake, A mallet pounds cake, A mallet crushes cake, A mallet smashes cake.\n\nQ3. A mallet kneads dough, A mallet kneads bread, A mallet kneads pastry, A mallet kneads batter, A mallet kneads muffin.", "subject_replaced": ["A club kneads cake", "A maul kneads cake", "A pestle kneads cake", "A hammer kneads cake", "A gavel kneads cake."], "verb_replaced": ["A mallet pummels cake", "A mallet mashes cake", "A mallet smashes cake.", "A mallet pounds cake", "A mallet crushes cake"], "object_replaced": ["A mallet kneads pastry", "A mallet kneads muffin.", "A mallet kneads batter", "A mallet kneads dough", "A mallet kneads bread"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a mallet kneads cake\n", "AffectedParaphraseMaker_gptoutput": "\n1. A mallet mashes cake.\n2. A mallet works cake dough.\n3. A mallet pummels cake mixture.\n4. A mallet pounds cake batter.\n5. A mallet pulverizes cake ingredients.", "affected_paraphrase": ["A mallet works cake dough.", "A mallet pulverizes cake ingredients.", "A mallet pounds cake batter.", "A mallet mashes cake.", "A mallet pummels cake mixture."]}]}
{"inputs": {"id": 1019, "prompt": "knife kills ant.", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "knife", "verb": "kills", "object": "ant", "neg": null, "prompt_polarity_grounded": "knife kills ant."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "knife kills ant.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nAnt is dead because knife cut it. Knife cut it because it was sharp.", "affected_reasoning": ["Ant is dead because knife cut it", "Knife cut it because it was sharp."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: knife kills ant.\nsubject token: knife\nobject token: ant\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Pen kills ant.\n2. Hammer kills ant.\n3. Fork kills ant.\n4. Spoon kills ant.\n5. Ruler kills ant.\n\nQ2. Replacements:\n1. Knife kills bee.\n2. Knife kills spider.\n3. Knife kills fly.\n4. Knife kills mouse.\n5. Knife kills snake.", "subject_replaced": ["Pen kills ant.", "Hammer kills ant.", "Spoon kills ant.", "Fork kills ant.", "Ruler kills ant."], "object_replaced": ["Knife kills mouse.", "Knife kills spider.", "Knife kills fly.", "Knife kills bee.", "Knife kills snake."]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: knife kills ant.\nsubject token: knife\nobject token: ant\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Dagger kills ant.\nCleaver kills ant.\nBlade kills ant.\nScalpel kills ant.\nKnife kills ant.\n\nQ2. Knife slays ant.\nKnife murders ant.\nKnife eliminates ant.\nKnife destroys ant.\nKnife annihilates ant.\n\nQ3. Knife kills insect.\nKnife kills bug.\nKnife kills beetle.\nKnife kills crawler.\nKnife kills larva.", "subject_replaced": ["Scalpel kills ant.", "Knife kills ant.", "Cleaver kills ant.", "Blade kills ant.", "Dagger kills ant."], "verb_replaced": ["Knife destroys ant.", "Knife slays ant.", "Knife murders ant.", "Knife annihilates ant.", "Knife eliminates ant."], "object_replaced": ["Knife kills crawler.", "Knife kills beetle.", "Knife kills insect.", "Knife kills bug.", "Knife kills larva."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: knife kills ant.\n", "AffectedParaphraseMaker_gptoutput": "\n1. A blade terminates an ant's life.\n2. A knife is responsible for the death of an ant.\n3. A sharp object causes the demise of an ant.\n4. An ant is slain by a knife.\n5. A knife brings about the end of an ant.", "affected_paraphrase": ["A sharp object causes the demise of an ant.", "A knife is responsible for the death of an ant.", "A knife brings about the end of an ant.", "A blade terminates an ant's life.", "An ant is slain by a knife."]}]}
{"inputs": {"id": 1023, "prompt": "Desert absorbs rubber", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Desert", "verb": "absorbs", "object": "rubber", "neg": null, "prompt_polarity_grounded": "Desert does not absorb rubber."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Desert does not absorb rubber.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Rubber is a non-porous material, meaning it does not absorb liquids. \n2. Deserts are composed of sand and other dry materials, which are not liquids.", "affected_reasoning": ["Rubber is non-porous material, meaning it does not absorb liquids.", "Deserts are composed of sand and other dry materials, which are not liquids."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Desert absorbs rubber\nsubject token: Desert\nobject token: rubber\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1.\n1. Ocean absorbs rubber\n2. Sky absorbs rubber\n3. Mountain absorbs rubber\n4. Forest absorbs rubber\n5. Sun absorbs rubber\n\nQ2.\n1. Desert absorbs plastic\n2. Desert absorbs metal\n3. Desert absorbs glass\n4. Desert absorbs wood\n5. Desert absorbs fabric", "subject_replaced": ["Sky absorbs rubber", "Ocean absorbs rubber", "Sun absorbs rubber", "Forest absorbs rubber", "Mountain absorbs rubber"], "object_replaced": ["Desert absorbs glass", "Desert absorbs plastic", "Desert absorbs metal", "Desert absorbs fabric", "Desert absorbs wood"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Desert absorbs rubber\nsubject token: Desert\nobject token: rubber\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Sahara absorbs rubber\n2. Arid absorbs rubber\n3. Wasteland absorbs rubber\n4. Dryland absorbs rubber\n5. Barren absorbs rubber\n\nQ2.\n1. Desert engulfs rubber\n2. Desert consumes rubber\n3. Desert devours rubber\n4. Desert swallows rubber\n5. Desert engulfs rubber\n\nQ3.\n1. Desert absorbs latex\n2. Desert absorbs plastic\n3. Desert absorbs neoprene\n4. Desert absorbs foam\n5. Desert absorbs silicone", "subject_replaced": ["Arid absorbs rubber", "Barren absorbs rubber", "Dryland absorbs rubber", "Wasteland absorbs rubber", "Sahara absorbs rubber"], "verb_replaced": ["Desert devours rubber", "Desert engulfs rubber", "Desert consumes rubber", "Desert swallows rubber"], "object_replaced": ["Desert absorbs foam", "Desert absorbs neoprene", "Desert absorbs plastic", "Desert absorbs latex", "Desert absorbs silicone"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Desert absorbs rubber\n", "AffectedParaphraseMaker_gptoutput": "\n1. The arid environment soaks up rubber.\n2. The dry land takes in rubber.\n3. Rubber is soaked up by the desert.\n4. Rubber is absorbed by the desert.\n5. The desert assimilates rubber.", "affected_paraphrase": ["The dry land takes in rubber.", "The desert assimilates rubber.", "The arid environment soaks up rubber.", "Rubber is soaked up by the desert.", "Rubber is absorbed by the desert."]}]}
{"inputs": {"id": 1028, "prompt": "Pillow minces bread", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Pillow", "verb": "minces", "object": "bread", "neg": null, "prompt_polarity_grounded": "Pillow does not mince bread."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Pillow does not mince bread.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pillow is an object, not an action. \n2. Mince bread is an action, not an object.", "affected_reasoning": ["Pillow is object, not action.", "Mince bread is action, not object."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Pillow minces bread\nsubject token: Pillow\nobject token: bread\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hammer minces bread\n2. Carrot minces bread\n3. Pencil minces bread\n4. Clock minces bread\n5. Chair minces bread\n\nQ2. Replacements:\n1. Pillow minces cake\n2. Pillow minces ice cream\n3. Pillow minces pizza\n4. Pillow minces apple\n5. Pillow minces soup", "subject_replaced": ["Clock minces bread", "Carrot minces bread", "Pencil minces bread", "Hammer minces bread", "Chair minces bread"], "object_replaced": ["Pillow minces cake", "Pillow minces pizza", "Pillow minces soup", "Pillow minces ice cream", "Pillow minces apple"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Pillow minces bread\nsubject token: Pillow\nobject token: bread\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Cushion minces bread, Bolster minces bread, Mattress minces bread, Quilt minces bread, Blanket minces bread.\nQ2. Pillow chops bread, Pillow grinds bread, Pillow slices bread, Pillow dices bread, Pillow mashes bread.\nQ3. Pillow minces toast, Pillow minces crumbs, Pillow minces crackers, Pillow minces pastry, Pillow minces dough.", "subject_replaced": ["Cushion minces bread", "Bolster minces bread", "Quilt minces bread", "Mattress minces bread", "Blanket minces bread."], "verb_replaced": ["Pillow mashes bread.", "Pillow slices bread", "Pillow grinds bread", "Pillow chops bread", "Pillow dices bread"], "object_replaced": ["Pillow minces crackers", "Pillow minces crumbs", "Pillow minces toast", "Pillow minces dough.", "Pillow minces pastry"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Pillow minces bread\n", "AffectedParaphraseMaker_gptoutput": "\n1. Pillow chops up bread into small pieces\n2. Pillow mashes bread into crumbs\n3. Pillow grinds bread into tiny bits\n4. Pillow pulverizes bread into fragments\n5. Pillow reduces bread into morsels", "affected_paraphrase": ["Pillow pulverizes bread into fragments", "Pillow reduces bread into morsels", "Pillow grinds bread into tiny bits", "Pillow mashes bread into crumbs", "Pillow chops up bread into small pieces"]}]}
{"inputs": {"id": 1029, "prompt": "laptop pets rabbit", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "laptop", "verb": "pets", "object": "rabbit", "neg": null, "prompt_polarity_grounded": "laptop pets do not rabbit."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "laptop pets do not rabbit.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pets are living creatures that require care and attention. \n2. Laptops are inanimate objects and cannot provide the necessary care and attention for a pet.", "affected_reasoning": ["Pets are living creatures that require care and attention.", "Laptops are inanimate objects and cannot provide necessary care and attention for pet."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: laptop pets rabbit\nsubject token: laptop\nobject token: rabbit\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. text: phone pets rabbit\n2. text: computer pets rabbit\n3. text: television pets rabbit\n4. text: tablet pets rabbit\n5. text: printer pets rabbit\n\nQ2. Replacements:\n1. text: laptop pets fish\n2. text: laptop pets cat\n3. text: laptop pets bird\n4. text: laptop pets dog\n5. text: laptop pets turtle", "subject_replaced": ["computer pets rabbit", "printer pets rabbit", "television pets rabbit", "phone pets rabbit", "tablet pets rabbit"], "object_replaced": ["laptop pets bird", "laptop pets dog", "laptop pets cat", "laptop pets fish", "laptop pets turtle"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: laptop pets rabbit\nsubject token: laptop\nobject token: rabbit\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants: notebook pets rabbit, computer pets rabbit, tablet pets rabbit, netbook pets rabbit, Chromebook pets rabbit\nQ2. Variants: laptop owns rabbit, laptop keeps rabbit, laptop adopts rabbit, laptop buys rabbit, laptop raises rabbit\nQ3. Variants: laptop pets bunny, laptop pets hare, laptop pets guinea pig, laptop pets hamster, laptop pets marmot", "subject_replaced": ["Chromebook pets rabbit", "notebook pets rabbit", "netbook pets rabbit", "computer pets rabbit", "tablet pets rabbit"], "verb_replaced": ["laptop buys rabbit", "laptop owns rabbit", "laptop raises rabbit", "laptop keeps rabbit", "laptop adopts rabbit"], "object_replaced": ["laptop pets bunny", "laptop pets marmot", "laptop pets hare", "laptop pets guinea pig", "laptop pets hamster"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: laptop pets rabbit\n", "AffectedParaphraseMaker_gptoutput": "\n1. Computer critters bunny\n2. Notebook animal hare\n3. Portable computer companion rabbit\n4. Laptop furry friend rabbit\n5. Digital desktop pet rabbit", "affected_paraphrase": ["Computer critters bunny", "Notebook animal hare", "Laptop furry friend rabbit", "Portable computer companion rabbit", "Digital desktop pet rabbit"]}]}
{"inputs": {"id": 1038, "prompt": "a man pulled worm", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "man", "verb": "pulled", "object": "worm", "neg": null, "prompt_polarity_grounded": "A man did not pull worm."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A man did not pull worm.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Worms are not animals that can be pulled. \n2. Animals that can be pulled have legs or tails.", "affected_reasoning": ["Worms are not animals that can be pulled.", "Animals that can be pulled have legs or tails."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a man pulled worm\nsubject token: man\nobject token: worm\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A dog pulled worm\n2. A child pulled worm\n3. A teacher pulled worm\n4. A cat pulled worm\n5. A bird pulled worm\n\nQ2. Replacements:\n1. A man pulled fish\n2. A man pulled apple\n3. A man pulled pencil\n4. A man pulled balloon\n5. A man pulled car", "subject_replaced": ["A dog pulled worm", "A child pulled worm", "A bird pulled worm", "A teacher pulled worm", "A cat pulled worm"], "object_replaced": ["A man pulled pencil", "A man pulled balloon", "A man pulled car", "A man pulled fish", "A man pulled apple"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a man pulled worm\nsubject token: man\nobject token: worm\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A person yanked worm, a human tugged worm, an individual hauled worm, a male dragged worm, a guy pulled worm.\nQ2. A man jerked worm, a man hauled worm, a man tugged worm, a man dragged worm, a man yanked worm.\nQ3. A man pulled larvae, a man pulled grub, a man pulled maggot, a man pulled caterpillar, a man pulled annelid.", "subject_replaced": ["an individual hauled worm", "A person yanked worm", "a guy pulled worm.", "a male dragged worm", "a human tugged worm"], "verb_replaced": ["A man jerked worm", "a man hauled worm", "a man tugged worm", "a man dragged worm", "a man yanked worm."], "object_replaced": ["a man pulled maggot", "a man pulled annelid.", "a man pulled grub", "A man pulled larvae", "a man pulled caterpillar"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a man pulled worm\n", "AffectedParaphraseMaker_gptoutput": "\n1. A male individual extracted a worm.\n2. A person of the male gender yanked out a worm.\n3. A guy tugged a worm.\n4. A man drew out a worm.\n5. A man hauled a worm.", "affected_paraphrase": ["A person of the male gender yanked out a worm.", "A man drew out a worm.", "A man hauled a worm.", "A guy tugged a worm.", "A male individual extracted a worm."]}]}
{"inputs": {"id": 1054, "prompt": "A clown chilled bear", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "clown", "verb": "chilled", "object": "bear", "neg": null, "prompt_polarity_grounded": "A clown did not chill bear."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A clown did not chill bear.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Clowns are not capable of feeling cold.\n2. Bears need to be chilled to stay cool.", "affected_reasoning": ["Clowns are not capable of feeling cold.", "Bears need to be chilled to stay cool."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: A clown chilled bear\nsubject token: clown\nobject token: bear\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A wizard chilled bear\n2. A jester chilled bear\n3. A magician chilled bear\n4. A comedian chilled bear\n5. A harlequin chilled bear\n\nQ2. Replacements:\n1. A clown chilled elephant\n2. A clown chilled lion\n3. A clown chilled tiger\n4. A clown chilled monkey\n5. A clown chilled giraffe", "subject_replaced": ["A wizard chilled bear", "A comedian chilled bear", "A magician chilled bear", "A harlequin chilled bear", "A jester chilled bear"], "object_replaced": ["A clown chilled tiger", "A clown chilled elephant", "A clown chilled lion", "A clown chilled giraffe", "A clown chilled monkey"]}, {}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: A clown chilled bear\n", "AffectedParaphraseMaker_gptoutput": "\n1. A jester-like figure made a polar bear feel cold.\n2. A funnyman caused a bear to become frigid.\n3. A clown caused a bear to become chilled.\n4. A comedian made a bear feel chilly.\n5. A clown made a bear feel cold.", "affected_paraphrase": ["A comedian made a bear feel chilly.", "A jester-like figure made a polar bear feel cold.", "A clown caused a bear to become chilled.", "A clown made a bear feel cold.", "A funnyman caused a bear to become frigid."]}]}
{"inputs": {"id": 1056, "prompt": "air feeds rabbit", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "air", "verb": "feeds", "object": "rabbit", "neg": null, "prompt_polarity_grounded": "Air does not feed rabbit."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Air does not feed rabbit.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Rabbits eat plants. \n2. Air does not contain plants.", "affected_reasoning": ["Rabbits eat plants.", "Air does not contain plants."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: air feeds rabbit\nsubject token: air\nobject token: rabbit\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1.\n1. Water feeds rabbit\n2. Fire feeds rabbit\n3. Wind feeds rabbit\n4. Earth feeds rabbit\n5. Sun feeds rabbit\n\nQ2.\n1. Air feeds cat\n2. Air feeds dog\n3. Air feeds bird\n4. Air feeds fish\n5. Air feeds mouse", "subject_replaced": ["Sun feeds rabbit", "Water feeds rabbit", "Earth feeds rabbit", "Fire feeds rabbit", "Wind feeds rabbit"], "object_replaced": ["Air feeds cat", "Air feeds fish", "Air feeds bird", "Air feeds mouse", "Air feeds dog"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: air feeds rabbit\nsubject token: air\nobject token: rabbit\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Wind feeds rabbit, breeze feeds rabbit, gust feeds rabbit, draft feeds rabbit, zephyr feeds rabbit.\nQ2. Air nourishes rabbit, air sustains rabbit, air nurtures rabbit, air maintains rabbit, air supports rabbit.\nQ3. Air feeds hare, air feeds bunny, air feeds pika, air feeds jackrabbit, air feeds cottontail.", "subject_replaced": ["breeze feeds rabbit", "gust feeds rabbit", "Wind feeds rabbit", "draft feeds rabbit", "zephyr feeds rabbit."], "verb_replaced": ["air nurtures rabbit", "air sustains rabbit", "Air nourishes rabbit", "air supports rabbit.", "air maintains rabbit"], "object_replaced": ["air feeds pika", "air feeds bunny", "Air feeds hare", "air feeds cottontail.", "air feeds jackrabbit"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: air feeds rabbit\n", "AffectedParaphraseMaker_gptoutput": "\n1. The rabbit is nourished by air.\n2. Air is the sustenance of the rabbit.\n3. The rabbit is sustained by air.\n4. Air is the source of nourishment for the rabbit.\n5. Air is what keeps the rabbit alive.", "affected_paraphrase": ["Air is what keeps the rabbit alive.", "Air is the source of nourishment for the rabbit.", "The rabbit is sustained by air.", "The rabbit is nourished by air.", "Air is the sustenance of the rabbit."]}]}
{"inputs": {"id": 1063, "prompt": "and grandma sews paper.", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "grandma", "verb": "sews", "object": "paper", "neg": null, "prompt_polarity_grounded": "and grandma does not sew paper."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "and grandma does not sew paper.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nGrandma does not sew because sewing requires thread and needles, and paper cannot be sewn with thread and needles.", "affected_reasoning": ["Grandma does not sew because sewing requires thread and needles, and paper cannot be sewn with thread and needles."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: and grandma sews paper.\nsubject token: grandma\nobject token: paper\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. and uncle sews paper.\n2. and mom sews paper.\n3. and brother sews paper.\n4. and sister sews paper.\n5. and dad sews paper.\n\nQ2. Replacements:\n1. and grandma sews fabric.\n2. and grandma sews clothes.\n3. and grandma sews buttons.\n4. and grandma sews yarn.\n5. and grandma sews thread.", "subject_replaced": ["and sister sews paper.", "and mom sews paper.", "and dad sews paper.", "and brother sews paper.", "and uncle sews paper."], "object_replaced": ["and grandma sews clothes.", "and grandma sews fabric.", "and grandma sews thread.", "and grandma sews buttons.", "and grandma sews yarn."]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: and grandma sews paper.\nsubject token: grandma\nobject token: paper\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Grandpa sews paper.\nGrandmother sews paper.\nGrandparent sews paper.\nElder sews paper.\nElderly sews paper.\n\nQ2. and grandma stitches paper.\nand grandma mends paper.\nand grandma patches paper.\nand grandma sews up paper.\nand grandma repairs paper.\n\nQ3. and grandma sews fabric.\nand grandma sews cloth.\nand grandma sews material.\nand grandma sews canvas.\nand grandma sews burlap.", "subject_replaced": ["Grandpa sews paper.", "Elder sews paper.", "Grandmother sews paper.", "Grandparent sews paper.", "Elderly sews paper."], "verb_replaced": ["and grandma sews up paper.", "and grandma mends paper.", "and grandma repairs paper.", "and grandma stitches paper.", "and grandma patches paper."], "object_replaced": ["and grandma sews burlap.", "and grandma sews fabric.", "and grandma sews cloth.", "and grandma sews canvas.", "and grandma sews material."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: and grandma sews paper.\n", "AffectedParaphraseMaker_gptoutput": "\n1. Grandma is stitching paper.\n2. Grandma is stitching together paper.\n3. Grandma is stitching paper pieces.\n4. Grandma is sewing paper.\n5. Grandma is piecing together paper.", "affected_paraphrase": ["Grandma is stitching together paper.", "Grandma is piecing together paper.", "Grandma is stitching paper pieces.", "Grandma is stitching paper.", "Grandma is sewing paper."]}]}
{"inputs": {"id": 1070, "prompt": "the child whisks book", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "child", "verb": "whisks", "object": "book", "neg": null, "prompt_polarity_grounded": "The child does not whisk the book."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The child does not whisk the book.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The child cannot whisk the book because books cannot be whisked. \n2. Whisking requires an object that can move through the air, and books are not designed to do this.", "affected_reasoning": ["The child cannot whisk book because books cannot be whisked.", "Whisking requires object that can move through air, and books are not designed to do this."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the child whisks book\nsubject token: child\nobject token: book\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The elephant whisks book\n2. The adult whisks book\n3. The teenager whisks book\n4. The toddler whisks book\n5. The baby whisks book\n\nQ2. Replacements:\n1. The child whisks pencil\n2. The child whisks chair\n3. The child whisks toy\n4. The child whisks blanket\n5. The child whisks cup", "subject_replaced": ["The adult whisks book", "The baby whisks book", "The toddler whisks book", "The elephant whisks book", "The teenager whisks book"], "object_replaced": ["The child whisks blanket", "The child whisks toy", "The child whisks cup", "The child whisks chair", "The child whisks pencil"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the child whisks book\nsubject token: child\nobject token: book\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The toddler whisks book, the infant whisks book, the youngster whisks book, the juvenile whisks book, the kid whisks book.\nQ2. The child whips book, the child stirs book, the child beats book, the child flicks book, the child flings book.\nQ3. The child whisks volume, the child whisks tome, the child whisks pamphlet, the child whisks novel, the child whisks manual.", "subject_replaced": ["the kid whisks book.", "The toddler whisks book", "the youngster whisks book", "the juvenile whisks book", "the infant whisks book"], "verb_replaced": ["the child stirs book", "the child flicks book", "the child flings book.", "The child whips book", "the child beats book"], "object_replaced": ["the child whisks manual.", "The child whisks volume", "the child whisks pamphlet", "the child whisks tome", "the child whisks novel"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the child whisks book\n", "AffectedParaphraseMaker_gptoutput": "\n1. The tome of the kid whisperer\n2. The volume of the juvenile soother\n3. The manual of the child charmer\n4. The guide of the infant pacifier\n5. The compendium of the infant calmer", "affected_paraphrase": ["The tome of the kid whisperer", "The volume of the juvenile soother", "The manual of the child charmer", "The guide of the infant pacifier", "The compendium of the infant calmer"]}]}
{"inputs": {"id": 1074, "prompt": "a rock breaks pebbles", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "rock", "verb": "breaks", "object": "pebbles", "neg": null, "prompt_polarity_grounded": "a rock breaks pebbles"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a rock breaks pebbles. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nRock is harder than pebbles, so when it comes into contact with them, it exerts more force. This force is enough to break the pebbles.", "affected_reasoning": ["Rock is harder than pebbles, so when it comes into contact with them, it exerts more force", "This force is enough to break pebbles."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a rock breaks pebbles\nsubject token: rock\nobject token: pebbles\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a tree breaks pebbles\n2. a car breaks pebbles\n3. a dog breaks pebbles\n4. a house breaks pebbles\n5. a cloud breaks pebbles\n\nQ2. Replacements:\n1. a rock breaks stones\n2. a rock breaks apples\n3. a rock breaks books\n4. a rock breaks chairs\n5. a rock breaks balloons", "subject_replaced": ["a dog breaks pebbles", "a car breaks pebbles", "a cloud breaks pebbles", "a house breaks pebbles", "a tree breaks pebbles"], "object_replaced": ["a rock breaks stones", "a rock breaks balloons", "a rock breaks chairs", "a rock breaks books", "a rock breaks apples"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a rock breaks pebbles\nsubject token: rock\nobject token: pebbles\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A boulder shatters pebbles, A stone smashes pebbles, A rock crushes pebbles, A rock pulverizes pebbles, A rock fragments pebbles.\n\nQ2. A rock breaks apart pebbles, A rock demolishes pebbles, A rock shatters pebbles, A rock pulverizes pebbles, A rock fragments pebbles.\n\nQ3. A rock breaks gravel, A rock breaks shards, A rock breaks chips, A rock breaks fragments, A rock breaks stones.", "subject_replaced": ["A boulder shatters pebbles", "A rock pulverizes pebbles", "A stone smashes pebbles", "A rock fragments pebbles.", "A rock crushes pebbles"], "verb_replaced": ["A rock pulverizes pebbles", "A rock fragments pebbles.", "A rock demolishes pebbles", "A rock breaks apart pebbles", "A rock shatters pebbles"], "object_replaced": ["A rock breaks shards", "A rock breaks chips", "A rock breaks stones.", "A rock breaks fragments", "A rock breaks gravel"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a rock breaks pebbles\n", "AffectedParaphraseMaker_gptoutput": "\n1. A boulder shatters small stones.\n2. A large stone crushes tiny stones.\n3. A rock pulverizes pebbles.\n4. A stone disintegrates gravel.\n5. A boulder pulverizes fragments.", "affected_paraphrase": ["A stone disintegrates gravel.", "A boulder shatters small stones.", "A boulder pulverizes fragments.", "A large stone crushes tiny stones.", "A rock pulverizes pebbles."]}]}
{"inputs": {"id": 1082, "prompt": "A brother heaved paper", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "brother", "verb": "heaved", "object": "paper", "neg": null, "prompt_polarity_grounded": "A brother did not heave paper."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A brother did not heave paper.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Brothers don't have paper. \n2. Paper is not alive.", "affected_reasoning": ["Brothers don't have paper.", "Paper is not alive."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: A brother heaved paper\nsubject token: brother\nobject token: paper\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A cat heaved paper\n2. A teacher heaved paper\n3. A student heaved paper\n4. A parent heaved paper\n5. A friend heaved paper\n\nQ2. Replacements:\n1. A brother heaved pencil\n2. A brother heaved book\n3. A brother heaved rock\n4. A brother heaved chair\n5. A brother heaved toy", "subject_replaced": ["A friend heaved paper", "A student heaved paper", "A cat heaved paper", "A teacher heaved paper", "A parent heaved paper"], "object_replaced": ["A brother heaved pencil", "A brother heaved book", "A brother heaved toy", "A brother heaved chair", "A brother heaved rock"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: A brother heaved paper\nsubject token: brother\nobject token: paper\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A sibling heaved paper, A cousin heaved paper, A nephew heaved paper, A relative heaved paper, A kin heaved paper.\n\nQ2. A brother tossed paper, A brother flung paper, A brother hurled paper, A brother lobbed paper, A brother pitched paper.\n\nQ3. A brother heaved parchment, A brother heaved cardstock, A brother heaved newsprint, A brother heaved stationery, A brother heaved wrapping paper.", "subject_replaced": ["A cousin heaved paper", "A relative heaved paper", "A nephew heaved paper", "A sibling heaved paper", "A kin heaved paper."], "verb_replaced": ["A brother pitched paper.", "A brother flung paper", "A brother tossed paper", "A brother hurled paper", "A brother lobbed paper"], "object_replaced": ["A brother heaved newsprint", "A brother heaved cardstock", "A brother heaved parchment", "A brother heaved wrapping paper.", "A brother heaved stationery"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: A brother heaved paper\n", "AffectedParaphraseMaker_gptoutput": "\n1. A sibling lifted up paper\n2. A brother lifted up paper\n3. A brother hoisted paper\n4. A brother raised paper\n5. A brother threw paper", "affected_paraphrase": ["A brother raised paper", "A brother threw paper", "A brother hoisted paper", "A brother lifted up paper", "A sibling lifted up paper"]}]}
{"inputs": {"id": 1105, "prompt": "a fist punches dumbbell", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "fist", "verb": "punches", "object": "dumbbell", "neg": null, "prompt_polarity_grounded": "a fist punches dumbbell"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a fist punches dumbbell. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Arm moves forward.\n2. Fist hits dumbbell.", "affected_reasoning": ["Arm moves forward.", "Fist hits dumbbell."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a fist punches dumbbell\nsubject token: fist\nobject token: dumbbell\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a hand claps drum\n2. a foot kicks guitar\n3. a knee slams cymbal\n4. an elbow strikes triangle\n5. a shoulder jabs harmonica\n\nQ2. Replacements:\n1. a fist strikes kettlebell\n2. a fist smashes barbell\n3. a fist bashes medicine ball\n4. a fist whacks sandbag\n5. a fist slams jump rope", "subject_replaced": ["a shoulder jabs harmonica", "a foot kicks guitar", "a hand claps drum", "an elbow strikes triangle", "a knee slams cymbal"], "object_replaced": ["a fist slams jump rope", "a fist smashes barbell", "a fist whacks sandbag", "a fist bashes medicine ball", "a fist strikes kettlebell"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a fist punches dumbbell\nsubject token: fist\nobject token: dumbbell\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A hand punches dumbbell, a palm strikes dumbbell, a knuckle hits dumbbell, a punch jabs dumbbell, a jab strikes dumbbell.\n\nQ2. A fist smashes dumbbell, a fist slams dumbbell, a fist strikes dumbbell, a fist hammers dumbbell, a fist whacks dumbbell.\n\nQ3. A fist punches weight, a fist punches barbell, a fist punches kettlebell, a fist punches medicine ball, a fist punches sandbag.", "subject_replaced": ["a jab strikes dumbbell.", "A hand punches dumbbell", "a palm strikes dumbbell", "a knuckle hits dumbbell", "a punch jabs dumbbell"], "verb_replaced": ["a fist strikes dumbbell", "a fist whacks dumbbell.", "A fist smashes dumbbell", "a fist hammers dumbbell", "a fist slams dumbbell"], "object_replaced": ["a fist punches sandbag.", "a fist punches barbell", "a fist punches medicine ball", "A fist punches weight", "a fist punches kettlebell"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a fist punches dumbbell\n", "AffectedParaphraseMaker_gptoutput": "\n1. A clenched hand strikes a weight.\n2. A clenched fist strikes a free weight.\n3. A clenched hand strikes a barbell.\n4. A clenched fist hits a weight.\n5. A clenched hand smacks a dumbbell.", "affected_paraphrase": ["A clenched fist strikes a free weight.", "A clenched hand smacks a dumbbell.", "A clenched fist hits a weight.", "A clenched hand strikes a weight.", "A clenched hand strikes a barbell."]}]}
{"inputs": {"id": 1109, "prompt": "a wolf licked frosting", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "wolf", "verb": "licked", "object": "frosting", "neg": null, "prompt_polarity_grounded": "a wolf licked frosting"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a wolf licked frosting. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The wolf was hungry.\n2. It saw the frosting and wanted to eat it.", "affected_reasoning": ["The wolf was hungry.", "It saw frosting and wanted to eat it."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a wolf licked frosting\nsubject token: wolf\nobject token: frosting\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A bear licked frosting\n2. A lion licked frosting\n3. A fox licked frosting\n4. A dog licked frosting\n5. A rabbit licked frosting\n\nQ2. Replacements:\n1. A wolf licked paint\n2. A wolf licked ice\n3. A wolf licked sugar\n4. A wolf licked syrup\n5. A wolf licked chocolate", "subject_replaced": ["A dog licked frosting", "A lion licked frosting", "A rabbit licked frosting", "A fox licked frosting", "A bear licked frosting"], "object_replaced": ["A wolf licked ice", "A wolf licked paint", "A wolf licked syrup", "A wolf licked chocolate", "A wolf licked sugar"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a wolf licked frosting\nsubject token: wolf\nobject token: frosting\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A canine licked frosting, a coyote licked frosting, a fox licked frosting, a jackal licked frosting, a dingo licked frosting.\nQ2. A wolf smeared frosting, a wolf spread frosting, a wolf daubed frosting, a wolf dotted frosting, a wolf smudged frosting.\nQ3. A wolf licked icing, a wolf licked glaze, a wolf licked topping, a wolf licked ganache, a wolf licked cream cheese.", "subject_replaced": ["a fox licked frosting", "a jackal licked frosting", "a dingo licked frosting.", "A canine licked frosting", "a coyote licked frosting"], "verb_replaced": ["a wolf dotted frosting", "a wolf daubed frosting", "a wolf smudged frosting.", "a wolf spread frosting", "A wolf smeared frosting"], "object_replaced": ["A wolf licked icing", "a wolf licked glaze", "a wolf licked ganache", "a wolf licked topping", "a wolf licked cream cheese."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a wolf licked frosting\n", "AffectedParaphraseMaker_gptoutput": "\n1. A wolf gave a lick to the icing.\n2. A wolf tasted the topping.\n3. A wolf savored the frosting.\n4. A wolf sampled the sugary topping.\n5. A wolf enjoyed the sweet glaze.", "affected_paraphrase": ["A wolf enjoyed the sweet glaze.", "A wolf sampled the sugary topping.", "A wolf tasted the topping.", "A wolf gave a lick to the icing.", "A wolf savored the frosting."]}]}
{"inputs": {"id": 1111, "prompt": "ant kisses fish", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "ant", "verb": "kisses", "object": "fish", "neg": null, "prompt_polarity_grounded": "Ant does not kiss fish."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Ant does not kiss fish.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Ants do not have lips. \n2. Fish cannot kiss without lips.", "affected_reasoning": ["Ants do not have lips.", "Fish cannot kiss without lips."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: ant kisses fish\nsubject token: ant\nobject token: fish\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant kisses fish\n2. Tiger kisses fish\n3. Monkey kisses fish\n4. Giraffe kisses fish\n5. Lion kisses fish\n\nQ2. Replacements:\n1. Ant kisses bird\n2. Ant kisses rabbit\n3. Ant kisses mouse\n4. Ant kisses squirrel\n5. Ant kisses frog", "subject_replaced": ["Giraffe kisses fish", "Elephant kisses fish", "Lion kisses fish", "Tiger kisses fish", "Monkey kisses fish"], "object_replaced": ["Ant kisses squirrel", "Ant kisses mouse", "Ant kisses bird", "Ant kisses frog", "Ant kisses rabbit"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: ant kisses fish\nsubject token: ant\nobject token: fish\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Beetle kisses fish, Spider kisses fish, Insect kisses fish, Larva kisses fish, Grub kisses fish.\nQ2. Ant caresses fish, Ant embraces fish, Ant strokes fish, Ant cuddles fish, Ant nuzzles fish.\nQ3. Ant kisses trout, Ant kisses salmon, Ant kisses eel, Ant kisses pike, Ant kisses carp.", "subject_replaced": ["Beetle kisses fish", "Larva kisses fish", "Grub kisses fish.", "Insect kisses fish", "Spider kisses fish"], "verb_replaced": ["Ant strokes fish", "Ant cuddles fish", "Ant nuzzles fish.", "Ant embraces fish", "Ant caresses fish"], "object_replaced": ["Ant kisses pike", "Ant kisses carp.", "Ant kisses salmon", "Ant kisses eel", "Ant kisses trout"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: ant kisses fish\n", "AffectedParaphraseMaker_gptoutput": "\n1. An ant bestows affection upon a fish.\n2. A fish is the recipient of an ant's affections.\n3. A fish is the object of an ant's love.\n4. An ant expresses its love for a fish.\n5. A fish is the target of an ant's smooches.", "affected_paraphrase": ["A fish is the recipient of an ant's affections.", "A fish is the target of an ant's smooches.", "A fish is the object of an ant's love.", "An ant expresses its love for a fish.", "An ant bestows affection upon a fish."]}]}
{"inputs": {"id": 1114, "prompt": "Beaver builds computer", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Beaver", "verb": "builds", "object": "computer", "neg": null, "prompt_polarity_grounded": "Beaver does not build computer."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Beaver does not build computer.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Beaver is an animal. \n2. Animals do not build computers.", "affected_reasoning": ["Beaver is animal.", "Animals do not build computers."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Beaver builds computer\nsubject token: Beaver\nobject token: computer\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant builds computer\n2. Giraffe builds computer\n3. Tiger builds computer\n4. Lion builds computer\n5. Monkey builds computer\n\nQ2. Replacements:\n1. Beaver builds television\n2. Beaver builds radio\n3. Beaver builds phone\n4. Beaver builds refrigerator\n5. Beaver builds oven", "subject_replaced": ["Monkey builds computer", "Tiger builds computer", "Lion builds computer", "Elephant builds computer", "Giraffe builds computer"], "object_replaced": ["Beaver builds radio", "Beaver builds refrigerator", "Beaver builds oven", "Beaver builds phone", "Beaver builds television"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Beaver builds computer\nsubject token: Beaver\nobject token: computer\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Muskrat constructs computer\n2. Otter fabricates computer\n3. Marmot assembles computer\n4. Rat builds computer\n5. Chipmunk manufactures computer\n\nQ2.\n1. Beaver creates computer\n2. Beaver designs computer\n3. Beaver constructs computer\n4. Beaver fabricates computer\n5. Beaver assembles computer\n\nQ3.\n1. Beaver builds laptop\n2. Beaver builds tablet\n3. Beaver builds device\n4. Beaver builds gadget\n5. Beaver builds machine", "subject_replaced": ["Rat builds computer", "Muskrat constructs computer", "Chipmunk manufactures computer", "Marmot assembles computer", "Otter fabricates computer"], "verb_replaced": ["Beaver fabricates computer", "Beaver assembles computer", "Beaver designs computer", "Beaver creates computer", "Beaver constructs computer"], "object_replaced": ["Beaver builds device", "Beaver builds tablet", "Beaver builds gadget", "Beaver builds machine", "Beaver builds laptop"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Beaver builds computer\n", "AffectedParaphraseMaker_gptoutput": "\n1. The beaver constructs a computer.\n2. The beaver is constructing a computer.\n3. The beaver is putting together a computer.\n4. The beaver is assembling a computer.\n5. The beaver is fabricating a computer.", "affected_paraphrase": ["The beaver is assembling a computer.", "The beaver is constructing a computer.", "The beaver constructs a computer.", "The beaver is fabricating a computer.", "The beaver is putting together a computer."]}]}
{"inputs": {"id": 1125, "prompt": "air cools skyscraper", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "air", "verb": "cools", "object": "skyscraper", "neg": null, "prompt_polarity_grounded": "air cools skyscraper"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "air cools skyscraper. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Skyscraper absorbs heat from the sun.\n2. Air cools the skyscraper by absorbing the heat.", "affected_reasoning": ["Skyscraper absorbs heat from sun.", "Air cools skyscraper by absorbing heat."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: air cools skyscraper\nsubject token: air\nobject token: skyscraper\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "1. Text: balloon cools skyscraper\n2. Text: wind cools skyscraper\n3. Text: ocean cools skyscraper\n4. Text: sun cools skyscraper\n5. Text: rain cools skyscraper\n\n1. Text: air cools castle\n2. Text: air cools mountain\n3. Text: air cools tree\n4. Text: air cools lake\n5. Text: air cools beach", "subject_replaced": ["balloon cools skyscraper", "rain cools skyscraper", "sun cools skyscraper", "wind cools skyscraper", "ocean cools skyscraper"], "object_replaced": ["air cools castle", "air cools tree", "air cools lake", "air cools mountain", "air cools beach"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: air cools skyscraper\nsubject token: air\nobject token: skyscraper\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Wind cools skyscraper, Breeze cools skyscraper, Gust cools skyscraper, Zephyr cools skyscraper, Draft cools skyscraper.\n\nQ2. Air chills skyscraper, Air refreshes skyscraper, Air cools down skyscraper, Air moderates skyscraper, Air moderates skyscraper.\n\nQ3. Air cools building, Air cools tower, Air cools edifice, Air cools structure, Air cools high-rise.", "subject_replaced": ["Wind cools skyscraper", "Gust cools skyscraper", "Breeze cools skyscraper", "Zephyr cools skyscraper", "Draft cools skyscraper."], "verb_replaced": ["Air moderates skyscraper.", "Air cools down skyscraper", "Air moderates skyscraper", "Air chills skyscraper", "Air refreshes skyscraper"], "object_replaced": ["Air cools tower", "Air cools high-rise.", "Air cools building", "Air cools structure", "Air cools edifice"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: air cools skyscraper\n", "AffectedParaphraseMaker_gptoutput": "\n1. The air temperature reduces the heat of the tall building.\n2. The air helps to lower the temperature of the high-rise.\n3. The air brings down the heat of the skyscraper.\n4. The air brings the temperature of the tall structure down.\n5. The air reduces the temperature of the skyscraper.", "affected_paraphrase": ["The air reduces the temperature of the skyscraper.", "The air temperature reduces the heat of the tall building.", "The air brings the temperature of the tall structure down.", "The air helps to lower the temperature of the high-rise.", "The air brings down the heat of the skyscraper."]}]}
{"inputs": {"id": 1127, "prompt": "crane lifts paper", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "crane", "verb": "lifts", "object": "paper", "neg": null, "prompt_polarity_grounded": "Crane does not lift paper."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Crane does not lift paper.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Cranes are designed to lift heavy objects. \n2. Paper is too light to be lifted by a crane.", "affected_reasoning": ["Cranes are designed to lift heavy objects.", "Paper is too light to be lifted by crane."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: crane lifts paper\nsubject token: crane\nobject token: paper\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant lifts paper\n2. Cat lifts paper\n3. Dog lifts paper\n4. Fish lifts paper\n5. Bird lifts paper\n\nQ2. Replacements:\n1. Crane lifts rock\n2. Crane lifts pencil\n3. Crane lifts book\n4. Crane lifts chair\n5. Crane lifts box", "subject_replaced": ["Cat lifts paper", "Bird lifts paper", "Dog lifts paper", "Elephant lifts paper", "Fish lifts paper"], "object_replaced": ["Crane lifts rock", "Crane lifts chair", "Crane lifts box", "Crane lifts book", "Crane lifts pencil"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: crane lifts paper\nsubject token: crane\nobject token: paper\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Pulley lifts paper, Winch lifts paper, Hoist lifts paper, Derrick lifts paper, Gantry lifts paper.\nQ2. Crane hoists paper, Crane raises paper, Crane elevates paper, Crane heaves paper, Crane hauls paper.\nQ3. Crane lifts document, Crane lifts envelope, Crane lifts card, Crane lifts sheet, Crane lifts booklet.", "subject_replaced": ["Pulley lifts paper", "Gantry lifts paper.", "Winch lifts paper", "Hoist lifts paper", "Derrick lifts paper"], "verb_replaced": ["Crane hauls paper.", "Crane hoists paper", "Crane raises paper", "Crane elevates paper", "Crane heaves paper"], "object_replaced": ["Crane lifts card", "Crane lifts envelope", "Crane lifts sheet", "Crane lifts document", "Crane lifts booklet."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: crane lifts paper\n", "AffectedParaphraseMaker_gptoutput": "\n1. A crane hoists up the paper.\n2. The crane is used to raise the paper.\n3. The crane is employed to elevate the paper.\n4. The crane is utilized to lift the paper.\n5. The crane is utilized to raise the paper.", "affected_paraphrase": ["The crane is utilized to raise the paper.", "The crane is employed to elevate the paper.", "The crane is used to raise the paper.", "A crane hoists up the paper.", "The crane is utilized to lift the paper."]}]}
{"inputs": {"id": 1129, "prompt": "Chef closes leaf.", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Chef", "verb": "closes", "object": "leaf", "neg": null, "prompt_polarity_grounded": "Chef does not close leaf."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Chef does not close leaf.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Chef is a tool for automating infrastructure, not a leaf. \n2. Leaf is a type of network switch, not something Chef can control.", "affected_reasoning": ["Chef is tool for automating infrastructure, not leaf.", "Leaf is type of network switch, not something Chef can control."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Chef closes leaf.\nsubject token: Chef\nobject token: leaf\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Teacher closes leaf.\n2. Pilot closes leaf.\n3. Artist closes leaf.\n4. Musician closes leaf.\n5. Scientist closes leaf.\n\nQ2. Replacements:\n1. Chef closes tree.\n2. Chef closes mountain.\n3. Chef closes ocean.\n4. Chef closes sky.\n5. Chef closes star.", "subject_replaced": ["Artist closes leaf.", "Musician closes leaf.", "Scientist closes leaf.", "Teacher closes leaf.", "Pilot closes leaf."], "object_replaced": ["Chef closes sky.", "Chef closes ocean.", "Chef closes star.", "Chef closes tree.", "Chef closes mountain."]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Chef closes leaf.\nsubject token: Chef\nobject token: leaf\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Cook shuts leaf.\nBaker seals leaf.\nGardener prunes leaf.\nFarmer clips leaf.\nButcher trims leaf.\n\nQ2. Chef locks leaf.\nChef seals leaf.\nChef fastens leaf.\nChef secures leaf.\nChef binds leaf.\n\nQ3. Chef closes petal.\nChef shuts bud.\nChef seals blossom.\nChef fastens flower.\nChef secures twig.", "subject_replaced": ["Cook shuts leaf.", "Farmer clips leaf.", "Gardener prunes leaf.", "Butcher trims leaf.", "Baker seals leaf."], "verb_replaced": ["Chef fastens leaf.", "Chef binds leaf.", "Chef locks leaf.", "Chef secures leaf.", "Chef seals leaf."], "object_replaced": ["Chef shuts bud.", "Chef seals blossom.", "Chef secures twig.", "Chef fastens flower.", "Chef closes petal."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Chef closes leaf.\n", "AffectedParaphraseMaker_gptoutput": "\n1. The cook shut the door.\n2. The chef shut the leaf.\n3. The cook sealed the leaf.\n4. The chef sealed the door.\n5. The cook closed the leaf.", "affected_paraphrase": ["The chef sealed the door.", "The cook shut the door.", "The cook sealed the leaf.", "The chef shut the leaf.", "The cook closed the leaf."]}]}
{"inputs": {"id": 1136, "prompt": "Crab moves gorilla", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Crab", "verb": "moves", "object": "gorilla", "neg": null, "prompt_polarity_grounded": "Crab does not move gorilla."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Crab does not move gorilla.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Crabs cannot move like gorillas because crabs are aquatic animals and gorillas are land animals.\n2. Gorillas move by walking on two legs, while crabs move by crawling on their legs.", "affected_reasoning": ["Crabs cannot move like gorillas because crabs are aquatic animals and gorillas are land animals.", "Gorillas move by walking on two legs, while crabs move by crawling on their legs."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Crab moves gorilla\nsubject token: Crab\nobject token: gorilla\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant moves gorilla\n2. Tiger moves gorilla\n3. Lion moves gorilla\n4. Fox moves gorilla\n5. Wolf moves gorilla\n\nQ2. Replacements:\n1. Crab moves monkey\n2. Crab moves parrot\n3. Crab moves bear\n4. Crab moves snake\n5. Crab moves bird", "subject_replaced": ["Lion moves gorilla", "Wolf moves gorilla", "Tiger moves gorilla", "Elephant moves gorilla", "Fox moves gorilla"], "object_replaced": ["Crab moves monkey", "Crab moves bear", "Crab moves snake", "Crab moves bird", "Crab moves parrot"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Crab moves gorilla\nsubject token: Crab\nobject token: gorilla\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Lobster moves gorilla, Crayfish moves gorilla, Shrimp moves gorilla, Prawn moves gorilla, Crawfish moves gorilla.\nQ2. Crab scurries gorilla, Crab strides gorilla, Crab ambles gorilla, Crab strides gorilla, Crab shuffles gorilla.\nQ3. Crab moves ape, Crab moves primate, Crab moves monkey, Crab moves simian, Crab moves chimpanzee.", "subject_replaced": ["Prawn moves gorilla", "Crawfish moves gorilla.", "Crayfish moves gorilla", "Shrimp moves gorilla", "Lobster moves gorilla"], "verb_replaced": ["Crab shuffles gorilla.", "Crab scurries gorilla", "Crab ambles gorilla", "Crab strides gorilla"], "object_replaced": ["Crab moves ape", "Crab moves monkey", "Crab moves simian", "Crab moves primate", "Crab moves chimpanzee."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Crab moves gorilla\n", "AffectedParaphraseMaker_gptoutput": "\n1. The crab scuttles away from the gorilla.\n2. The crab scurries away from the gorilla.\n3. The crab hastens away from the gorilla.\n4. The crab flees from the gorilla.\n5. The crab retreats from the gorilla.", "affected_paraphrase": ["The crab hastens away from the gorilla.", "The crab flees from the gorilla.", "The crab scurries away from the gorilla.", "The crab scuttles away from the gorilla.", "The crab retreats from the gorilla."]}]}
{"inputs": {"id": 1137, "prompt": "Table vents gas", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Table", "verb": "vents", "object": "gas", "neg": null, "prompt_polarity_grounded": "Table does not vent gas."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Table does not vent gas.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Tables are not designed to vent gas. \n2. Therefore, tables do not vent gas.", "affected_reasoning": ["Tables are not designed to vent gas.", "Therefore, tables do not vent gas."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Table vents gas\nsubject token: Table\nobject token: gas\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Text: Chair vents gas\n2. Text: Pencil vents gas\n3. Text: Lamp vents gas\n4. Text: Book vents gas\n5. Text: Clock vents gas\n\nQ2. Replacements:\n1. Text: Table vents water\n2. Text: Table vents air\n3. Text: Table vents fire\n4. Text: Table vents earth\n5. Text: Table vents wind", "subject_replaced": ["Book vents gas", "Chair vents gas", "Pencil vents gas", "Clock vents gas", "Lamp vents gas"], "object_replaced": ["Table vents earth", "Table vents fire", "Table vents air", "Table vents water", "Table vents wind"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Table vents gas\nsubject token: Table\nobject token: gas\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Desk vents gas\n2. Furniture vents gas\n3. Counter vents gas\n4. Shelf vents gas\n5. Cabinet vents gas\n\nQ2.\n1. Table emits gas\n2. Table releases gas\n3. Table expels gas\n4. Table vents out gas\n5. Table discharges gas\n\nQ3.\n1. Table vents air\n2. Table vents oxygen\n3. Table vents nitrogen\n4. Table vents propane\n5. Table vents methane", "subject_replaced": ["Cabinet vents gas", "Desk vents gas", "Shelf vents gas", "Counter vents gas", "Furniture vents gas"], "verb_replaced": ["Table expels gas", "Table vents out gas", "Table emits gas", "Table releases gas", "Table discharges gas"], "object_replaced": ["Table vents nitrogen", "Table vents oxygen", "Table vents propane", "Table vents air", "Table vents methane"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Table vents gas\n", "AffectedParaphraseMaker_gptoutput": "\n1. Furniture that releases air\n2. Furnishings that expel air\n3. Pieces of equipment that ventilate\n4. Pieces of furniture that ventilate\n5. Furniture that expels gas", "affected_paraphrase": ["Pieces of furniture that ventilate", "Furnishings that expel air", "Furniture that releases air", "Pieces of equipment that ventilate", "Furniture that expels gas"]}]}
{"inputs": {"id": 1140, "prompt": "a chef films cake", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "chef", "verb": "films", "object": "cake", "neg": null, "prompt_polarity_grounded": "a chef films cake"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a chef films cake. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Chef needs to film cake to show how to make it.\n2. Filming cake will help viewers learn how to make it.", "affected_reasoning": ["Chef needs to film cake to show how to make it.", "Filming cake will help viewers learn how to make it."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a chef films cake\nsubject token: chef\nobject token: cake\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a doctor films cake\n2. a teacher films cake\n3. a dancer films cake\n4. a musician films cake\n5. an actor films cake\n\nQ2. Replacements:\n1. a chef films pizza\n2. a chef films ice cream\n3. a chef films cookies\n4. a chef films candy\n5. a chef films donuts", "subject_replaced": ["a doctor films cake", "a teacher films cake", "an actor films cake", "a musician films cake", "a dancer films cake"], "object_replaced": ["a chef films pizza", "a chef films ice cream", "a chef films donuts", "a chef films cookies", "a chef films candy"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a chef films cake\nsubject token: chef\nobject token: cake\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A cook films cake, a baker films cake, a pastry chef films cake, a sous chef films cake, a kitchen chef films cake.\nQ2. A chef shoots cake, a chef records cake, a chef captures cake, a chef films cake, a chef videotapes cake.\nQ3. A chef films pie, a chef films cupcake, a chef films tart, a chef films muffin, a chef films brownie.", "subject_replaced": ["a kitchen chef films cake.", "a pastry chef films cake", "A cook films cake", "a baker films cake", "a sous chef films cake"], "verb_replaced": ["A chef shoots cake", "a chef records cake", "a chef captures cake", "a chef films cake", "a chef videotapes cake."], "object_replaced": ["a chef films muffin", "A chef films pie", "a chef films cupcake", "a chef films brownie.", "a chef films tart"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a chef films cake\n", "AffectedParaphraseMaker_gptoutput": "\n1. A cook records a dessert on camera\n2. A culinary expert shoots a cake on film\n3. A kitchen master captures a cake on film\n4. A gourmet records a cake on video\n5. A culinary artist films a cake", "affected_paraphrase": ["A kitchen master captures a cake on film", "A culinary expert shoots a cake on film", "A cook records a dessert on camera", "A gourmet records a cake on video", "A culinary artist films a cake"]}]}
{"inputs": {"id": 1141, "prompt": "Bottle ejects gas", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Bottle", "verb": "ejects", "object": "gas", "neg": null, "prompt_polarity_grounded": "Bottle does not eject gas."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Bottle does not eject gas.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Gas is not flowing into the bottle. \n2. Therefore, the bottle cannot eject gas.", "affected_reasoning": ["Gas is not flowing into bottle.", "Therefore, bottle cannot eject gas."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Bottle ejects gas\nsubject token: Bottle\nobject token: gas\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hammer ejects gas\n2. Car ejects gas\n3. Pencil ejects gas\n4. Clock ejects gas\n5. Chair ejects gas\n\nQ2. Replacements:\n1. Bottle ejects water\n2. Bottle ejects smoke\n3. Bottle ejects dust\n4. Bottle ejects fire\n5. Bottle ejects air", "subject_replaced": ["Clock ejects gas", "Chair ejects gas", "Pencil ejects gas", "Hammer ejects gas", "Car ejects gas"], "object_replaced": ["Bottle ejects air", "Bottle ejects water", "Bottle ejects dust", "Bottle ejects fire", "Bottle ejects smoke"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Bottle ejects gas\nsubject token: Bottle\nobject token: gas\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Flask ejects gas, Container ejects gas, Vessel ejects gas, Jar ejects gas, Tank ejects gas\nQ2. Bottle discharges gas, Bottle releases gas, Bottle expels gas, Bottle vents gas, Bottle emits gas\nQ3. Bottle ejects vapour, Bottle ejects fumes, Bottle ejects air, Bottle ejects oxygen, Bottle ejects nitrogen", "subject_replaced": ["Jar ejects gas", "Container ejects gas", "Tank ejects gas", "Flask ejects gas", "Vessel ejects gas"], "verb_replaced": ["Bottle vents gas", "Bottle emits gas", "Bottle expels gas", "Bottle discharges gas", "Bottle releases gas"], "object_replaced": ["Bottle ejects nitrogen", "Bottle ejects fumes", "Bottle ejects vapour", "Bottle ejects air", "Bottle ejects oxygen"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Bottle ejects gas\n", "AffectedParaphraseMaker_gptoutput": "\n1. Container releases vapor\n2. Flask expels air\n3. Flask emits gas\n4. Vessel discharges vapor\n5. Flask vents gas", "affected_paraphrase": ["Flask emits gas", "Flask expels air", "Flask vents gas", "Vessel discharges vapor", "Container releases vapor"]}]}
{"inputs": {"id": 1144, "prompt": "a man swallows pill", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "man", "verb": "swallows", "object": "pill", "neg": null, "prompt_polarity_grounded": "a man swallows pill"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a man swallows pill. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pill enters stomach. \n2. Stomach acid breaks down pill.", "affected_reasoning": ["Pill enters stomach.", "Stomach acid breaks down pill."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a man swallows pill\nsubject token: man\nobject token: pill\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A dog swallows pill\n2. A tree swallows pill\n3. A cat swallows pill\n4. A bird swallows pill\n5. A fish swallows pill\n\nQ2. Replacements:\n1. A man swallows pencil\n2. A man swallows book\n3. A man swallows apple\n4. A man swallows chair\n5. A man swallows car", "subject_replaced": ["A tree swallows pill", "A cat swallows pill", "A fish swallows pill", "A bird swallows pill", "A dog swallows pill"], "object_replaced": ["A man swallows car", "A man swallows pencil", "A man swallows book", "A man swallows apple", "A man swallows chair"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a man swallows pill\nsubject token: man\nobject token: pill\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A person swallows pill, An individual swallows pill, A human swallows pill, A male swallows pill, A man swallows capsule.\nQ2. A man gulps pill, A man ingests pill, A man devours pill, A man consumes pill, A man swallows tablet.\nQ3. A man swallows capsule, A man swallows tablet, A man swallows medication, A man swallows medicine, A man swallows drug.", "subject_replaced": ["A person swallows pill", "A male swallows pill", "A man swallows capsule.", "An individual swallows pill", "A human swallows pill"], "verb_replaced": ["A man ingests pill", "A man swallows tablet.", "A man consumes pill", "A man gulps pill", "A man devours pill"], "object_replaced": ["A man swallows medication", "A man swallows capsule", "A man swallows medicine", "A man swallows tablet", "A man swallows drug."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a man swallows pill\n", "AffectedParaphraseMaker_gptoutput": "\n1. The male ingested a capsule.\n2. The man gulped down a tablet.\n3. He consumed a pill.\n4. The guy swallowed a medication.\n5. He ingested a pill.", "affected_paraphrase": ["The male ingested a capsule.", "He consumed a pill.", "The guy swallowed a medication.", "He ingested a pill.", "The man gulped down a tablet."]}]}
{"inputs": {"id": 1149, "prompt": "mud cleans room", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "mud", "verb": "cleans", "object": "room", "neg": null, "prompt_polarity_grounded": "Mud does not clean room."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Mud does not clean room.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Mud is a substance made of dirt and water. \n2. Dirt does not clean a room.", "affected_reasoning": ["Mud is substance made of dirt and water.", "Dirt does not clean room."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: mud cleans room\nsubject token: mud\nobject token: room\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Sun cleans room\n2. Wind cleans room\n3. Rain cleans room\n4. Snow cleans room\n5. Stars cleans room\n\nQ2. Replacements:\n1. Mud cleans kitchen\n2. Mud cleans garden\n3. Mud cleans house\n4. Mud cleans car\n5. Mud cleans beach", "subject_replaced": ["Wind cleans room", "Snow cleans room", "Stars cleans room", "Rain cleans room", "Sun cleans room"], "object_replaced": ["Mud cleans garden", "Mud cleans car", "Mud cleans beach", "Mud cleans kitchen", "Mud cleans house"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: mud cleans room\nsubject token: mud\nobject token: room\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Sludge cleans room\n2. Grime cleans room\n3. Dirt cleans room\n4. Muck cleans room\n5. Slime cleans room\n\nQ2.\n1. Mud scrubbed room\n2. Mud wiped room\n3. Mud mopped room\n4. Mud swept room\n5. Mud polished room\n\nQ3.\n1. Mud cleans chamber\n2. Mud cleans area\n3. Mud cleans space\n4. Mud cleans den\n5. Mud cleans cubicle", "subject_replaced": ["Slime cleans room", "Dirt cleans room", "Muck cleans room", "Sludge cleans room", "Grime cleans room"], "verb_replaced": ["Mud scrubbed room", "Mud polished room", "Mud swept room", "Mud mopped room", "Mud wiped room"], "object_replaced": ["Mud cleans space", "Mud cleans cubicle", "Mud cleans area", "Mud cleans chamber", "Mud cleans den"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: mud cleans room\n", "AffectedParaphraseMaker_gptoutput": "\n1. Dirt can be used to scrub a room.\n2. Muck can be employed to tidy up a room.\n3. Sludge can be utilized to spruce up a room.\n4. Grime can be utilized to clean a room.\n5. Silt can be employed to sanitize a room.", "affected_paraphrase": ["Muck can be employed to tidy up a room.", "Sludge can be utilized to spruce up a room.", "Grime can be utilized to clean a room.", "Silt can be employed to sanitize a room.", "Dirt can be used to scrub a room."]}]}
{"inputs": {"id": 1156, "prompt": "Cloth hurts foot", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Cloth", "verb": "hurts", "object": "foot", "neg": null, "prompt_polarity_grounded": "Cloth does not hurt foot."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Cloth does not hurt foot.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Cloth is a soft material.\n2. Soft materials do not hurt feet.", "affected_reasoning": ["Cloth is soft material.", "Soft materials do not hurt feet."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Cloth hurts foot\nsubject token: Cloth\nobject token: foot\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Carpet hurts foot\n2. Shirt hurts foot\n3. Fabric hurts foot\n4. Towel hurts foot\n5. Blanket hurts foot\n\nQ2. Replacements:\n1. Cloth hurts hand\n2. Cloth hurts leg\n3. Cloth hurts arm\n4. Cloth hurts head\n5. Cloth hurts shoulder", "subject_replaced": ["Blanket hurts foot", "Carpet hurts foot", "Shirt hurts foot", "Towel hurts foot", "Fabric hurts foot"], "object_replaced": ["Cloth hurts leg", "Cloth hurts head", "Cloth hurts hand", "Cloth hurts arm", "Cloth hurts shoulder"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Cloth hurts foot\nsubject token: Cloth\nobject token: foot\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Fabric hurts foot, Garment hurts foot, Apparel hurts foot, Material hurts foot, Clothes hurts foot\nQ2. Cloth irritates foot, Cloth pinches foot, Cloth rubs foot, Cloth chafes foot, Cloth abrades foot\nQ3. Cloth hurts toes, Cloth hurts ankle, Cloth hurts heel, Cloth hurts sole, Cloth hurts instep", "subject_replaced": ["Clothes hurts foot", "Apparel hurts foot", "Garment hurts foot", "Fabric hurts foot", "Material hurts foot"], "verb_replaced": ["Cloth pinches foot", "Cloth abrades foot", "Cloth chafes foot", "Cloth rubs foot", "Cloth irritates foot"], "object_replaced": ["Cloth hurts toes", "Cloth hurts ankle", "Cloth hurts heel", "Cloth hurts sole", "Cloth hurts instep"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Cloth hurts foot\n", "AffectedParaphraseMaker_gptoutput": "\n1. Fabric causes pain to the foot.\n2. Material can be uncomfortable on the foot.\n3. Textiles can be a source of foot discomfort.\n4. Wearing cloth can be painful on the foot.\n5. Fabric can be a source of foot pain.", "affected_paraphrase": ["Fabric causes pain to the foot.", "Textiles can be a source of foot discomfort.", "Fabric can be a source of foot pain.", "Material can be uncomfortable on the foot.", "Wearing cloth can be painful on the foot."]}]}
{"inputs": {"id": 1158, "prompt": "Dog clips magazine", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Dog", "verb": "clips", "object": "magazine", "neg": null, "prompt_polarity_grounded": "Dog does not clip magazine."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Dog does not clip magazine.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Dogs do not have opposable thumbs.\n2. Opposable thumbs are needed to clip a magazine.", "affected_reasoning": ["Dogs do not have opposable thumbs.", "Opposable thumbs are needed to clip magazine."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Dog clips magazine\nsubject token: Dog\nobject token: magazine\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Cat clips magazine\n2. Fish clips magazine\n3. Bird clips magazine\n4. Rabbit clips magazine\n5. Mouse clips magazine\n\nQ2. Replacements:\n1. Dog clips book\n2. Dog clips newspaper\n3. Dog clips journal\n4. Dog clips comic\n5. Dog clips pamphlet", "subject_replaced": ["Bird clips magazine", "Fish clips magazine", "Cat clips magazine", "Rabbit clips magazine", "Mouse clips magazine"], "object_replaced": ["Dog clips pamphlet", "Dog clips journal", "Dog clips book", "Dog clips comic", "Dog clips newspaper"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Dog clips magazine\nsubject token: Dog\nobject token: magazine\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Cat clips magazine, Puppy clips magazine, Hound clips magazine, Canine clips magazine, Mutt clips magazine.\nQ2. Dog fastens magazine, Dog binds magazine, Dog secures magazine, Dog ties magazine, Dog attaches magazine.\nQ3. Dog clips newspaper, Dog clips journal, Dog clips periodical, Dog clips booklet, Dog clips pamphlet.", "subject_replaced": ["Puppy clips magazine", "Canine clips magazine", "Cat clips magazine", "Mutt clips magazine.", "Hound clips magazine"], "verb_replaced": ["Dog attaches magazine.", "Dog binds magazine", "Dog ties magazine", "Dog fastens magazine", "Dog secures magazine"], "object_replaced": ["Dog clips booklet", "Dog clips pamphlet.", "Dog clips journal", "Dog clips periodical", "Dog clips newspaper"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Dog clips magazine\n", "AffectedParaphraseMaker_gptoutput": "\n1. Magazine featuring canine-related content\n2. Periodical devoted to all things canine\n3. Publication dedicated to dogs\n4. Journal specializing in dog-related topics\n5. Publication focusing on canines", "affected_paraphrase": ["Publication focusing on canines", "Publication dedicated to dogs", "Magazine featuring canine-related content", "Periodical devoted to all things canine", "Journal specializing in dog-related topics"]}]}
{"inputs": {"id": 1164, "prompt": "horse fills cup", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "horse", "verb": "fills", "object": "cup", "neg": null, "prompt_polarity_grounded": "Horse does not fill cup."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Horse does not fill cup.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Horses don't have hands. \n2. Hands are needed to fill a cup.", "affected_reasoning": ["Horses don't have hands.", "Hands are needed to fill cup."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: horse fills cup\nsubject token: horse\nobject token: cup\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant fills cup\n2. Dog fills cup\n3. Tiger fills cup\n4. Monkey fills cup\n5. Cow fills cup\n\nQ2. Replacements:\n1. Horse fills bowl\n2. Horse fills plate\n3. Horse fills glass\n4. Horse fills jug\n5. Horse fills dish", "subject_replaced": ["Dog fills cup", "Cow fills cup", "Tiger fills cup", "Elephant fills cup", "Monkey fills cup"], "object_replaced": ["Horse fills plate", "Horse fills glass", "Horse fills dish", "Horse fills jug", "Horse fills bowl"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: horse fills cup\nsubject token: horse\nobject token: cup\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Pony fills cup, Steed fills cup, Equine fills cup, Stallion fills cup, Mare fills cup\nQ2. Horse fills up cup, Horse fills in cup, Horse fills out cup, Horse fills around cup, Horse fills through cup\nQ3. Horse fills cup, Tankard fills cup, Mug fills cup, Chalice fills cup, Goblet fills cup", "subject_replaced": ["Mare fills cup", "Stallion fills cup", "Pony fills cup", "Steed fills cup", "Equine fills cup"], "verb_replaced": ["Horse fills through cup", "Horse fills in cup", "Horse fills up cup", "Horse fills out cup", "Horse fills around cup"], "object_replaced": ["Tankard fills cup", "Horse fills cup", "Mug fills cup", "Goblet fills cup", "Chalice fills cup"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: horse fills cup\n", "AffectedParaphraseMaker_gptoutput": "\n1. A horse is responsible for filling a cup.\n2. A horse is the one that fills a cup.\n3. A horse is the one to fill a cup.\n4. A horse is the one who fills a cup.\n5. A horse is the one that is filling a cup.", "affected_paraphrase": ["A horse is the one to fill a cup.", "A horse is the one that is filling a cup.", "A horse is the one that fills a cup.", "A horse is responsible for filling a cup.", "A horse is the one who fills a cup."]}]}
{"inputs": {"id": 1165, "prompt": "Girl chews laptop", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Girl", "verb": "chews", "object": "laptop", "neg": null, "prompt_polarity_grounded": "Girl does not chew laptop."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Girl does not chew laptop.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Chewing is an action done with the mouth. \n2. Laptops are not edible.", "affected_reasoning": ["Chewing is action done with mouth.", "Laptops are not edible."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Girl chews laptop\nsubject token: Girl\nobject token: laptop\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Boy chews laptop\n2. Child chews laptop\n3. Woman chews laptop\n4. Teenager chews laptop\n5. Kid chews laptop\n\nQ2. Replacements:\n1. Girl chews phone\n2. Girl chews computer\n3. Girl chews tablet\n4. Girl chews keyboard\n5. Girl chews mouse", "subject_replaced": ["Child chews laptop", "Teenager chews laptop", "Woman chews laptop", "Boy chews laptop", "Kid chews laptop"], "object_replaced": ["Girl chews tablet", "Girl chews keyboard", "Girl chews computer", "Girl chews phone", "Girl chews mouse"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Girl chews laptop\nsubject token: Girl\nobject token: laptop\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. Woman munches laptop\n2. Lady devours laptop\n3. Child chomps laptop\n4. Girl nibbles laptop\n5. Female gnaws laptop\n\nQ2. Variants:\n1. Girl chews up laptop\n2. Girl masticates laptop\n3. Girl crunches laptop\n4. Girl grinds laptop\n5. Girl gnaws laptop\n\nQ3. Variants:\n1. Girl chews computer\n2. Girl chews device\n3. Girl chews gadget\n4. Girl chews apparatus\n5. Girl chews machinery", "subject_replaced": ["Child chomps laptop", "Woman munches laptop", "Girl nibbles laptop", "Female gnaws laptop", "Lady devours laptop"], "verb_replaced": ["Girl gnaws laptop", "Girl chews up laptop", "Girl masticates laptop", "Girl grinds laptop", "Girl crunches laptop"], "object_replaced": ["Girl chews apparatus", "Girl chews gadget", "Girl chews device", "Girl chews computer", "Girl chews machinery"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Girl chews laptop\n", "AffectedParaphraseMaker_gptoutput": "\n1. A female munches on a computer.\n2. A young woman chomps down on a laptop.\n3. A girl gnaws on a laptop.\n4. A female devours a laptop.\n5. A young lady consumes a laptop.", "affected_paraphrase": ["A young lady consumes a laptop.", "A young woman chomps down on a laptop.", "A girl gnaws on a laptop.", "A female munches on a computer.", "A female devours a laptop."]}]}
{"inputs": {"id": 1168, "prompt": "crab vents smoke", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "crab", "verb": "vents", "object": "smoke", "neg": null, "prompt_polarity_grounded": "Crab does not vent smoke."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Crab does not vent smoke.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Crabs do not have lungs. \n2. Lungs are needed to produce smoke.", "affected_reasoning": ["Crabs do not have lungs.", "Lungs are needed to produce smoke."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: crab vents smoke\nsubject token: crab\nobject token: smoke\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. text: elephant vents smoke\n2. text: giraffe vents smoke\n3. text: lion vents smoke\n4. text: zebra vents smoke\n5. text: buffalo vents smoke\n\nQ2. Replacements:\n1. text: crab vents fire\n2. text: crab vents water\n3. text: crab vents air\n4. text: crab vents ice\n5. text: crab vents wind", "subject_replaced": ["zebra vents smoke", "buffalo vents smoke", "elephant vents smoke", "giraffe vents smoke", "lion vents smoke"], "object_replaced": ["crab vents wind", "crab vents air", "crab vents ice", "crab vents water", "crab vents fire"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: crab vents smoke\nsubject token: crab\nobject token: smoke\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Lobster vents smoke, Shrimp vents smoke, Crayfish vents smoke, Prawn vents smoke, Crabster vents smoke\nQ2. Crab exhales smoke, Crab belches smoke, Crab puffs smoke, Crab spews smoke, Crab emits smoke\nQ3. Crab vents fog, Crab vents vapor, Crab vents steam, Crab vents haze, Crab vents fumes", "subject_replaced": ["Crayfish vents smoke", "Shrimp vents smoke", "Prawn vents smoke", "Crabster vents smoke", "Lobster vents smoke"], "verb_replaced": ["Crab spews smoke", "Crab exhales smoke", "Crab emits smoke", "Crab puffs smoke", "Crab belches smoke"], "object_replaced": ["Crab vents haze", "Crab vents steam", "Crab vents fumes", "Crab vents fog", "Crab vents vapor"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: crab vents smoke\n", "AffectedParaphraseMaker_gptoutput": "\n1. Crabs emit smoke.\n2. Smoke is released by crabs.\n3. Crabs are producing smoke.\n4. Smoke is being exhaled by crabs.\n5. Crabs are venting smoke.", "affected_paraphrase": ["Crabs are venting smoke.", "Crabs emit smoke.", "Smoke is being exhaled by crabs.", "Smoke is released by crabs.", "Crabs are producing smoke."]}]}
{"inputs": {"id": 1175, "prompt": "Table squirts water", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Table", "verb": "squirts", "object": "water", "neg": null, "prompt_polarity_grounded": "Table does not squirt water."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Table does not squirt water.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Tables are not alive. \n2. Living things squirt water.", "affected_reasoning": ["Tables are not alive.", "Living things squirt water."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Table squirts water\nsubject token: Table\nobject token: water\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Chair squirts water\n2. Lamp squirts water\n3. Desk squirts water\n4. Couch squirts water\n5. Stool squirts water\n\nQ2. Replacements:\n1. Table squirts juice\n2. Table squirts milk\n3. Table squirts soda\n4. Table squirts tea\n5. Table squirts beer", "subject_replaced": ["Lamp squirts water", "Stool squirts water", "Desk squirts water", "Couch squirts water", "Chair squirts water"], "object_replaced": ["Table squirts tea", "Table squirts beer", "Table squirts soda", "Table squirts milk", "Table squirts juice"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Table squirts water\nsubject token: Table\nobject token: water\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Furniture squirts water, Desk squirts water, Chair squirts water, Bench squirts water, Stool squirts water.\nQ2. Table spurts water, Table ejects water, Table gushes water, Table squirts out water, Table sprays water.\nQ3. Table squirts liquid, Table squirts fluid, Table squirts moisture, Table squirts juice, Table squirts soda.", "subject_replaced": ["Bench squirts water", "Furniture squirts water", "Stool squirts water.", "Desk squirts water", "Chair squirts water"], "verb_replaced": ["Table squirts out water", "Table spurts water", "Table gushes water", "Table sprays water.", "Table ejects water"], "object_replaced": ["Table squirts soda.", "Table squirts moisture", "Table squirts liquid", "Table squirts juice", "Table squirts fluid"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Table squirts water\n", "AffectedParaphraseMaker_gptoutput": "\n1. The table emits a stream of water.\n2. The table is capable of spraying water.\n3. The table is able to eject water.\n4. The table is able to squirt water.\n5. The table is able to produce a jet of water.", "affected_paraphrase": ["The table is able to squirt water.", "The table is able to produce a jet of water.", "The table is capable of spraying water.", "The table emits a stream of water.", "The table is able to eject water."]}]}
{"inputs": {"id": 1179, "prompt": "Knife digs ground", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Knife", "verb": "digs", "object": "ground", "neg": null, "prompt_polarity_grounded": "Knife digs ground"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Knife digs ground. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nKnife is sharp. Knife can cut ground.", "affected_reasoning": ["Knife is sharp", "Knife can cut ground."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Knife digs ground\nsubject token: Knife\nobject token: ground\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Pencil digs ground\n2. Hammer digs ground\n3. Fork digs ground\n4. Spoon digs ground\n5. Saw digs ground\n\nQ2. Replacements:\n1. Knife digs sky\n2. Knife digs ocean\n3. Knife digs mountain\n4. Knife digs tree\n5. Knife digs cloud", "subject_replaced": ["Fork digs ground", "Saw digs ground", "Hammer digs ground", "Spoon digs ground", "Pencil digs ground"], "object_replaced": ["Knife digs tree", "Knife digs ocean", "Knife digs mountain", "Knife digs cloud", "Knife digs sky"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Knife digs ground\nsubject token: Knife\nobject token: ground\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Dagger digs ground\n2. Blade digs ground\n3. Shovel digs ground\n4. Pickaxe digs ground\n5. Spade digs ground\n\nQ2.\n1. Knife burrows ground\n2. Knife scoops ground\n3. Knife excavates ground\n4. Knife plows ground\n5. Knife gouges ground\n\nQ3.\n1. Knife digs soil\n2. Knife digs dirt\n3. Knife digs turf\n4. Knife digs clay\n5. Knife digs bedrock", "subject_replaced": ["Pickaxe digs ground", "Blade digs ground", "Spade digs ground", "Shovel digs ground", "Dagger digs ground"], "verb_replaced": ["Knife plows ground", "Knife excavates ground", "Knife gouges ground", "Knife scoops ground", "Knife burrows ground"], "object_replaced": ["Knife digs bedrock", "Knife digs dirt", "Knife digs turf", "Knife digs soil", "Knife digs clay"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Knife digs ground\n", "AffectedParaphraseMaker_gptoutput": "\n1. A knife is used to break into the soil.\n2. A knife is employed to penetrate the earth.\n3. A knife is utilized to excavate the ground.\n4. A knife is employed to burrow into the ground.\n5. A knife is utilized to cut into the ground.", "affected_paraphrase": ["A knife is utilized to excavate the ground.", "A knife is employed to penetrate the earth.", "A knife is employed to burrow into the ground.", "A knife is utilized to cut into the ground.", "A knife is used to break into the soil."]}]}
{"inputs": {"id": 1185, "prompt": "plane enters room", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "plane", "verb": "enters", "object": "room", "neg": null, "prompt_polarity_grounded": "Plane does not enter room."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Plane does not enter room.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Planes are too large to fit in a room. \n2. Therefore, a plane cannot enter a room.", "affected_reasoning": ["Planes are too large to fit in room.", "Therefore, plane cannot enter room."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: plane enters room\nsubject token: plane\nobject token: room\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Balloon enters room\n2. Car enters room\n3. Train enters room\n4. Boat enters room\n5. Rocket enters room\n\nQ2. Replacements:\n1. Plane enters kitchen\n2. Plane enters garden\n3. Plane enters forest\n4. Plane enters beach\n5. Plane enters mountain", "subject_replaced": ["Train enters room", "Balloon enters room", "Boat enters room", "Rocket enters room", "Car enters room"], "object_replaced": ["Plane enters forest", "Plane enters kitchen", "Plane enters beach", "Plane enters garden", "Plane enters mountain"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: plane enters room\nsubject token: plane\nobject token: room\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Aircraft enters room, Jet enters room, Glider enters room, Airplane enters room, Chopper enters room.\nQ2. Plane enters chamber, Plane penetrates room, Plane strides into room, Plane strides room, Plane invades room.\nQ3. Plane enters chamber, Plane enters hall, Plane enters area, Plane enters space, Plane enters den.", "subject_replaced": ["Chopper enters room.", "Aircraft enters room", "Jet enters room", "Glider enters room", "Airplane enters room"], "verb_replaced": ["Plane invades room.", "Plane enters chamber", "Plane strides room", "Plane penetrates room", "Plane strides into room"], "object_replaced": ["Plane enters space", "Plane enters den.", "Plane enters hall", "Plane enters chamber", "Plane enters area"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: plane enters room\n", "AffectedParaphraseMaker_gptoutput": "\n1. Aircraft penetrates the chamber.\n2. An airplane enters the room.\n3. An aeroplane enters the interior.\n4. An airplane infiltrates the space.\n5. A plane enters the area.", "affected_paraphrase": ["An airplane enters the room.", "An airplane infiltrates the space.", "Aircraft penetrates the chamber.", "A plane enters the area.", "An aeroplane enters the interior."]}]}
{"inputs": {"id": 1195, "prompt": "barber packs ship", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "barber", "verb": "packs", "object": "ship", "neg": null, "prompt_polarity_grounded": "Barber does not pack ship."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Barber does not pack ship.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Barber is a profession that cuts hair. \n2. Cutting hair does not involve packing and shipping items.", "affected_reasoning": ["Barber is profession that cuts hair.", "Cutting hair does not involve packing and shipping items."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: barber packs ship\nsubject token: barber\nobject token: ship\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Chef packs ship\n2. Teacher packs ship\n3. Driver packs ship\n4. Artist packs ship\n5. Musician packs ship\n\nQ2. Replacements:\n1. Barber packs car\n2. Barber packs plane\n3. Barber packs train\n4. Barber packs bike\n5. Barber packs boat", "subject_replaced": ["Chef packs ship", "Artist packs ship", "Musician packs ship", "Driver packs ship", "Teacher packs ship"], "object_replaced": ["Barber packs plane", "Barber packs train", "Barber packs bike", "Barber packs car", "Barber packs boat"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: barber packs ship\nsubject token: barber\nobject token: ship\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Stylist packs ship, Barber shears ship, Hairdresser bundles ship, Coiffeur wraps ship, Haircutter ties ship.\nQ2. Barber packs load, Barber packs transport, Barber packs ferry, Barber packs convey, Barber packs haul.\nQ3. Barber packs boat, Barber packs vessel, Barber packs cruiser, Barber packs yacht, Barber packs schooner.", "subject_replaced": ["Barber shears ship", "Coiffeur wraps ship", "Haircutter ties ship.", "Stylist packs ship", "Hairdresser bundles ship"], "verb_replaced": ["Barber packs ferry", "Barber packs load", "Barber packs haul.", "Barber packs convey", "Barber packs transport"], "object_replaced": ["Barber packs cruiser", "Barber packs vessel", "Barber packs schooner.", "Barber packs boat", "Barber packs yacht"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: barber packs ship\n", "AffectedParaphraseMaker_gptoutput": "\n1. The barber is loading the vessel.\n2. The barber is stowing the ship.\n3. The barber is filling the boat.\n4. The barber is stuffing the ship.\n5. The barber is cramming the ship.", "affected_paraphrase": ["The barber is stowing the ship.", "The barber is filling the boat.", "The barber is stuffing the ship.", "The barber is loading the vessel.", "The barber is cramming the ship."]}]}
{"inputs": {"id": 1201, "prompt": "Woman slides on ice", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Woman", "verb": "slides", "object": "ice", "neg": null, "prompt_polarity_grounded": "Woman slides on ice"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Woman slides on ice. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Ice is slippery.\n2. Slippery surfaces cause people to slide.", "affected_reasoning": ["Ice is slippery.", "Slippery surfaces cause people to slide."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Woman slides on ice\nsubject token: Woman\nobject token: ice\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant slides on ice\n2. Child slides on ice\n3. Cat slides on ice\n4. Teacher slides on ice\n5. Student slides on ice\n\nQ2. Replacements:\n1. Woman slides on rock\n2. Woman slides on carpet\n3. Woman slides on grass\n4. Woman slides on sand\n5. Woman slides on wood", "subject_replaced": ["Cat slides on ice", "Elephant slides on ice", "Child slides on ice", "Student slides on ice", "Teacher slides on ice"], "object_replaced": ["Woman slides on grass", "Woman slides on wood", "Woman slides on carpet", "Woman slides on sand", "Woman slides on rock"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Woman slides on ice\nsubject token: Woman\nobject token: ice\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Person slides on ice, Female glides on ice, Lady skates on ice, Girl slips on ice, Woman glides on ice\nQ2. Woman slides down ice, Woman slides across ice, Woman slides over ice, Woman slides along ice, Woman slides up ice\nQ3. Woman slides on frozen water, Woman slides on snow, Woman slides on rink, Woman slides on sleet, Woman slides on frost", "subject_replaced": ["Person slides on ice", "Woman glides on ice", "Lady skates on ice", "Girl slips on ice", "Female glides on ice"], "verb_replaced": ["Woman slides along ice", "Woman slides down ice", "Woman slides across ice", "Woman slides up ice", "Woman slides over ice"], "object_replaced": ["Woman slides on frozen water", "Woman slides on frost", "Woman slides on sleet", "Woman slides on snow", "Woman slides on rink"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Woman slides on ice\n", "AffectedParaphraseMaker_gptoutput": "\n1. Female slips on frozen surface\n2. Lady glides across icy terrain\n3. Woman skids on slippery ice\n4. Female slides along frozen ground\n5. Lady slides on frozen ground", "affected_paraphrase": ["Female slips on frozen surface", "Lady glides across icy terrain", "Woman skids on slippery ice", "Female slides along frozen ground", "Lady slides on frozen ground"]}]}
{"inputs": {"id": 1204, "prompt": "Hair mince dough", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Hair", "verb": "mince", "object": "dough", "neg": null, "prompt_polarity_grounded": "Hair does not mince dough."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Hair does not mince dough.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Hair is not a kitchen tool. \n2. Kitchen tools are used to mince dough.", "affected_reasoning": ["Hair is not kitchen tool.", "Kitchen tools are used to mince dough."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Hair mince dough\nsubject token: Hair\nobject token: dough\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "1. Hair mince cheese\n2. Hair mince cake\n3. Hair mince ice cream\n4. Hair mince candy\n5. Hair mince popcorn\n\n1. Hair dough pencil\n2. Hair dough paper\n3. Hair dough eraser\n4. Hair dough marker\n5. Hair dough crayon", "subject_replaced": ["Hair mince popcorn", "Hair mince candy", "Hair mince cake", "Hair mince ice cream", "Hair mince cheese"], "object_replaced": ["Hair dough paper", "Hair dough eraser", "Hair dough crayon", "Hair dough pencil", "Hair dough marker"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Hair mince dough\nsubject token: Hair\nobject token: dough\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Strands mince dough, Tresses mince dough, Locks mince dough, Mane mince dough, Tufts mince dough\nQ2. Hair knead dough, Hair blend dough, Hair mix dough, Hair stir dough, Hair whip dough\nQ3. Hair mince pastry, Hair mince batter, Hair mince breadcrumbs, Hair mince crumbs, Hair mince flour", "subject_replaced": ["Strands mince dough", "Mane mince dough", "Tresses mince dough", "Locks mince dough", "Tufts mince dough"], "verb_replaced": ["Hair knead dough", "Hair blend dough", "Hair whip dough", "Hair stir dough", "Hair mix dough"], "object_replaced": ["Hair mince flour", "Hair mince crumbs", "Hair mince breadcrumbs", "Hair mince batter", "Hair mince pastry"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Hair mince dough\n", "AffectedParaphraseMaker_gptoutput": "\n1. Chop up the hair-like strands of dough\n2. Cut the dough into thin strands\n3. Shred the dough into thin pieces\n4. Divide the dough into fine strands\n5. Slice the dough into fine strips", "affected_paraphrase": ["Slice the dough into fine strips", "Divide the dough into fine strands", "Shred the dough into thin pieces", "Cut the dough into thin strands", "Chop up the hair-like strands of dough"]}]}
{"inputs": {"id": 1210, "prompt": "the cat constructs skyscraper", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "cat", "verb": "constructs", "object": "skyscraper", "neg": null, "prompt_polarity_grounded": "The cat does not construct skyscrapers."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The cat does not construct skyscrapers.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Cats do not have the necessary tools to construct skyscrapers.\n2. Skyscrapers require specialized tools and materials that cats do not possess.", "affected_reasoning": ["Cats do not have necessary tools to construct skyscrapers.", "Skyscrapers require specialized tools and materials that cats do not possess."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the cat constructs skyscraper\nsubject token: cat\nobject token: skyscraper\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The dog constructs skyscraper\n2. The elephant constructs skyscraper\n3. The mouse constructs skyscraper\n4. The bird constructs skyscraper\n5. The fish constructs skyscraper\n\nQ2. Replacements:\n1. The cat constructs castle\n2. The cat constructs mountain\n3. The cat constructs tree\n4. The cat constructs balloon\n5. The cat constructs bridge", "subject_replaced": ["The bird constructs skyscraper", "The fish constructs skyscraper", "The dog constructs skyscraper", "The elephant constructs skyscraper", "The mouse constructs skyscraper"], "object_replaced": ["The cat constructs tree", "The cat constructs mountain", "The cat constructs balloon", "The cat constructs bridge", "The cat constructs castle"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the cat constructs skyscraper\nsubject token: cat\nobject token: skyscraper\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The feline constructs skyscraper, The kitten constructs skyscraper, The tomcat constructs skyscraper, The tabby constructs skyscraper, The housecat constructs skyscraper.\n\nQ2. The cat builds skyscraper, The cat erects skyscraper, The cat fabricates skyscraper, The cat creates skyscraper, The cat assembles skyscraper.\n\nQ3. The cat constructs tower, The cat constructs edifice, The cat constructs high-rise, The cat constructs building, The cat constructs structure.", "subject_replaced": ["The housecat constructs skyscraper.", "The tabby constructs skyscraper", "The feline constructs skyscraper", "The tomcat constructs skyscraper", "The kitten constructs skyscraper"], "verb_replaced": ["The cat assembles skyscraper.", "The cat fabricates skyscraper", "The cat creates skyscraper", "The cat builds skyscraper", "The cat erects skyscraper"], "object_replaced": ["The cat constructs high-rise", "The cat constructs structure.", "The cat constructs edifice", "The cat constructs building", "The cat constructs tower"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the cat constructs skyscraper\n", "AffectedParaphraseMaker_gptoutput": "\n1. The feline builds tall buildings\n2. The cat puts together high-rises\n3. The cat assembles skyscrapers\n4. The cat fabricates sky-scrapers\n5. The cat creates towering structures", "affected_paraphrase": ["The cat assembles skyscrapers", "The cat fabricates sky-scrapers", "The cat puts together high-rises", "The feline builds tall buildings", "The cat creates towering structures"]}]}
{"inputs": {"id": 1217, "prompt": "a hand tears cloth", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "hand", "verb": "tears", "object": "cloth", "neg": null, "prompt_polarity_grounded": "a hand tears cloth"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a hand tears cloth. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Cloth is made of fibers. \n2. Pulling the fibers apart tears the cloth.", "affected_reasoning": ["Cloth is made of fibers.", "Pulling fibers apart tears cloth."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a hand tears cloth\nsubject token: hand\nobject token: cloth\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A foot tears cloth\n2. A tree tears cloth\n3. A rock tears cloth\n4. A cloud tears cloth\n5. A wind tears cloth\n\nQ2. Replacements:\n1. A hand tears paper\n2. A hand tears wood\n3. A hand tears metal\n4. A hand tears glass\n5. A hand tears stone", "subject_replaced": ["A foot tears cloth", "A rock tears cloth", "A cloud tears cloth", "A wind tears cloth", "A tree tears cloth"], "object_replaced": ["A hand tears glass", "A hand tears metal", "A hand tears stone", "A hand tears paper", "A hand tears wood"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a hand tears cloth\nsubject token: hand\nobject token: cloth\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A fist rips cloth, A palm shreds cloth, A paw shreds cloth, A claw tears cloth, A grip rends cloth.\n\nQ2. A hand rends cloth, A hand shreds cloth, A hand rips cloth, A hand tatters cloth, A hand frays cloth.\n\nQ3. A hand tears fabric, A hand tears burlap, A hand tears canvas, A hand tears muslin, A hand tears linen.", "subject_replaced": ["A grip rends cloth.", "A fist rips cloth", "A palm shreds cloth", "A claw tears cloth", "A paw shreds cloth"], "verb_replaced": ["A hand tatters cloth", "A hand frays cloth.", "A hand shreds cloth", "A hand rips cloth", "A hand rends cloth"], "object_replaced": ["A hand tears burlap", "A hand tears muslin", "A hand tears canvas", "A hand tears linen.", "A hand tears fabric"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a hand tears cloth\n", "AffectedParaphraseMaker_gptoutput": "\n1. A hand rips fabric\n2. A hand shreds cloth\n3. A hand rends material\n4. A hand frays fabric\n5. A hand lacerates cloth", "affected_paraphrase": ["A hand rends material", "A hand frays fabric", "A hand shreds cloth", "A hand lacerates cloth", "A hand rips fabric"]}]}
{"inputs": {"id": 1226, "prompt": "a man cleaned mud", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "man", "verb": "cleaned", "object": "mud", "neg": null, "prompt_polarity_grounded": "A man did not clean mud."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A man did not clean mud.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Mud was on the floor.\n2. He didn't clean it.", "affected_reasoning": ["Mud was on floor.", "He didn't clean it."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a man cleaned mud\nsubject token: man\nobject token: mud\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A dog cleaned mud\n2. A tree cleaned mud\n3. A cat cleaned mud\n4. A bird cleaned mud\n5. A fish cleaned mud\n\nQ2. Replacements:\n1. A man cleaned dirt\n2. A man cleaned snow\n3. A man cleaned leaves\n4. A man cleaned sand\n5. A man cleaned water", "subject_replaced": ["A cat cleaned mud", "A dog cleaned mud", "A tree cleaned mud", "A bird cleaned mud", "A fish cleaned mud"], "object_replaced": ["A man cleaned snow", "A man cleaned water", "A man cleaned dirt", "A man cleaned leaves", "A man cleaned sand"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a man cleaned mud\nsubject token: man\nobject token: mud\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A person scrubbed mud, \nA human wiped mud, \nAn individual mopped mud, \nA being swept mud, \nA soul brushed mud.\n\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nA man wiped mud, \nA man mopped mud, \nA man swept mud, \nA man brushed mud, \nA man wiped away mud.\n\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\nA man cleaned dirt, \nA man cleaned sludge, \nA man cleaned muck, \nA man cleaned grime, \nA man cleaned slime.", "subject_replaced": ["A being swept mud,", "A soul brushed mud.", "An individual mopped mud,", "A human wiped mud,", "A person scrubbed mud,"], "verb_replaced": ["A man brushed mud,", "A man mopped mud,", "A man swept mud,", "A man wiped away mud.", "A man wiped mud,", "Write up to 5 such variants."], "object_replaced": ["A man cleaned slime.", "A man cleaned muck,", "A man cleaned dirt,", "A man cleaned sludge,", "A man cleaned grime,", "Write up to 5 such variants."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a man cleaned mud\n", "AffectedParaphraseMaker_gptoutput": "\n1. A person tidied up mud.\n2. A male scrubbed dirt.\n3. An individual wiped away muck.\n4. A guy wiped off sludge.\n5. A human being wiped out mire.", "affected_paraphrase": ["A male scrubbed dirt.", "A guy wiped off sludge.", "A person tidied up mud.", "An individual wiped away muck.", "A human being wiped out mire."]}]}
{"inputs": {"id": 1231, "prompt": "House contains man", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "House", "verb": "contains", "object": "man", "neg": null, "prompt_polarity_grounded": "House contains man"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "House contains man. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Man lives in house.\n2. House provides shelter for man.", "affected_reasoning": ["Man lives in house.", "House provides shelter for man."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: House contains man\nsubject token: House\nobject token: man\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Tree contains man\n2. Car contains man\n3. Book contains man\n4. Pen contains man\n5. Chair contains man\n\nQ2. Replacements:\n1. House contains woman\n2. House contains child\n3. House contains dog\n4. House contains cat\n5. House contains bird", "subject_replaced": ["Book contains man", "Car contains man", "Tree contains man", "Chair contains man", "Pen contains man"], "object_replaced": ["House contains bird", "House contains child", "House contains dog", "House contains cat", "House contains woman"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: House contains man\nsubject token: House\nobject token: man\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Mansion contains man\n2. Abode contains man\n3. Dwelling contains man\n4. Residence contains man\n5. Home contains man\n\nQ2.\n1. House holds man\n2. House includes man\n3. House encompasses man\n4. House embraces man\n5. House possesses man\n\nQ3.\n1. House contains person\n2. House contains individual\n3. House contains human\n4. House contains male\n5. House contains male person", "subject_replaced": ["Residence contains man", "Abode contains man", "Mansion contains man", "Dwelling contains man", "Home contains man"], "verb_replaced": ["House holds man", "House encompasses man", "House embraces man", "House possesses man", "House includes man"], "object_replaced": ["House contains male", "House contains male person", "House contains individual", "House contains person", "House contains human"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: House contains man\n", "AffectedParaphraseMaker_gptoutput": "\n1. A man resides in a house.\n2. A house is the abode of a man.\n3. A man inhabits a house.\n4. A man is sheltered in a house.\n5. A man is domiciled in a house.", "affected_paraphrase": ["A man resides in a house.", "A man is domiciled in a house.", "A man inhabits a house.", "A man is sheltered in a house.", "A house is the abode of a man."]}]}
{"inputs": {"id": 1232, "prompt": "the oil dampens book", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "oil", "verb": "dampens", "object": "book", "neg": null, "prompt_polarity_grounded": "the oil dampens book"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "the oil dampens book. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Oil is a liquid that can reduce friction. \n2. Reduced friction can reduce the sound of a book when it is flipped through.", "affected_reasoning": ["Oil is liquid that can reduce friction.", "Reduced friction can reduce sound of book when it is flipped through."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the oil dampens book\nsubject token: oil\nobject token: book\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The wind dampens book\n2. The fire dampens book\n3. The water dampens book\n4. The sun dampens book\n5. The snow dampens book\n\nQ2. Replacements:\n1. The oil dampens chair\n2. The oil dampens tree\n3. The oil dampens car\n4. The oil dampens house\n5. The oil dampens phone", "subject_replaced": ["The sun dampens book", "The snow dampens book", "The fire dampens book", "The water dampens book", "The wind dampens book"], "object_replaced": ["The oil dampens car", "The oil dampens phone", "The oil dampens chair", "The oil dampens tree", "The oil dampens house"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the oil dampens book\nsubject token: oil\nobject token: book\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The grease dampens book.\nQ2. The oil soaks book.\nQ3. The oil dampens volume.", "subject_replaced": ["The grease dampens book."], "verb_replaced": ["The oil soaks book."], "object_replaced": ["The oil dampens volume."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the oil dampens book\n", "AffectedParaphraseMaker_gptoutput": "\n1. The oil reduces the dryness of the book.\n2. The oil soaks into the book.\n3. The oil moistens the book.\n4. The oil saturates the book.\n5. The oil hydrates the book.", "affected_paraphrase": ["The oil reduces the dryness of the book.", "The oil saturates the book.", "The oil moistens the book.", "The oil hydrates the book.", "The oil soaks into the book."]}]}
{"inputs": {"id": 1233, "prompt": "Chefs burn water", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Chefs", "verb": "burn", "object": "water", "neg": null, "prompt_polarity_grounded": "Chefs do not burn water."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Chefs do not burn water.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Water boils at 100\u00b0C. \n2. Chefs cook at temperatures higher than 100\u00b0C.", "affected_reasoning": ["Water boils at 100\u00b0C.", "Chefs cook at temperatures higher than 100\u00b0C."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Chefs burn water\nsubject token: Chefs\nobject token: water\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Monkeys burn water\n2. Teachers burn water\n3. Dogs burn water\n4. Actors burn water\n5. Scientists burn water\n\nQ2. Replacements:\n1. Chefs burn ice\n2. Chefs burn fire\n3. Chefs burn books\n4. Chefs burn glass\n5. Chefs burn wood", "subject_replaced": ["Teachers burn water", "Scientists burn water", "Monkeys burn water", "Actors burn water", "Dogs burn water"], "object_replaced": ["Chefs burn glass", "Chefs burn fire", "Chefs burn ice", "Chefs burn wood", "Chefs burn books"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Chefs burn water\nsubject token: Chefs\nobject token: water\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Cooks burn water, Bakers scorch water, Confectioners char water, Culinary experts singe water, Gourmets boil water.\nQ2. Chefs scorch water, Chefs char water, Chefs singe water, Chefs boil water, Chefs heat water.\nQ3. Chefs burn steam, Chefs burn liquid, Chefs burn ice, Chefs burn broth, Chefs burn soup.", "subject_replaced": ["Culinary experts singe water", "Cooks burn water", "Confectioners char water", "Bakers scorch water", "Gourmets boil water."], "verb_replaced": ["Chefs heat water.", "Chefs boil water", "Chefs singe water", "Chefs char water", "Chefs scorch water"], "object_replaced": ["Chefs burn liquid", "Chefs burn steam", "Chefs burn soup.", "Chefs burn ice", "Chefs burn broth"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Chefs burn water\n", "AffectedParaphraseMaker_gptoutput": "\n1. Cooks often make mistakes when boiling water.\n2. Culinary experts sometimes fail to get the water to the right temperature.\n3. Professional cooks sometimes fail to heat the water correctly.\n4. Culinary artists sometimes make mistakes when heating water.\n5. Experienced chefs sometimes make errors when boiling water.", "affected_paraphrase": ["Cooks often make mistakes when boiling water.", "Culinary experts sometimes fail to get the water to the right temperature.", "Professional cooks sometimes fail to heat the water correctly.", "Experienced chefs sometimes make errors when boiling water.", "Culinary artists sometimes make mistakes when heating water."]}]}
{"inputs": {"id": 1235, "prompt": "a car smashes chair", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "car", "verb": "smashes", "object": "chair", "neg": null, "prompt_polarity_grounded": "a car smashes chair"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a car smashes chair. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Car is moving quickly.\n2. Chair is in the way.", "affected_reasoning": ["Car is moving quickly.", "Chair is in way."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a car smashes chair\nsubject token: car\nobject token: chair\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a balloon smashes chair\n2. a dog smashes chair\n3. a tree smashes chair\n4. a book smashes chair\n5. a phone smashes chair\n\nQ2. Replacements:\n1. a car smashes table\n2. a car smashes pencil\n3. a car smashes balloon\n4. a car smashes computer\n5. a car smashes sofa", "subject_replaced": ["a tree smashes chair", "a balloon smashes chair", "a book smashes chair", "a dog smashes chair", "a phone smashes chair"], "object_replaced": ["a car smashes pencil", "a car smashes table", "a car smashes sofa", "a car smashes computer", "a car smashes balloon"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a car smashes chair\nsubject token: car\nobject token: chair\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A vehicle smashes chair, an automobile smashes chair, a truck smashes chair, a sedan smashes chair, a coupe smashes chair.\n\nQ2. A car crashes chair, a car demolishes chair, a car shatters chair, a car pulverizes chair, a car destroys chair.\n\nQ3. A car smashes furniture, a car smashes stool, a car smashes ottoman, a car smashes bench, a car smashes loveseat.", "subject_replaced": ["a truck smashes chair", "an automobile smashes chair", "A vehicle smashes chair", "a coupe smashes chair.", "a sedan smashes chair"], "verb_replaced": ["a car demolishes chair", "a car destroys chair.", "a car pulverizes chair", "a car shatters chair", "A car crashes chair"], "object_replaced": ["A car smashes furniture", "a car smashes stool", "a car smashes ottoman", "a car smashes bench", "a car smashes loveseat."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a car smashes chair\n", "AffectedParaphraseMaker_gptoutput": "\n1. A vehicle collides with a seat.\n2. An automobile crashes into a chair.\n3. A car crashes into a chair.\n4. A car plows into a chair.\n5. A car slams into a chair.", "affected_paraphrase": ["A car plows into a chair.", "A vehicle collides with a seat.", "A car crashes into a chair.", "An automobile crashes into a chair.", "A car slams into a chair."]}]}
{"inputs": {"id": 1239, "prompt": "Woman capsize dog", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Woman", "verb": "capsize", "object": "dog", "neg": null, "prompt_polarity_grounded": "Woman did not capsize the dog."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Woman did not capsize the dog.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Dogs are not boats, so they cannot capsize.\n2. Boats are the only objects that can capsize.", "affected_reasoning": ["Dogs are not boats, so they cannot capsize.", "Boats are only objects that can capsize."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Woman capsize dog\nsubject token: Woman\nobject token: dog\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Man capsize dog\n2. Child capsize dog\n3. Teacher capsize dog\n4. Artist capsize dog\n5. Scientist capsize dog\n\nQ2. Replacements:\n1. Woman capsize cat\n2. Woman capsize bird\n3. Woman capsize fish\n4. Woman capsize rabbit\n5. Woman capsize mouse", "subject_replaced": ["Teacher capsize dog", "Artist capsize dog", "Child capsize dog", "Man capsize dog", "Scientist capsize dog"], "object_replaced": ["Woman capsize mouse", "Woman capsize fish", "Woman capsize cat", "Woman capsize bird", "Woman capsize rabbit"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Woman capsize dog\nsubject token: Woman\nobject token: dog\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants: Female capsize dog, Lady capsize dog, Girl capsize dog, Maiden capsize dog, Womanhood capsize dog\nQ2. Variants: Woman overturns dog, Woman flips dog, Woman tips dog, Woman jostles dog, Woman topples dog\nQ3. Variants: Woman capsize pup, Woman capsize canine, Woman capsize hound, Woman capsize mutt, Woman capsize pooch", "subject_replaced": ["Womanhood capsize dog", "Female capsize dog", "Lady capsize dog", "Maiden capsize dog", "Girl capsize dog"], "verb_replaced": ["Woman topples dog", "Woman tips dog", "Woman jostles dog", "Woman flips dog", "Woman overturns dog"], "object_replaced": ["Woman capsize pooch", "Woman capsize pup", "Woman capsize hound", "Woman capsize mutt", "Woman capsize canine"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Woman capsize dog\n", "AffectedParaphraseMaker_gptoutput": "\n1. Female overturn canine\n2. Lady overturn pooch\n3. Female flip over pup\n4. Woman overturn hound\n5. Lady flip canine", "affected_paraphrase": ["Female overturn canine", "Lady overturn pooch", "Lady flip canine", "Female flip over pup", "Woman overturn hound"]}]}
{"inputs": {"id": 1241, "prompt": "Shovel dump dirt", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Shovel", "verb": "dump", "object": "dirt", "neg": null, "prompt_polarity_grounded": "Do not shovel dump dirt."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Do not shovel dump dirt.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Dump dirt contains contaminants.\n2. Shoveling dump dirt can spread contaminants.", "affected_reasoning": ["Dump dirt contains contaminants.", "Shoveling dump dirt can spread contaminants."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Shovel dump dirt\nsubject token: Shovel\nobject token: dirt\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\n1. Hammer dump dirt\n2. Pencil dump dirt\n3. Fork dump dirt\n4. Knife dump dirt\n5. Hammer dump clay\n\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n1. Shovel dump sand\n2. Shovel dump gravel\n3. Shovel dump rock\n4. Shovel dump wood\n5. Shovel dump plastic", "subject_replaced": ["Fork dump dirt", "Knife dump dirt", "Make 5 such replacements.", "Pencil dump dirt", "Hammer dump clay", "Hammer dump dirt"], "object_replaced": ["Shovel dump rock", "Shovel dump gravel", "Make 5 such replacements.", "Shovel dump wood", "Shovel dump plastic", "Shovel dump sand"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Shovel dump dirt\nsubject token: Shovel\nobject token: dirt\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Scoop dump dirt\n2. Dig dump dirt\n3. Spade dump dirt\n4. Excavate dump dirt\n5. Unearth dump dirt\n\nQ2.\n1. Shovel heave dirt\n2. Shovel fling dirt\n3. Shovel hurl dirt\n4. Shovel pitch dirt\n5. Shovel toss dirt\n\nQ3.\n1. Shovel dump soil\n2. Shovel dump clay\n3. Shovel dump gravel\n4. Shovel dump sand\n5. Shovel dump pebbles", "subject_replaced": ["Excavate dump dirt", "Dig dump dirt", "Scoop dump dirt", "Unearth dump dirt", "Spade dump dirt"], "verb_replaced": ["Shovel fling dirt", "Shovel heave dirt", "Shovel pitch dirt", "Shovel hurl dirt", "Shovel toss dirt"], "object_replaced": ["Shovel dump gravel", "Shovel dump soil", "Shovel dump sand", "Shovel dump pebbles", "Shovel dump clay"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Shovel dump dirt\n", "AffectedParaphraseMaker_gptoutput": "\n1. Scoop up soil and discard it\n2. Dig and discard soil\n3. Scoop and dispose of earth\n4. Dig and dispose of dirt\n5. Scoop and throw away dirt", "affected_paraphrase": ["Dig and dispose of dirt", "Scoop and dispose of earth", "Scoop and throw away dirt", "Dig and discard soil", "Scoop up soil and discard it"]}]}
{"inputs": {"id": 1244, "prompt": "A plane squashes house", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "plane", "verb": "squashes", "object": "house", "neg": null, "prompt_polarity_grounded": "A plane squashes house"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A plane squashes house. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Plane falls from sky. \n2. Plane lands on house.", "affected_reasoning": ["Plane falls from sky.", "Plane lands on house."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: A plane squashes house\nsubject token: plane\nobject token: house\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A car squashes house\n2. A boat squashes house\n3. A train squashes house\n4. A balloon squashes house\n5. A rocket squashes house\n\nQ2. Replacements:\n1. A plane squashes tree\n2. A plane squashes mountain\n3. A plane squashes lake\n4. A plane squashes car\n5. A plane squashes balloon", "subject_replaced": ["A car squashes house", "A train squashes house", "A boat squashes house", "A rocket squashes house", "A balloon squashes house"], "object_replaced": ["A plane squashes mountain", "A plane squashes car", "A plane squashes balloon", "A plane squashes lake", "A plane squashes tree"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: A plane squashes house\nsubject token: plane\nobject token: house\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A jet squashes house, A glider squashes house, An aircraft squashes house, A biplane squashes house, A helicopter squashes house.\n\nQ2. A plane crushes house, A plane flattens house, A plane demolishes house, A plane smashes house, A plane pulverizes house.\n\nQ3. A plane squashes building, A plane squashes cottage, A plane squashes shack, A plane squashes villa, A plane squashes manor.", "subject_replaced": ["A glider squashes house", "A helicopter squashes house.", "An aircraft squashes house", "A jet squashes house", "A biplane squashes house"], "verb_replaced": ["A plane demolishes house", "A plane pulverizes house.", "A plane smashes house", "A plane flattens house", "A plane crushes house"], "object_replaced": ["A plane squashes cottage", "A plane squashes villa", "A plane squashes shack", "A plane squashes building", "A plane squashes manor."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: A plane squashes house\n", "AffectedParaphraseMaker_gptoutput": "\n1. An aircraft flattens a residence\n2. An aeroplane crushes a home\n3. An airplane compresses a domicile\n4. An airplane flattens a dwelling\n5. An airplane smashes a house", "affected_paraphrase": ["An airplane compresses a domicile", "An aeroplane crushes a home", "An aircraft flattens a residence", "An airplane flattens a dwelling", "An airplane smashes a house"]}]}
{"inputs": {"id": 1249, "prompt": "the octopus gropes cream", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "octopus", "verb": "gropes", "object": "cream", "neg": null, "prompt_polarity_grounded": "The octopus does not grope cream."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The octopus does not grope cream.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Octopuses do not eat cream. \n2. Cream is not a food source for octopuses.", "affected_reasoning": ["Octopuses do not eat cream.", "Cream is not food source for octopuses."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the octopus gropes cream\nsubject token: octopus\nobject token: cream\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The elephant gropes cream\n2. The giraffe gropes cream\n3. The lion gropes cream\n4. The zebra gropes cream\n5. The hippo gropes cream\n\nQ2. Replacements:\n1. The octopus gropes ice\n2. The octopus gropes snow\n3. The octopus gropes sugar\n4. The octopus gropes flour\n5. The octopus gropes butter", "subject_replaced": ["The giraffe gropes cream", "The zebra gropes cream", "The hippo gropes cream", "The lion gropes cream", "The elephant gropes cream"], "object_replaced": ["The octopus gropes snow", "The octopus gropes butter", "The octopus gropes flour", "The octopus gropes sugar", "The octopus gropes ice"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the octopus gropes cream\nsubject token: octopus\nobject token: cream\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The squid gropes cream, The cuttlefish gropes cream, The cephalopod gropes cream, The mollusk gropes cream, The invertebrate gropes cream.\n\nQ2. The octopus caresses cream, The octopus fondles cream, The octopus pats cream, The octopus strokes cream, The octopus squeezes cream.\n\nQ3. The octopus gropes yogurt, The octopus gropes custard, The octopus gropes ice cream, The octopus gropes sherbet, The octopus gropes sorbet.", "subject_replaced": ["The cuttlefish gropes cream", "The cephalopod gropes cream", "The squid gropes cream", "The invertebrate gropes cream.", "The mollusk gropes cream"], "verb_replaced": ["The octopus squeezes cream.", "The octopus fondles cream", "The octopus caresses cream", "The octopus strokes cream", "The octopus pats cream"], "object_replaced": ["The octopus gropes sorbet.", "The octopus gropes custard", "The octopus gropes sherbet", "The octopus gropes yogurt", "The octopus gropes ice cream"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the octopus gropes cream\n", "AffectedParaphraseMaker_gptoutput": "\n1. The octopus feels around for cream.\n2. The octopus searches for cream.\n3. The octopus fumbles for cream.\n4. The octopus feels its way to cream.\n5. The octopus hunts for cream.", "affected_paraphrase": ["The octopus hunts for cream.", "The octopus feels its way to cream.", "The octopus fumbles for cream.", "The octopus searches for cream.", "The octopus feels around for cream."]}]}
{"inputs": {"id": 1255, "prompt": "Spatula drains sand", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Spatula", "verb": "drains", "object": "sand", "neg": null, "prompt_polarity_grounded": "Spatula does not drain sand."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Spatula does not drain sand.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Spatulas are not designed to drain sand. \n2. Sand is too heavy and dense for a spatula to lift.", "affected_reasoning": ["Spatulas are not designed to drain sand.", "Sand is too heavy and dense for spatula to lift."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Spatula drains sand\nsubject token: Spatula\nobject token: sand\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hammer drains sand\n2. Fork drains sand\n3. Knife drains sand\n4. Ladle drains sand\n5. Whisk drains sand\n\nQ2. Replacements:\n1. Spatula drains water\n2. Spatula drains flour\n3. Spatula drains sugar\n4. Spatula drains salt\n5. Spatula drains rice", "subject_replaced": ["Whisk drains sand", "Hammer drains sand", "Fork drains sand", "Ladle drains sand", "Knife drains sand"], "object_replaced": ["Spatula drains sugar", "Spatula drains flour", "Spatula drains salt", "Spatula drains water", "Spatula drains rice"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Spatula drains sand\nsubject token: Spatula\nobject token: sand\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Scoop drains sand, Skimmer drains sand, Ladle drains sand, Spade drains sand, Trowel drains sand.\nQ2. Spatula sieves sand, Spatula filters sand, Spatula scoops sand, Spatula skims sand, Spatula ladles sand.\nQ3. Spatula drains gravel, Spatula drains pebbles, Spatula drains soil, Spatula drains dirt, Spatula drains sediment.", "subject_replaced": ["Scoop drains sand", "Ladle drains sand", "Spade drains sand", "Skimmer drains sand", "Trowel drains sand."], "verb_replaced": ["Spatula filters sand", "Spatula ladles sand.", "Spatula skims sand", "Spatula sieves sand", "Spatula scoops sand"], "object_replaced": ["Spatula drains soil", "Spatula drains pebbles", "Spatula drains dirt", "Spatula drains gravel", "Spatula drains sediment."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Spatula drains sand\n", "AffectedParaphraseMaker_gptoutput": "\n1. The spatula removes sand from a surface.\n2. The spatula scoops up sand.\n3. The spatula extracts sand.\n4. The spatula clears away sand.\n5. The spatula vacuums up sand.", "affected_paraphrase": ["The spatula vacuums up sand.", "The spatula extracts sand.", "The spatula scoops up sand.", "The spatula clears away sand.", "The spatula removes sand from a surface."]}]}
{"inputs": {"id": 1256, "prompt": "a monkey peels tree", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "monkey", "verb": "peels", "object": "tree", "neg": null, "prompt_polarity_grounded": "a monkey peels tree"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a monkey peels tree. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Monkey grabs tree bark with its hands.\n2. Monkey pulls bark off tree.", "affected_reasoning": ["Monkey grabs tree bark with its hands.", "Monkey pulls bark off tree."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a monkey peels tree\nsubject token: monkey\nobject token: tree\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a cat peels tree\n2. a person peels tree\n3. a dog peels tree\n4. a bird peels tree\n5. a fish peels tree\n\nQ2. Replacements:\n1. a monkey peels rock\n2. a monkey peels house\n3. a monkey peels car\n4. a monkey peels mountain\n5. a monkey peels ocean", "subject_replaced": ["a cat peels tree", "a person peels tree", "a dog peels tree", "a fish peels tree", "a bird peels tree"], "object_replaced": ["a monkey peels rock", "a monkey peels ocean", "a monkey peels car", "a monkey peels house", "a monkey peels mountain"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a monkey peels tree\nsubject token: monkey\nobject token: tree\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A primate peels tree, A simian peels tree, An ape peels tree, A chimpanzee peels tree, A baboon peels tree.\nQ2. A monkey strips tree, A monkey shaves tree, A monkey scrapes tree, A monkey chips tree, A monkey hacks tree.\nQ3. A monkey peels bark, A monkey peels branch, A monkey peels foliage, A monkey peels twig, A monkey peels foliage.", "subject_replaced": ["A simian peels tree", "A baboon peels tree.", "A chimpanzee peels tree", "An ape peels tree", "A primate peels tree"], "verb_replaced": ["A monkey chips tree", "A monkey hacks tree.", "A monkey strips tree", "A monkey shaves tree", "A monkey scrapes tree"], "object_replaced": ["A monkey peels twig", "A monkey peels branch", "A monkey peels bark", "A monkey peels foliage", "A monkey peels foliage."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a monkey peels tree\n", "AffectedParaphraseMaker_gptoutput": "\n1. A primate strips bark from a tree.\n2. A simian is removing the outer layer of a tree.\n3. A monkey is taking off the skin of a tree.\n4. A monkey is removing the outer covering of a tree.\n5. A monkey is taking away the bark of a tree.", "affected_paraphrase": ["A simian is removing the outer layer of a tree.", "A primate strips bark from a tree.", "A monkey is taking off the skin of a tree.", "A monkey is removing the outer covering of a tree.", "A monkey is taking away the bark of a tree."]}]}
{"inputs": {"id": 1257, "prompt": "ant seizes pea", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "ant", "verb": "seizes", "object": "pea", "neg": null, "prompt_polarity_grounded": "ant seizes pea"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "ant seizes pea. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Peas are small round objects. \n2. The mouse is trying to eat them.", "affected_reasoning": ["Peas are small round objects.", "The mouse is trying to eat them."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: ant seizes pea\nsubject token: ant\nobject token: pea\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Tiger seizes pea\n2. Elephant seizes pea\n3. Lion seizes pea\n4. Fox seizes pea\n5. Wolf seizes pea\n\nQ2. Replacements:\n1. Ant seizes apple\n2. Ant seizes banana\n3. Ant seizes orange\n4. Ant seizes grape\n5. Ant seizes strawberry", "subject_replaced": ["Wolf seizes pea", "Lion seizes pea", "Fox seizes pea", "Elephant seizes pea", "Tiger seizes pea"], "object_replaced": ["Ant seizes strawberry", "Ant seizes grape", "Ant seizes banana", "Ant seizes apple", "Ant seizes orange"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: ant seizes pea\nsubject token: ant\nobject token: pea\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. Beetle seizes pea\n2. Spider seizes pea\n3. Insect seizes pea\n4. Bug seizes pea\n5. Larva seizes pea\n\nQ2. Variants:\n1. Ant grabs pea\n2. Ant snatches pea\n3. Ant captures pea\n4. Ant seizes up pea\n5. Ant takes pea\n\nQ3. Variants:\n1. Ant seizes bean\n2. Ant seizes lentil\n3. Ant seizes chickpea\n4. Ant seizes pea pod\n5. Ant seizes split pea", "subject_replaced": ["Larva seizes pea", "Spider seizes pea", "Beetle seizes pea", "Insect seizes pea", "Bug seizes pea"], "verb_replaced": ["Ant captures pea", "Ant grabs pea", "Ant snatches pea", "Ant takes pea", "Ant seizes up pea"], "object_replaced": ["Ant seizes bean", "Ant seizes split pea", "Ant seizes pea pod", "Ant seizes lentil", "Ant seizes chickpea"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: ant seizes pea\n", "AffectedParaphraseMaker_gptoutput": "\n1. An ant captures a pea\n2. An ant grabs a pea\n3. An ant takes a pea\n4. An ant snatches a pea\n5. An ant clasps a pea", "affected_paraphrase": ["An ant captures a pea", "An ant snatches a pea", "An ant clasps a pea", "An ant grabs a pea", "An ant takes a pea"]}]}
{"inputs": {"id": 1265, "prompt": "Infant packs truck", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Infant", "verb": "packs", "object": "truck", "neg": null, "prompt_polarity_grounded": "Infant does not pack truck."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Infant does not pack truck.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Infants are too young to drive.\n2. Driving is necessary to pack a truck.", "affected_reasoning": ["Infants are too young to drive.", "Driving is necessary to pack truck."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Infant packs truck\nsubject token: Infant\nobject token: truck\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Puppy packs truck\n2. Child packs truck\n3. Adult packs truck\n4. Baby packs truck\n5. Toddler packs truck\n\nQ2. Replacements:\n1. Infant packs car\n2. Infant packs bus\n3. Infant packs van\n4. Infant packs bike\n5. Infant packs train", "subject_replaced": ["Child packs truck", "Toddler packs truck", "Puppy packs truck", "Baby packs truck", "Adult packs truck"], "object_replaced": ["Infant packs bus", "Infant packs train", "Infant packs bike", "Infant packs van", "Infant packs car"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Infant packs truck\nsubject token: Infant\nobject token: truck\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Baby packs truck, Toddler packs truck, Child packs truck, Youth packs truck, Adolescent packs truck\nQ2. Infant loads truck, Infant hauls truck, Infant drags truck, Infant transports truck, Infant carries truck\nQ3. Infant packs van, Infant packs lorry, Infant packs SUV, Infant packs jeep, Infant packs pickup", "subject_replaced": ["Child packs truck", "Toddler packs truck", "Youth packs truck", "Baby packs truck", "Adolescent packs truck"], "verb_replaced": ["Infant transports truck", "Infant drags truck", "Infant hauls truck", "Infant loads truck", "Infant carries truck"], "object_replaced": ["Infant packs pickup", "Infant packs jeep", "Infant packs SUV", "Infant packs van", "Infant packs lorry"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Infant packs truck\n", "AffectedParaphraseMaker_gptoutput": "\n1. A baby has a lot of stuff.\n2. A baby has a lot of belongings.\n3. A baby has a lot of items.\n4. A baby has a lot of cargo.\n5. A baby has a lot of luggage.", "affected_paraphrase": ["A baby has a lot of stuff.", "A baby has a lot of cargo.", "A baby has a lot of luggage.", "A baby has a lot of belongings.", "A baby has a lot of items."]}]}
{"inputs": {"id": 1270, "prompt": "a desert absorbs water", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "desert", "verb": "absorbs", "object": "water", "neg": null, "prompt_polarity_grounded": "a desert absorbs water"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a desert absorbs water. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Deserts are dry because they receive very little rainfall. \n2. When it does rain, the desert absorbs the water quickly.", "affected_reasoning": ["Deserts are dry because they receive very little rainfall.", "When it does rain, desert absorbs water quickly."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a desert absorbs water\nsubject token: desert\nobject token: water\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A balloon absorbs water\n2. A mountain absorbs water\n3. A river absorbs water\n4. A tree absorbs water\n5. A cloud absorbs water\n\nQ2. Replacements:\n1. A desert absorbs electricity\n2. A desert absorbs air\n3. A desert absorbs fire\n4. A desert absorbs ice\n5. A desert absorbs wind", "subject_replaced": ["A cloud absorbs water", "A tree absorbs water", "A river absorbs water", "A mountain absorbs water", "A balloon absorbs water"], "object_replaced": ["A desert absorbs electricity", "A desert absorbs fire", "A desert absorbs air", "A desert absorbs wind", "A desert absorbs ice"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a desert absorbs water\nsubject token: desert\nobject token: water\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A wasteland absorbs water, A barren absorbs water, A steppe absorbs water, A savanna absorbs water, A scrubland absorbs water.\n\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\n\nA desert soaks up water, A desert drinks water, A desert gulps water, A desert imbibes water, A desert quenches water.\n\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n\nA desert absorbs moisture, A desert absorbs liquid, A desert absorbs fluid, A desert absorbs humidity, A desert absorbs precipitation.", "subject_replaced": ["A wasteland absorbs water", " A barren absorbs water", " A steppe absorbs water", " A savanna absorbs water", " A scrubland absorbs water."], "verb_replaced": ["Write up to 5 such variants.", "A desert soaks up water", " A desert drinks water", " A desert gulps water", " A desert imbibes water", " A desert quenches water."], "object_replaced": ["A desert absorbs moisture", " A desert absorbs liquid", " A desert absorbs fluid", " A desert absorbs humidity", " A desert absorbs precipitation.", "Write up to 5 such variants."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a desert absorbs water\n", "AffectedParaphraseMaker_gptoutput": "\n1. A desert soaks up moisture\n2. A desert takes in water\n3. A desert drinks up water\n4. A desert gulps down water\n5. A desert ingests water", "affected_paraphrase": ["A desert ingests water", "A desert gulps down water", "A desert takes in water", "A desert soaks up moisture", "A desert drinks up water"]}]}
{"inputs": {"id": 1273, "prompt": "Shirt peels banana", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Shirt", "verb": "peels", "object": "banana", "neg": null, "prompt_polarity_grounded": "Shirt does not peel banana."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Shirt does not peel banana.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. T-Shirts are clothing items. \n2. Clothing items cannot peel bananas.", "affected_reasoning": ["T-Shirts are clothing items.", "Clothing items cannot peel bananas."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Shirt peels banana\nsubject token: Shirt\nobject token: banana\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1.\n1. Jacket peels banana\n2. Pen peels banana\n3. Book peels banana\n4. Glass peels banana\n5. Chair peels banana\n\nQ2.\n1. Shirt peels apple\n2. Shirt peels orange\n3. Shirt peels pear\n4. Shirt peels grape\n5. Shirt peels strawberry", "subject_replaced": ["Glass peels banana", "Chair peels banana", "Book peels banana", "Pen peels banana", "Jacket peels banana"], "object_replaced": ["Shirt peels grape", "Shirt peels strawberry", "Shirt peels orange", "Shirt peels pear", "Shirt peels apple"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Shirt peels banana\nsubject token: Shirt\nobject token: banana\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Jacket peels banana, Blouse peels banana, Sweater peels banana, Top peels banana, Vest peels banana\nQ2. Shirt strips banana, Shirt peels off banana, Shirt skins banana, Shirt shreds banana, Shirt unpeels banana\nQ3. Shirt peels apple, Shirt peels peach, Shirt peels mango, Shirt peels kiwi, Shirt peels pineapple", "subject_replaced": ["Blouse peels banana", "Top peels banana", "Vest peels banana", "Sweater peels banana", "Jacket peels banana"], "verb_replaced": ["Shirt peels off banana", "Shirt shreds banana", "Shirt strips banana", "Shirt skins banana", "Shirt unpeels banana"], "object_replaced": ["Shirt peels peach", "Shirt peels mango", "Shirt peels pineapple", "Shirt peels kiwi", "Shirt peels apple"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Shirt peels banana\n", "AffectedParaphraseMaker_gptoutput": "\n1. Shirt strips banana\n2. Shirt removes banana skin\n3. Shirt takes off banana peel\n4. Shirt undresses banana\n5. Shirt uncovers banana", "affected_paraphrase": ["Shirt strips banana", "Shirt takes off banana peel", "Shirt undresses banana", "Shirt removes banana skin", "Shirt uncovers banana"]}]}
{"inputs": {"id": 1278, "prompt": "Elephant drops rabbit", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Elephant", "verb": "drops", "object": "rabbit", "neg": null, "prompt_polarity_grounded": "Elephant drops rabbit"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Elephant drops rabbit. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nElephant is large and strong. Rabbit is small and weak.", "affected_reasoning": ["Elephant is large and strong", "Rabbit is small and weak."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Elephant drops rabbit\nsubject token: Elephant\nobject token: rabbit\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Tiger drops rabbit\n2. Gorilla drops rabbit\n3. Lion drops rabbit\n4. Hippo drops rabbit\n5. Rhinoceros drops rabbit\n\nQ2. Replacements:\n1. Elephant drops mouse\n2. Elephant drops squirrel\n3. Elephant drops bird\n4. Elephant drops fish\n5. Elephant drops frog", "subject_replaced": ["Tiger drops rabbit", "Rhinoceros drops rabbit", "Lion drops rabbit", "Gorilla drops rabbit", "Hippo drops rabbit"], "object_replaced": ["Elephant drops bird", "Elephant drops frog", "Elephant drops squirrel", "Elephant drops mouse", "Elephant drops fish"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Elephant drops rabbit\nsubject token: Elephant\nobject token: rabbit\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants:\n1. Mammoth drops rabbit\n2. Hippopotamus drops rabbit\n3. Rhinoceros drops rabbit\n4. Pachyderm drops rabbit\n5. Beast drops rabbit\n\nQ2. Variants:\n1. Elephant flings rabbit\n2. Elephant tosses rabbit\n3. Elephant hurls rabbit\n4. Elephant launches rabbit\n5. Elephant propels rabbit\n\nQ3. Variants:\n1. Elephant drops hare\n2. Elephant drops rodent\n3. Elephant drops bunny\n4. Elephant drops marmot\n5. Elephant drops pika", "subject_replaced": ["Hippopotamus drops rabbit", "Mammoth drops rabbit", "Pachyderm drops rabbit", "Beast drops rabbit", "Rhinoceros drops rabbit"], "verb_replaced": ["Elephant flings rabbit", "Elephant tosses rabbit", "Elephant hurls rabbit", "Elephant propels rabbit", "Elephant launches rabbit"], "object_replaced": ["Elephant drops marmot", "Elephant drops rodent", "Elephant drops hare", "Elephant drops bunny", "Elephant drops pika"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Elephant drops rabbit\n", "AffectedParaphraseMaker_gptoutput": "\n1. An elephant let go of a rabbit.\n2. An elephant released a rabbit.\n3. An elephant relinquished a rabbit.\n4. An elephant abandoned a rabbit.\n5. An elephant discharged a rabbit.", "affected_paraphrase": ["An elephant relinquished a rabbit.", "An elephant let go of a rabbit.", "An elephant discharged a rabbit.", "An elephant abandoned a rabbit.", "An elephant released a rabbit."]}]}
{"inputs": {"id": 1280, "prompt": "pin masks hand", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "pin", "verb": "masks", "object": "hand", "neg": null, "prompt_polarity_grounded": "Pin masks not hand."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Pin masks not hand.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Masks cover the face to protect from germs.\n2. Hands spread germs, so masks are used instead.", "affected_reasoning": ["Masks cover face to protect from germs.", "Hands spread germs, so masks are used instead."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: pin masks hand\nsubject token: pin\nobject token: hand\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. text: wheel masks hand\n2. text: button masks hand\n3. text: key masks hand\n4. text: lock masks hand\n5. text: ribbon masks hand\n\nQ2. Replacements:\n1. text: pin masks glove\n2. text: pin masks foot\n3. text: pin masks arm\n4. text: pin masks leg\n5. text: pin masks head", "subject_replaced": ["ribbon masks hand", "button masks hand", "key masks hand", "lock masks hand", "wheel masks hand"], "object_replaced": ["pin masks head", "pin masks arm", "pin masks glove", "pin masks foot", "pin masks leg"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: pin masks hand\nsubject token: pin\nobject token: hand\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Jab masks hand, Push masks hand, Pierce masks hand, Stick masks hand, Jab masks hand.\nQ2. Pin fastens hand, Pin secures hand, Pin clasps hand, Pin grips hand, Pin holds hand.\nQ3. Pin masks palm, Pin masks fist, Pin masks digits, Pin masks knuckles, Pin masks fingers.", "subject_replaced": ["Pierce masks hand", "Jab masks hand.", "Push masks hand", "Jab masks hand", "Stick masks hand"], "verb_replaced": ["Pin grips hand", "Pin fastens hand", "Pin clasps hand", "Pin holds hand.", "Pin secures hand"], "object_replaced": ["Pin masks fingers.", "Pin masks fist", "Pin masks digits", "Pin masks palm", "Pin masks knuckles"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: pin masks hand\n", "AffectedParaphraseMaker_gptoutput": "\n1. Fasten face coverings with a thumbtack\n2. Secure face coverings with a pushpin\n3. Attach face coverings with a safety pin\n4. Secure face coverings with a stickpin\n5. Affix face coverings with a corsage pin", "affected_paraphrase": ["Affix face coverings with a corsage pin", "Fasten face coverings with a thumbtack", "Attach face coverings with a safety pin", "Secure face coverings with a pushpin", "Secure face coverings with a stickpin"]}]}
{"inputs": {"id": 1281, "prompt": "Claw rips mud", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Claw", "verb": "rips", "object": "mud", "neg": null, "prompt_polarity_grounded": "Claw does not rip mud."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Claw does not rip mud.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Mud is a soft material.\n2. Claws are designed to grip hard surfaces.", "affected_reasoning": ["Mud is soft material.", "Claws are designed to grip hard surfaces."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Claw rips mud\nsubject token: Claw\nobject token: mud\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "1. Fist rips clouds\n2. Hammer rips stars\n3. Knife rips snow\n4. Spoon rips rain\n5. Fork rips wind\n\n1. Claw rips paper\n2. Claw rips stone\n3. Claw rips glass\n4. Claw rips wood\n5. Claw rips metal", "subject_replaced": ["Fork rips wind", "Hammer rips stars", "Fist rips clouds", "Knife rips snow", "Spoon rips rain"], "object_replaced": ["Claw rips metal", "Claw rips wood", "Claw rips stone", "Claw rips paper", "Claw rips glass"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Claw rips mud\nsubject token: Claw\nobject token: mud\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Talons tear mud, Paws shred mud, Claws gouge mud, Nails rip mud, Talons rend mud.\nQ2. Claw shreds mud, Claw tears mud, Claw rends mud, Claw gouges mud, Claw rips apart mud.\nQ3. Claw rips soil, Claw rips clay, Claw rips dirt, Claw rips silt, Claw rips loam.", "subject_replaced": ["Talons rend mud.", "Nails rip mud", "Claws gouge mud", "Talons tear mud", "Paws shred mud"], "verb_replaced": ["Claw gouges mud", "Claw rends mud", "Claw rips apart mud.", "Claw tears mud", "Claw shreds mud"], "object_replaced": ["Claw rips silt", "Claw rips soil", "Claw rips clay", "Claw rips dirt", "Claw rips loam."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Claw rips mud\n", "AffectedParaphraseMaker_gptoutput": "\n1. Claws tear through the mud\n2. Claws shred the mud\n3. Claws shredding the mud\n4. Claws ripping apart the mud\n5. Claws ripping through the mud", "affected_paraphrase": ["Claws shred the mud", "Claws ripping through the mud", "Claws ripping apart the mud", "Claws tear through the mud", "Claws shredding the mud"]}]}
{"inputs": {"id": 1285, "prompt": "a butterfly tugged leaf", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "butterfly", "verb": "tugged", "object": "leaf", "neg": null, "prompt_polarity_grounded": "a butterfly tugged leaf"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a butterfly tugged leaf. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The butterfly landed on the leaf.\n2. The butterfly tugged the leaf.", "affected_reasoning": ["The butterfly landed on leaf.", "The butterfly tugged leaf."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a butterfly tugged leaf\nsubject token: butterfly\nobject token: leaf\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A dragon tugged leaf\n2. A bee tugged leaf\n3. A bird tugged leaf\n4. A fish tugged leaf\n5. A mouse tugged leaf\n\nQ2. Replacements:\n1. A butterfly tugged rock\n2. A butterfly tugged flower\n3. A butterfly tugged tree\n4. A butterfly tugged cloud\n5. A butterfly tugged apple", "subject_replaced": ["A dragon tugged leaf", "A bird tugged leaf", "A fish tugged leaf", "A bee tugged leaf", "A mouse tugged leaf"], "object_replaced": ["A butterfly tugged tree", "A butterfly tugged apple", "A butterfly tugged rock", "A butterfly tugged cloud", "A butterfly tugged flower"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a butterfly tugged leaf\nsubject token: butterfly\nobject token: leaf\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A moth tugged leaf, A dragonfly tugged leaf, A bee tugged leaf, A fly tugged leaf, A mosquito tugged leaf.\n\nQ2. A butterfly yanked leaf, A butterfly pulled leaf, A butterfly dragged leaf, A butterfly lifted leaf, A butterfly pushed leaf.\n\nQ3. A butterfly tugged petal, A butterfly tugged blade, A butterfly tugged stem, A butterfly tugged twig, A butterfly tugged bud.", "subject_replaced": ["A dragonfly tugged leaf", "A mosquito tugged leaf.", "A moth tugged leaf", "A fly tugged leaf", "A bee tugged leaf"], "verb_replaced": ["A butterfly lifted leaf", "A butterfly dragged leaf", "A butterfly yanked leaf", "A butterfly pulled leaf", "A butterfly pushed leaf."], "object_replaced": ["A butterfly tugged twig", "A butterfly tugged bud.", "A butterfly tugged petal", "A butterfly tugged blade", "A butterfly tugged stem"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a butterfly tugged leaf\n", "AffectedParaphraseMaker_gptoutput": "\n1. A butterfly pulled on a leaf.\n2. A butterfly yanked a leaf.\n3. A butterfly grasped a leaf.\n4. A butterfly jerked a leaf.\n5. A butterfly tugged at a leaf.", "affected_paraphrase": ["A butterfly grasped a leaf.", "A butterfly tugged at a leaf.", "A butterfly jerked a leaf.", "A butterfly yanked a leaf.", "A butterfly pulled on a leaf."]}]}
{"inputs": {"id": 1289, "prompt": "hose squirts beans", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "hose", "verb": "squirts", "object": "beans", "neg": null, "prompt_polarity_grounded": "Hose does not squirt beans."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Hose does not squirt beans.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Beans are solid. \n2. Hoses are designed to carry liquids.", "affected_reasoning": ["Beans are solid.", "Hoses are designed to carry liquids."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: hose squirts beans\nsubject token: hose\nobject token: beans\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Car squirts beans\n2. Pen squirts beans\n3. Chair squirts beans\n4. Dog squirts beans\n5. Cat squirts beans\n\nQ2. Replacements:\n1. Hose squirts apples\n2. Hose squirts oranges\n3. Hose squirts grapes\n4. Hose squirts potatoes\n5. Hose squirts tomatoes", "subject_replaced": ["Chair squirts beans", "Pen squirts beans", "Car squirts beans", "Cat squirts beans", "Dog squirts beans"], "object_replaced": ["Hose squirts apples", "Hose squirts grapes", "Hose squirts potatoes", "Hose squirts tomatoes", "Hose squirts oranges"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: hose squirts beans\nsubject token: hose\nobject token: beans\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Pipe squirts beans\n2. Tube squirts beans\n3. Nozzle squirts beans\n4. Spigot squirts beans\n5. Sprayer squirts beans\n\nQ2.\n1. Hose spurts beans\n2. Hose ejects beans\n3. Hose discharges beans\n4. Hose propels beans\n5. Hose launches beans\n\nQ3.\n1. Hose squirts lentils\n2. Hose squirts peas\n3. Hose squirts chickpeas\n4. Hose squirts kidney beans\n5. Hose squirts black beans", "subject_replaced": ["Tube squirts beans", "Spigot squirts beans", "Nozzle squirts beans", "Pipe squirts beans", "Sprayer squirts beans"], "verb_replaced": ["Hose ejects beans", "Hose propels beans", "Hose spurts beans", "Hose launches beans", "Hose discharges beans"], "object_replaced": ["Hose squirts black beans", "Hose squirts peas", "Hose squirts lentils", "Hose squirts chickpeas", "Hose squirts kidney beans"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: hose squirts beans\n", "AffectedParaphraseMaker_gptoutput": "\n1. The hose emits a jet of beans.\n2. The hose ejects beans.\n3. The hose shoots out beans.\n4. The hose spurts beans.\n5. The hose sprays beans.", "affected_paraphrase": ["The hose spurts beans.", "The hose emits a jet of beans.", "The hose ejects beans.", "The hose shoots out beans.", "The hose sprays beans."]}]}
{"inputs": {"id": 1292, "prompt": "a tiger heaves door", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "tiger", "verb": "heaves", "object": "door", "neg": null, "prompt_polarity_grounded": "a tiger heaves door"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a tiger heaves door. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Tiger pushes door with its paw.\n2. Door opens due to force.", "affected_reasoning": ["Tiger pushes door with its paw.", "Door opens due to force."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a tiger heaves door\nsubject token: tiger\nobject token: door\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a monkey heaves door\n2. a lion heaves door\n3. a bear heaves door\n4. a crocodile heaves door\n5. a snake heaves door\n\nQ2. Replacements:\n1. a tiger heaves window\n2. a tiger heaves chair\n3. a tiger heaves table\n4. a tiger heaves wall\n5. a tiger heaves bed", "subject_replaced": ["a lion heaves door", "a monkey heaves door", "a bear heaves door", "a snake heaves door", "a crocodile heaves door"], "object_replaced": ["a tiger heaves table", "a tiger heaves chair", "a tiger heaves window", "a tiger heaves bed", "a tiger heaves wall"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a tiger heaves door\nsubject token: tiger\nobject token: door\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A lion heaves door, A panther heaves door, A jaguar heaves door, A cheetah heaves door, A cougar heaves door.\n\nQ2. A tiger pushes door, A tiger pulls door, A tiger slams door, A tiger opens door, A tiger closes door.\n\nQ3. A tiger heaves gate, A tiger heaves portal, A tiger heaves entrance, A tiger heaves hatch, A tiger heaves window.", "subject_replaced": ["A cheetah heaves door", "A lion heaves door", "A cougar heaves door.", "A jaguar heaves door", "A panther heaves door"], "verb_replaced": ["A tiger closes door.", "A tiger pushes door", "A tiger pulls door", "A tiger opens door", "A tiger slams door"], "object_replaced": ["A tiger heaves portal", "A tiger heaves window.", "A tiger heaves hatch", "A tiger heaves entrance", "A tiger heaves gate"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a tiger heaves door\n", "AffectedParaphraseMaker_gptoutput": "\n1. A tiger pushes open the door with great effort.\n2. A tiger strains to open the door.\n3. A tiger exerts itself to open the door.\n4. A tiger struggles to open the door.\n5. A tiger applies force to the door to open it.", "affected_paraphrase": ["A tiger exerts itself to open the door.", "A tiger struggles to open the door.", "A tiger pushes open the door with great effort.", "A tiger strains to open the door.", "A tiger applies force to the door to open it."]}]}
{"inputs": {"id": 1293, "prompt": "Houses poke mud", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Houses", "verb": "poke", "object": "mud", "neg": null, "prompt_polarity_grounded": "Houses do not poke mud."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Houses do not poke mud.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Houses are not alive. \n2. Living things are capable of poking mud.", "affected_reasoning": ["Houses are not alive.", "Living things are capable of poking mud."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Houses poke mud\nsubject token: Houses\nobject token: mud\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Cars poke mud\n2. Trees poke mud\n3. Clouds poke mud\n4. People poke mud\n5. Animals poke mud\n\nQ2. Replacements:\n1. Houses poke water\n2. Houses poke snow\n3. Houses poke stone\n4. Houses poke air\n5. Houses poke glass", "subject_replaced": ["Animals poke mud", "People poke mud", "Cars poke mud", "Trees poke mud", "Clouds poke mud"], "object_replaced": ["Houses poke snow", "Houses poke glass", "Houses poke air", "Houses poke stone", "Houses poke water"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Houses poke mud\nsubject token: Houses\nobject token: mud\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Dwellings prod mud, Abodes jab mud, Mansions jab mud, Buildings prod mud, Structures jab mud.\nQ2. Houses thrust mud, Houses drive mud, Houses push mud, Houses shove mud, Houses tap mud.\nQ3. Houses poke sludge, Houses poke clay, Houses poke dirt, Houses poke soil, Houses poke muck.", "subject_replaced": ["Mansions jab mud", "Buildings prod mud", "Structures jab mud.", "Dwellings prod mud", "Abodes jab mud"], "verb_replaced": ["Houses tap mud.", "Houses push mud", "Houses drive mud", "Houses thrust mud", "Houses shove mud"], "object_replaced": ["Houses poke muck.", "Houses poke clay", "Houses poke sludge", "Houses poke dirt", "Houses poke soil"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Houses poke mud\n", "AffectedParaphraseMaker_gptoutput": "\n1. Buildings thrust dirt\n2. Structures jab soil\n3. Dwellings prod mud\n4. Abodes jabber muck\n5. Habitations prod mire", "affected_paraphrase": ["Abodes jabber muck", "Structures jab soil", "Dwellings prod mud", "Buildings thrust dirt", "Habitations prod mire"]}]}
{"inputs": {"id": 1297, "prompt": "a monkey puffs smoke", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "monkey", "verb": "puffs", "object": "smoke", "neg": null, "prompt_polarity_grounded": "a monkey puffs smoke"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a monkey puffs smoke. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Monkey sees humans smoking.\n2. Monkey imitates humans.", "affected_reasoning": ["Monkey sees humans smoking.", "Monkey imitates humans."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a monkey puffs smoke\nsubject token: monkey\nobject token: smoke\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A giraffe puffs smoke\n2. A lion puffs smoke\n3. A zebra puffs smoke\n4. A hippo puffs smoke\n5. A bear puffs smoke\n\nQ2. Replacements:\n1. A monkey puffs bubbles\n2. A monkey puffs fire\n3. A monkey puffs water\n4. A monkey puffs air\n5. A monkey puffs dust", "subject_replaced": ["A hippo puffs smoke", "A lion puffs smoke", "A zebra puffs smoke", "A bear puffs smoke", "A giraffe puffs smoke"], "object_replaced": ["A monkey puffs fire", "A monkey puffs air", "A monkey puffs dust", "A monkey puffs bubbles", "A monkey puffs water"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a monkey puffs smoke\nsubject token: monkey\nobject token: smoke\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A chimpanzee puffs smoke, A primate puffs smoke, An ape puffs smoke, A gorilla puffs smoke, A baboon puffs smoke.\n\nQ2. A monkey exhales smoke, A monkey emits smoke, A monkey releases smoke, A monkey blows smoke, A monkey disperses smoke.\n\nQ3. A monkey puffs vapor, A monkey puffs fumes, A monkey puffs haze, A monkey puffs mist, A monkey puffs fog.", "subject_replaced": ["A gorilla puffs smoke", "An ape puffs smoke", "A chimpanzee puffs smoke", "A primate puffs smoke", "A baboon puffs smoke."], "verb_replaced": ["A monkey exhales smoke", "A monkey disperses smoke.", "A monkey blows smoke", "A monkey emits smoke", "A monkey releases smoke"], "object_replaced": ["A monkey puffs fog.", "A monkey puffs fumes", "A monkey puffs mist", "A monkey puffs haze", "A monkey puffs vapor"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a monkey puffs smoke\n", "AffectedParaphraseMaker_gptoutput": "\n1. A primate exhales vapor.\n2. An ape emits smoke.\n3. A simian emits fumes.\n4. A monkey emits a cloud of smoke.\n5. A monkey blows out smoke.", "affected_paraphrase": ["A monkey emits a cloud of smoke.", "A primate exhales vapor.", "A simian emits fumes.", "A monkey blows out smoke.", "An ape emits smoke."]}]}
{"inputs": {"id": 1300, "prompt": "a lion licks frosting", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "lion", "verb": "licks", "object": "frosting", "neg": null, "prompt_polarity_grounded": "a lion licks frosting"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a lion licks frosting. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Lion smells frosting.\n2. Lion licks frosting.", "affected_reasoning": ["Lion smells frosting.", "Lion licks frosting."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a lion licks frosting\nsubject token: lion\nobject token: frosting\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A bear licks frosting\n2. A monkey licks frosting\n3. A dog licks frosting\n4. A giraffe licks frosting\n5. A tiger licks frosting\n\nQ2. Replacements:\n1. A lion licks ice cream\n2. A lion licks cake\n3. A lion licks candy\n4. A lion licks cookies\n5. A lion licks chocolate", "subject_replaced": ["A giraffe licks frosting", "A dog licks frosting", "A monkey licks frosting", "A tiger licks frosting", "A bear licks frosting"], "object_replaced": ["A lion licks chocolate", "A lion licks cake", "A lion licks cookies", "A lion licks candy", "A lion licks ice cream"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a lion licks frosting\nsubject token: lion\nobject token: frosting\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A tiger licks frosting, A panther licks frosting, A cheetah licks frosting, A cougar licks frosting, A jaguar licks frosting.\n\nQ2. A lion laps frosting, A lion slurps frosting, A lion nibbles frosting, A lion savors frosting, A lion devours frosting.\n\nQ3. A lion licks icing, A lion licks glaze, A lion licks topping, A lion licks cream, A lion licks sugar.", "subject_replaced": ["A cougar licks frosting", "A panther licks frosting", "A jaguar licks frosting.", "A tiger licks frosting", "A cheetah licks frosting"], "verb_replaced": ["A lion slurps frosting", "A lion laps frosting", "A lion devours frosting.", "A lion savors frosting", "A lion nibbles frosting"], "object_replaced": ["A lion licks cream", "A lion licks glaze", "A lion licks topping", "A lion licks icing", "A lion licks sugar."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a lion licks frosting\n", "AffectedParaphraseMaker_gptoutput": "\n1. A lion is licking a sugary topping.\n2. A lion is savoring a sweet glaze.\n3. A lion is enjoying a creamy topping.\n4. A lion is relishing a frosty topping.\n5. A lion is delighting in a sugary coating.", "affected_paraphrase": ["A lion is licking a sugary topping.", "A lion is relishing a frosty topping.", "A lion is enjoying a creamy topping.", "A lion is savoring a sweet glaze.", "A lion is delighting in a sugary coating."]}]}
{"inputs": {"id": 1301, "prompt": "an infant scrapes table", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "infant", "verb": "scrapes", "object": "table", "neg": null, "prompt_polarity_grounded": "an infant scrapes table"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "an infant scrapes table. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The infant reaches for something on the table. \n2. The infant's hand scrapes against the table.", "affected_reasoning": ["The infant reaches for something on table.", "The infant's hand scrapes against table."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: an infant scrapes table\nsubject token: infant\nobject token: table\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A dog scrapes table\n2. A teenager scrapes table\n3. A teacher scrapes table\n4. A bird scrapes table\n5. A cat scrapes table\n\nQ2. Replacements:\n1. An infant scrapes chair\n2. An infant scrapes wall\n3. An infant scrapes carpet\n4. An infant scrapes book\n5. An infant scrapes sofa", "subject_replaced": ["A dog scrapes table", "A cat scrapes table", "A teacher scrapes table", "A bird scrapes table", "A teenager scrapes table"], "object_replaced": ["An infant scrapes book", "An infant scrapes wall", "An infant scrapes carpet", "An infant scrapes chair", "An infant scrapes sofa"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: an infant scrapes table\nsubject token: infant\nobject token: table\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A baby scratches table, A toddler scrapes table, A newborn rubs table, A child scuffs table, A infant abrades table.\nQ2. An infant rubs table, An infant smears table, An infant taps table, An infant strokes table, An infant polishes table.\nQ3. An infant scrapes desk, An infant scrapes counter, An infant scrapes countertop, An infant scrapes surface, An infant scrapes tabletop.", "subject_replaced": ["A child scuffs table", "A newborn rubs table", "A toddler scrapes table", "A baby scratches table", "A infant abrades table."], "verb_replaced": ["An infant taps table", "An infant rubs table", "An infant smears table", "An infant strokes table", "An infant polishes table."], "object_replaced": ["An infant scrapes tabletop.", "An infant scrapes counter", "An infant scrapes desk", "An infant scrapes surface", "An infant scrapes countertop"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: an infant scrapes table\n", "AffectedParaphraseMaker_gptoutput": "\n1. A baby scratches the table.\n2. A young child is scratching the table.\n3. A toddler is scraping the table.\n4. A newborn is abrading the table.\n5. A small child is scuffing the table.", "affected_paraphrase": ["A baby scratches the table.", "A young child is scratching the table.", "A newborn is abrading the table.", "A toddler is scraping the table.", "A small child is scuffing the table."]}]}
{"inputs": {"id": 1306, "prompt": "An elephant filled bucket", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "elephant", "verb": "filled", "object": "bucket", "neg": null, "prompt_polarity_grounded": "A elephant did not fill bucket."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "A elephant did not fill bucket.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Elephants don't have hands to hold a bucket.\n2. Therefore, an elephant cannot fill a bucket.", "affected_reasoning": ["Elephants don't have hands to hold bucket.", "Therefore, elephant cannot fill bucket."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: An elephant filled bucket\nsubject token: elephant\nobject token: bucket\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A giraffe filled bucket\n2. A lion filled bucket\n3. A zebra filled bucket\n4. A hippo filled bucket\n5. A rhino filled bucket\n\nQ2. Replacements:\n1. An elephant filled cup\n2. An elephant filled bowl\n3. An elephant filled jar\n4. An elephant filled box\n5. An elephant filled container", "subject_replaced": ["A giraffe filled bucket", "A lion filled bucket", "A rhino filled bucket", "A hippo filled bucket", "A zebra filled bucket"], "object_replaced": ["An elephant filled bowl", "An elephant filled container", "An elephant filled cup", "An elephant filled box", "An elephant filled jar"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: An elephant filled bucket\nsubject token: elephant\nobject token: bucket\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A mammoth filled bucket, A pachyderm filled bucket, A rhinoceros filled bucket, A hippopotamus filled bucket, A tapir filled bucket.\nQ2. An elephant crammed bucket, An elephant packed bucket, An elephant loaded bucket, An elephant crammed bucket, An elephant filled bucket.\nQ3. An elephant filled pail, An elephant filled cask, An elephant filled vessel, An elephant filled jar, An elephant filled container.", "subject_replaced": ["A rhinoceros filled bucket", "A mammoth filled bucket", "A tapir filled bucket.", "A hippopotamus filled bucket", "A pachyderm filled bucket"], "verb_replaced": ["An elephant filled bucket.", "An elephant crammed bucket", "An elephant packed bucket", "An elephant loaded bucket"], "object_replaced": ["An elephant filled vessel", "An elephant filled container.", "An elephant filled cask", "An elephant filled pail", "An elephant filled jar"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: An elephant filled bucket\n", "AffectedParaphraseMaker_gptoutput": "\n1. A pail that was packed with an elephant.\n2. A bucket that was full of an elephant.\n3. A container that was filled with an elephant.\n4. A vessel that was overflowing with an elephant.\n5. A receptacle that was crammed with an elephant.", "affected_paraphrase": ["A receptacle that was crammed with an elephant.", "A vessel that was overflowing with an elephant.", "A container that was filled with an elephant.", "A bucket that was full of an elephant.", "A pail that was packed with an elephant."]}]}
{"inputs": {"id": 1308, "prompt": "Woman tugs paper", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Woman", "verb": "tugs", "object": "paper", "neg": null, "prompt_polarity_grounded": "Woman does not tug paper."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Woman does not tug paper.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Paper is too light to tug. \n2. Tugging requires a force that paper cannot provide.", "affected_reasoning": ["Paper is too light to tug.", "Tugging requires force that paper cannot provide."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Woman tugs paper\nsubject token: Woman\nobject token: paper\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Man tugs paper\n2. Child tugs paper\n3. Cat tugs paper\n4. Dog tugs paper\n5. Horse tugs paper\n\nQ2. Replacements:\n1. Woman tugs rock\n2. Woman tugs pencil\n3. Woman tugs book\n4. Woman tugs chair\n5. Woman tugs tree", "subject_replaced": ["Horse tugs paper", "Man tugs paper", "Cat tugs paper", "Dog tugs paper", "Child tugs paper"], "object_replaced": ["Woman tugs tree", "Woman tugs pencil", "Woman tugs book", "Woman tugs chair", "Woman tugs rock"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Woman tugs paper\nsubject token: Woman\nobject token: paper\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants: \n1. Female pulls paper \n2. Lady tugs parchment \n3. Woman yanks paper \n4. Girl drags paper \n5. Woman hauls paper \n\nQ2. Variants: \n1. Woman yanks paper \n2. Woman drags paper \n3. Woman hauls paper \n4. Woman pulls paper \n5. Woman jerks paper \n\nQ3. Variants: \n1. Woman tugs sheet \n2. Woman tugs card \n3. Woman tugs document \n4. Woman tugs parchment \n5. Woman tugs scroll", "subject_replaced": ["Lady tugs parchment", "Woman yanks paper", "Girl drags paper", "Woman hauls paper", "Female pulls paper"], "verb_replaced": ["Woman pulls paper", "Woman drags paper", "Woman yanks paper", "Woman hauls paper", "Woman jerks paper"], "object_replaced": ["Woman tugs document", "Woman tugs sheet", "Woman tugs card", "Woman tugs parchment", "Woman tugs scroll"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Woman tugs paper\n", "AffectedParaphraseMaker_gptoutput": "\n1. Female pulls sheet\n2. Lady yanks paper\n3. Woman hauls parchment\n4. Female drags paper\n5. Lady pulls paper", "affected_paraphrase": ["Woman hauls parchment", "Female drags paper", "Lady yanks paper", "Lady pulls paper", "Female pulls sheet"]}]}
{"inputs": {"id": 1310, "prompt": "the worm wrestles student", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "worm", "verb": "wrestles", "object": "student", "neg": null, "prompt_polarity_grounded": "The worm does not wrestle student."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The worm does not wrestle student.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Worms do not have arms or legs. \n2. Wrestling requires arms and legs.", "affected_reasoning": ["Worms do not have arms or legs.", "Wrestling requires arms and legs."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the worm wrestles student\nsubject token: worm\nobject token: student\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The cat wrestles student\n2. The elephant wrestles student\n3. The fish wrestles student\n4. The bird wrestles student\n5. The dog wrestles student\n\nQ2. Replacements:\n1. The worm wrestles teacher\n2. The worm wrestles professor\n3. The worm wrestles adult\n4. The worm wrestles child\n5. The worm wrestles baby", "subject_replaced": ["The cat wrestles student", "The elephant wrestles student", "The dog wrestles student", "The fish wrestles student", "The bird wrestles student"], "object_replaced": ["The worm wrestles baby", "The worm wrestles professor", "The worm wrestles teacher", "The worm wrestles child", "The worm wrestles adult"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the worm wrestles student\nsubject token: worm\nobject token: student\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The caterpillar wrestles student; The grub wrestles student; The maggot wrestles student; The larva wrestles student; The beetle wrestles student.\nQ2. The worm grapples student; The worm struggles student; The worm contends student; The worm battles student; The worm clashes student.\nQ3. The worm wrestles pupil; The worm wrestles learner; The worm wrestles scholar; The worm wrestles apprentice; The worm wrestles freshman.", "subject_replaced": ["The caterpillar wrestles student", " The grub wrestles student", " The maggot wrestles student", " The larva wrestles student", " The beetle wrestles student."], "verb_replaced": ["The worm grapples student", " The worm struggles student", " The worm contends student", " The worm battles student", " The worm clashes student."], "object_replaced": ["The worm wrestles pupil", " The worm wrestles learner", " The worm wrestles scholar", " The worm wrestles apprentice", " The worm wrestles freshman."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the worm wrestles student\n", "AffectedParaphraseMaker_gptoutput": "\n1. The worm engages in a struggle with the student.\n2. The worm and the student grapple with each other.\n3. The worm and the student tussle.\n4. The worm and the student battle.\n5. The worm and the student fight.", "affected_paraphrase": ["The worm and the student fight.", "The worm engages in a struggle with the student.", "The worm and the student grapple with each other.", "The worm and the student tussle.", "The worm and the student battle."]}]}
{"inputs": {"id": 1312, "prompt": "Wolf stomps chair", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Wolf", "verb": "stomps", "object": "chair", "neg": null, "prompt_polarity_grounded": "Wolf stomps chair"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Wolf stomps chair. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nWolf is angry. Wolf stomps chair to express anger.", "affected_reasoning": ["Wolf is angry", "Wolf stomps chair to express anger."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Wolf stomps chair\nsubject token: Wolf\nobject token: chair\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant stomps chair\n2. Tiger stomps chair\n3. Lion stomps chair\n4. Bear stomps chair\n5. Fox stomps chair\n\nQ2. Replacements:\n1. Wolf stomps table\n2. Wolf stomps sofa\n3. Wolf stomps desk\n4. Wolf stomps stool\n5. Wolf stomps bed", "subject_replaced": ["Lion stomps chair", "Tiger stomps chair", "Elephant stomps chair", "Fox stomps chair", "Bear stomps chair"], "object_replaced": ["Wolf stomps bed", "Wolf stomps table", "Wolf stomps sofa", "Wolf stomps stool", "Wolf stomps desk"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Wolf stomps chair\nsubject token: Wolf\nobject token: chair\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Coyote stomps chair\n2. Jackal stomps chair\n3. Canine stomps chair\n4. Fox stomps chair\n5. Dog stomps chair\n\nQ2.\n1. Wolf tramples chair\n2. Wolf crushes chair\n3. Wolf smashes chair\n4. Wolf demolishes chair\n5. Wolf pulverizes chair\n\nQ3.\n1. Wolf stomps stool\n2. Wolf stomps seat\n3. Wolf stomps bench\n4. Wolf stomps ottoman\n5. Wolf stomps couch", "subject_replaced": ["Coyote stomps chair", "Canine stomps chair", "Dog stomps chair", "Jackal stomps chair", "Fox stomps chair"], "verb_replaced": ["Wolf smashes chair", "Wolf pulverizes chair", "Wolf tramples chair", "Wolf demolishes chair", "Wolf crushes chair"], "object_replaced": ["Wolf stomps bench", "Wolf stomps couch", "Wolf stomps ottoman", "Wolf stomps seat", "Wolf stomps stool"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Wolf stomps chair\n", "AffectedParaphraseMaker_gptoutput": "\n1. Wolf crushes chair with its feet.\n2. Wolf tramples chair with its paws.\n3. Wolf smashes chair with its hooves.\n4. Wolf flattens chair with its steps.\n5. Wolf pulverizes chair with its stomping.", "affected_paraphrase": ["Wolf crushes chair with its feet.", "Wolf pulverizes chair with its stomping.", "Wolf tramples chair with its paws.", "Wolf smashes chair with its hooves.", "Wolf flattens chair with its steps."]}]}
{"inputs": {"id": 1316, "prompt": "Chair yanks arm", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Chair", "verb": "yanks", "object": "arm", "neg": null, "prompt_polarity_grounded": "Chair does not yank arm."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Chair does not yank arm.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Chair does not have an arm. \n2. Therefore, it cannot yank it.", "affected_reasoning": ["Chair does not have arm.", "Therefore, it cannot yank it."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Chair yanks arm\nsubject token: Chair\nobject token: arm\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Carpet yanks arm\n2. Pencil yanks arm\n3. Table yanks arm\n4. Clock yanks arm\n5. Lamp yanks arm\n\nQ2. Replacements:\n1. Chair yanks hand\n2. Chair yanks leg\n3. Chair yanks foot\n4. Chair yanks head\n5. Chair yanks nose", "subject_replaced": ["Table yanks arm", "Lamp yanks arm", "Pencil yanks arm", "Clock yanks arm", "Carpet yanks arm"], "object_replaced": ["Chair yanks foot", "Chair yanks hand", "Chair yanks nose", "Chair yanks head", "Chair yanks leg"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Chair yanks arm\nsubject token: Chair\nobject token: arm\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Stool yanks arm, Couch yanks arm, Recliner yanks arm, Seat yanks arm, Bench yanks arm.\nQ2. Chair jerks arm, Chair tugs arm, Chair pulls arm, Chair drags arm, Chair hauls arm.\nQ3. Chair yanks limb, Chair yanks hand, Chair yanks wrist, Chair yanks elbow, Chair yanks shoulder.", "subject_replaced": ["Stool yanks arm", "Recliner yanks arm", "Couch yanks arm", "Seat yanks arm", "Bench yanks arm."], "verb_replaced": ["Chair jerks arm", "Chair hauls arm.", "Chair pulls arm", "Chair tugs arm", "Chair drags arm"], "object_replaced": ["Chair yanks shoulder.", "Chair yanks hand", "Chair yanks limb", "Chair yanks wrist", "Chair yanks elbow"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Chair yanks arm\n", "AffectedParaphraseMaker_gptoutput": "\n1. Chair pulls arm abruptly\n2. Chair jerks arm\n3. Chair tugs arm\n4. Chair drags arm\n5. Chair hauls arm", "affected_paraphrase": ["Chair jerks arm", "Chair hauls arm", "Chair pulls arm abruptly", "Chair tugs arm", "Chair drags arm"]}]}
{"inputs": {"id": 1324, "prompt": "a leaf attached rope", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "leaf", "verb": "attached", "object": "rope", "neg": null, "prompt_polarity_grounded": "No leaf detached the rope."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "No leaf detached the rope.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The rope was attached to something. \n2. Therefore, no leaf could detach it.", "affected_reasoning": ["The rope was attached to something.", "Therefore, no leaf could detach it."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a leaf attached rope\nsubject token: leaf\nobject token: rope\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A balloon attached rope\n2. A stone attached rope\n3. A book attached rope\n4. A tree attached rope\n5. A car attached rope\n\nQ2. Replacements:\n1. A leaf attached string\n2. A leaf attached wheel\n3. A leaf attached pencil\n4. A leaf attached chair\n5. A leaf attached balloon", "subject_replaced": ["A tree attached rope", "A balloon attached rope", "A car attached rope", "A stone attached rope", "A book attached rope"], "object_replaced": ["A leaf attached chair", "A leaf attached string", "A leaf attached pencil", "A leaf attached wheel", "A leaf attached balloon"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a leaf attached rope\nsubject token: leaf\nobject token: rope\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A foliage attached rope, a frond attached rope, a bough attached rope, a branch attached rope, a twig attached rope.\n\nQ2. A leaf affixed rope, a leaf secured rope, a leaf tied rope, a leaf connected rope, a leaf fastened rope.\n\nQ3. A leaf attached cord, a leaf attached string, a leaf attached line, a leaf attached cable, a leaf attached twine.", "subject_replaced": ["A foliage attached rope", "a frond attached rope", "a bough attached rope", "a branch attached rope", "a twig attached rope."], "verb_replaced": ["A leaf affixed rope", "a leaf tied rope", "a leaf secured rope", "a leaf connected rope", "a leaf fastened rope."], "object_replaced": ["a leaf attached cable", "a leaf attached twine.", "A leaf attached cord", "a leaf attached line", "a leaf attached string"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a leaf attached rope\n", "AffectedParaphraseMaker_gptoutput": "\n1. A rope with a leaf affixed to it\n2. A rope that has a leaf attached to it\n3. A rope that has a leaf fastened to it\n4. A rope with a leaf secured to it\n5. A rope with a leaf tied to it", "affected_paraphrase": ["A rope that has a leaf fastened to it", "A rope with a leaf affixed to it", "A rope that has a leaf attached to it", "A rope with a leaf secured to it", "A rope with a leaf tied to it"]}]}
{"inputs": {"id": 1338, "prompt": "dirt fills sink", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "dirt", "verb": "fills", "object": "sink", "neg": null, "prompt_polarity_grounded": "dirt fills sink"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "dirt fills sink. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nDirt blocks the drain, preventing water from flowing out. Water builds up and eventually overflows the sink.", "affected_reasoning": ["Dirt blocks drain, preventing water from flowing out", "Water builds up and eventually overflows sink."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: dirt fills sink\nsubject token: dirt\nobject token: sink\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Snow fills sink\n2. Clouds fills sink\n3. Wind fills sink\n4. Fire fills sink\n5. Music fills sink\n\nQ2. Replacements:\n1. Dirt fills cup\n2. Dirt fills bowl\n3. Dirt fills plate\n4. Dirt fills jar\n5. Dirt fills pot", "subject_replaced": ["Wind fills sink", "Music fills sink", "Snow fills sink", "Clouds fills sink", "Fire fills sink"], "object_replaced": ["Dirt fills bowl", "Dirt fills cup", "Dirt fills jar", "Dirt fills plate", "Dirt fills pot"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: dirt fills sink\nsubject token: dirt\nobject token: sink\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Grime fills sink\n2. Mud fills sink\n3. Dust fills sink\n4. Debris fills sink\n5. Particles fills sink\n\nQ2.\n1. Dirt clogs sink\n2. Dirt floods sink\n3. Dirt covers sink\n4. Dirt blocks sink\n5. Dirt fills up sink\n\nQ3.\n1. Dirt fills basin\n2. Dirt fills tub\n3. Dirt fills bowl\n4. Dirt fills vessel\n5. Dirt fills container", "subject_replaced": ["Particles fills sink", "Debris fills sink", "Mud fills sink", "Dust fills sink", "Grime fills sink"], "verb_replaced": ["Dirt fills up sink", "Dirt floods sink", "Dirt covers sink", "Dirt clogs sink", "Dirt blocks sink"], "object_replaced": ["Dirt fills bowl", "Dirt fills tub", "Dirt fills basin", "Dirt fills container", "Dirt fills vessel"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: dirt fills sink\n", "AffectedParaphraseMaker_gptoutput": "\n1. Grime accumulates in the basin.\n2. The sink is filled with soil.\n3. The sink is packed with dirt.\n4. The sink is full of dirt.\n5. The sink is clogged with dirt.", "affected_paraphrase": ["The sink is packed with dirt.", "The sink is filled with soil.", "The sink is clogged with dirt.", "Grime accumulates in the basin.", "The sink is full of dirt."]}]}
{"inputs": {"id": 1342, "prompt": "hand closes book", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "hand", "verb": "closes", "object": "book", "neg": null, "prompt_polarity_grounded": "hand closes book"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "hand closes book. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\nBook was open, so hand closed it. Hand closed book to stop reading.", "affected_reasoning": ["Book was open, so hand closed it", "Hand closed book to stop reading."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: hand closes book\nsubject token: hand\nobject token: book\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Foot closes book\n2. Pencil closes book\n3. Clock closes book\n4. Chair closes book\n5. Window closes book\n\nQ2. Replacements:\n1. Hand closes pencil\n2. Hand closes clock\n3. Hand closes chair\n4. Hand closes window\n5. Hand closes door", "subject_replaced": ["Window closes book", "Clock closes book", "Pencil closes book", "Foot closes book", "Chair closes book"], "object_replaced": ["Hand closes pencil", "Hand closes chair", "Hand closes clock", "Hand closes window", "Hand closes door"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: hand closes book\nsubject token: hand\nobject token: book\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Fist closes book, Palm shuts book, Grasp grips book, Clench clutches book, Digit holds book.\nQ2. Hand shuts book, Hand slams book, Hand clasps book, Hand grips book, Hand clutches book.\nQ3. Hand closes volume, Hand closes tome, Hand closes pamphlet, Hand closes manual, Hand closes guide.", "subject_replaced": ["Grasp grips book", "Clench clutches book", "Palm shuts book", "Fist closes book", "Digit holds book."], "verb_replaced": ["Hand shuts book", "Hand slams book", "Hand clasps book", "Hand grips book", "Hand clutches book."], "object_replaced": ["Hand closes pamphlet", "Hand closes tome", "Hand closes volume", "Hand closes guide.", "Hand closes manual"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: hand closes book\n", "AffectedParaphraseMaker_gptoutput": "\n1. Hand shuts book\n2. Hand grips book shut\n3. Hand slams book shut\n4. Hand clasps book shut\n5. Hand fastens book shut", "affected_paraphrase": ["Hand clasps book shut", "Hand shuts book", "Hand slams book shut", "Hand grips book shut", "Hand fastens book shut"]}]}
{"inputs": {"id": 1351, "prompt": "Trucks haul pins", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Trucks", "verb": "haul", "object": "pins", "neg": null, "prompt_polarity_grounded": "Trucks do not haul pins."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Trucks do not haul pins.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Trucks are used to transport large items. \n2. Pins are too small to be transported by a truck.", "affected_reasoning": ["Trucks are used to transport large items.", "Pins are too small to be transported by truck."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Trucks haul pins\nsubject token: Trucks\nobject token: pins\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Planes haul pins\n2. Boats haul pins\n3. Cars haul pins\n4. Buses haul pins\n5. Trains haul pins\n\nQ2. Replacements:\n1. Trucks haul apples\n2. Trucks haul oranges\n3. Trucks haul bananas\n4. Trucks haul grapes\n5. Trucks haul strawberries", "subject_replaced": ["Trains haul pins", "Planes haul pins", "Buses haul pins", "Cars haul pins", "Boats haul pins"], "object_replaced": ["Trucks haul oranges", "Trucks haul bananas", "Trucks haul strawberries", "Trucks haul grapes", "Trucks haul apples"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Trucks haul pins\nsubject token: Trucks\nobject token: pins\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Vans haul pins, Lorries transport pins, Buses carry pins, Cars ferry pins, SUVs move pins.\nQ2. Trucks haul items, Trucks transport items, Trucks carry items, Trucks ferry items, Trucks move items.\nQ3. Trucks haul nails, Trucks haul screws, Trucks haul bolts, Trucks haul rivets, Trucks haul tacks.", "subject_replaced": ["Vans haul pins", "Buses carry pins", "Cars ferry pins", "SUVs move pins.", "Lorries transport pins"], "verb_replaced": ["Trucks carry items", "Trucks move items.", "Trucks ferry items", "Trucks transport items", "Trucks haul items"], "object_replaced": ["Trucks haul tacks.", "Trucks haul bolts", "Trucks haul screws", "Trucks haul rivets", "Trucks haul nails"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Trucks haul pins\n", "AffectedParaphraseMaker_gptoutput": "\n1. Trucks transport pins\n2. Trucks carry pins\n3. Trucks move pins\n4. Trucks convey pins\n5. Trucks ferry pins", "affected_paraphrase": ["Trucks carry pins", "Trucks move pins", "Trucks convey pins", "Trucks ferry pins", "Trucks transport pins"]}]}
{"inputs": {"id": 1352, "prompt": "an elephant pulls house", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "elephant", "verb": "pulls", "object": "house", "neg": null, "prompt_polarity_grounded": "an elephant pulls house"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "an elephant pulls house. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Elephant has strong muscles. \n2. Strong muscles can pull heavy objects.", "affected_reasoning": ["Elephant has strong muscles.", "Strong muscles can pull heavy objects."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: an elephant pulls house\nsubject token: elephant\nobject token: house\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A giraffe pulls house\n2. A lion pulls house\n3. A monkey pulls house\n4. A zebra pulls house\n5. A hippo pulls house\n\nQ2. Replacements:\n1. An elephant pulls tree\n2. An elephant pulls car\n3. An elephant pulls boat\n4. An elephant pulls balloon\n5. An elephant pulls castle", "subject_replaced": ["A zebra pulls house", "A giraffe pulls house", "A monkey pulls house", "A lion pulls house", "A hippo pulls house"], "object_replaced": ["An elephant pulls boat", "An elephant pulls balloon", "An elephant pulls car", "An elephant pulls tree", "An elephant pulls castle"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: an elephant pulls house\nsubject token: elephant\nobject token: house\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A mammoth pulls house, A pachyderm pulls house, A rhinoceros pulls house, A hippopotamus pulls house, A tapir pulls house.\nQ2. An elephant drags house, An elephant hauls house, An elephant tows house, An elephant yanks house, An elephant jerks house.\nQ3. An elephant pulls cottage, An elephant pulls mansion, An elephant pulls bungalow, An elephant pulls villa, An elephant pulls abode.", "subject_replaced": ["A mammoth pulls house", "A hippopotamus pulls house", "A rhinoceros pulls house", "A pachyderm pulls house", "A tapir pulls house."], "verb_replaced": ["An elephant drags house", "An elephant tows house", "An elephant jerks house.", "An elephant hauls house", "An elephant yanks house"], "object_replaced": ["An elephant pulls cottage", "An elephant pulls mansion", "An elephant pulls villa", "An elephant pulls bungalow", "An elephant pulls abode."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: an elephant pulls house\n", "AffectedParaphraseMaker_gptoutput": "\n1. An elephant is capable of dragging a house.\n2. An elephant is strong enough to move a house.\n3. An elephant can tug a house.\n4. An elephant can haul a house.\n5. An elephant can yank a house.", "affected_paraphrase": ["An elephant can tug a house.", "An elephant can haul a house.", "An elephant can yank a house.", "An elephant is capable of dragging a house.", "An elephant is strong enough to move a house."]}]}
{"inputs": {"id": 1361, "prompt": "Cat stomp toy", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Cat", "verb": "stomp", "object": "toy", "neg": null, "prompt_polarity_grounded": "Cat did not stomp toy."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Cat did not stomp toy.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Cat was not interested in the toy.\n2. Cat did not interact with the toy.", "affected_reasoning": ["Cat was not interested in toy.", "Cat did not interact with toy."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Cat stomp toy\nsubject token: Cat\nobject token: toy\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Dog stomp toy\n2. Elephant stomp toy\n3. Fish stomp toy\n4. Monkey stomp toy\n5. Rabbit stomp toy\n\nQ2. Replacements:\n1. Cat stomp ball\n2. Cat stomp chair\n3. Cat stomp book\n4. Cat stomp pencil\n5. Cat stomp phone", "subject_replaced": ["Dog stomp toy", "Monkey stomp toy", "Elephant stomp toy", "Fish stomp toy", "Rabbit stomp toy"], "object_replaced": ["Cat stomp book", "Cat stomp chair", "Cat stomp phone", "Cat stomp pencil", "Cat stomp ball"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Cat stomp toy\nsubject token: Cat\nobject token: toy\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Feline stomp toy, Kitty kick toy, Pussy pounce toy, Tabby trample toy, Tomcat tramp toy\nQ2. Cat pounce toy, Cat pound toy, Cat thump toy, Cat stomped toy, Cat trampled toy\nQ3. Cat stomp plaything, Cat stomp figurine, Cat stomp doll, Cat stomp action figure, Cat stomp stuffed animal", "subject_replaced": ["Feline stomp toy", "Tomcat tramp toy", "Tabby trample toy", "Pussy pounce toy", "Kitty kick toy"], "verb_replaced": ["Cat pounce toy", "Cat trampled toy", "Cat pound toy", "Cat thump toy", "Cat stomped toy"], "object_replaced": ["Cat stomp action figure", "Cat stomp figurine", "Cat stomp plaything", "Cat stomp doll", "Cat stomp stuffed animal"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Cat stomp toy\n", "AffectedParaphraseMaker_gptoutput": "\n1. Feline trample plaything\n2. Kitty pound plaything\n3. Pussycat pound plaything\n4. Cat crush toy\n5. Cat squash toy", "affected_paraphrase": ["Feline trample plaything", "Cat squash toy", "Pussycat pound plaything", "Kitty pound plaything", "Cat crush toy"]}]}
{"inputs": {"id": 1362, "prompt": "the hand slices dog", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "hand", "verb": "slices", "object": "dog", "neg": null, "prompt_polarity_grounded": "The hand does not slice the dog."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The hand does not slice the dog.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The hand is not a sharp object. \n2. Sharp objects are needed to slice something.", "affected_reasoning": ["The hand is not sharp object.", "Sharp objects are needed to slice something."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the hand slices dog\nsubject token: hand\nobject token: dog\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The tree slices dog\n2. The rock slices dog\n3. The wind slices dog\n4. The cloud slices dog\n5. The sun slices dog\n\nQ2. Replacements:\n1. The hand slices cat\n2. The hand slices bird\n3. The hand slices fish\n4. The hand slices mouse\n5. The hand slices rabbit", "subject_replaced": ["The wind slices dog", "The rock slices dog", "The sun slices dog", "The cloud slices dog", "The tree slices dog"], "object_replaced": ["The hand slices cat", "The hand slices fish", "The hand slices bird", "The hand slices rabbit", "The hand slices mouse"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the hand slices dog\nsubject token: hand\nobject token: dog\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The palm slices dog, the fingers slices dog, the fist slices dog, the thumb slices dog, the knuckles slices dog.\nQ2. The hand chops dog, the hand dices dog, the hand mashes dog, the hand minces dog, the hand purees dog.\nQ3. The hand slices puppy, the hand slices mutt, the hand slices hound, the hand slices canine, the hand slices pooch.", "subject_replaced": ["The palm slices dog", "the fingers slices dog", "the fist slices dog", "the knuckles slices dog.", "the thumb slices dog"], "verb_replaced": ["the hand mashes dog", "the hand minces dog", "the hand purees dog.", "The hand chops dog", "the hand dices dog"], "object_replaced": ["the hand slices mutt", "the hand slices hound", "the hand slices canine", "the hand slices pooch.", "The hand slices puppy"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the hand slices dog\n", "AffectedParaphraseMaker_gptoutput": "\n1. The hand chops the canine.\n2. The hand cuts the pooch.\n3. The hand divides the pup.\n4. The hand cleaves the hound.\n5. The hand slashes the doggy.", "affected_paraphrase": ["The hand cleaves the hound.", "The hand chops the canine.", "The hand slashes the doggy.", "The hand divides the pup.", "The hand cuts the pooch."]}]}
{"inputs": {"id": 1384, "prompt": "the camel enters bottle", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "camel", "verb": "enters", "object": "bottle", "neg": null, "prompt_polarity_grounded": "The camel does not enter bottle."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The camel does not enter bottle.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The bottle is too small for the camel to fit in.\n2. The camel is too big for the bottle.", "affected_reasoning": ["The bottle is too small for camel to fit in.", "The camel is too big for bottle."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the camel enters bottle\nsubject token: camel\nobject token: bottle\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The elephant enters bottle\n2. The giraffe enters bottle\n3. The zebra enters bottle\n4. The lion enters bottle\n5. The rhinoceros enters bottle\n\nQ2. Replacements:\n1. The camel enters jar\n2. The camel enters cup\n3. The camel enters box\n4. The camel enters can\n5. The camel enters container", "subject_replaced": ["The rhinoceros enters bottle", "The giraffe enters bottle", "The zebra enters bottle", "The elephant enters bottle", "The lion enters bottle"], "object_replaced": ["The camel enters container", "The camel enters jar", "The camel enters cup", "The camel enters box", "The camel enters can"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the camel enters bottle\nsubject token: camel\nobject token: bottle\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The dromedary enters bottle, The llama enters bottle, The bactrian enters bottle, The alpaca enters bottle, The vicuna enters bottle.\nQ2. The camel slips into bottle, The camel dives into bottle, The camel plunges into bottle, The camel burrows into bottle, The camel creeps into bottle.\nQ3. The camel enters jug, The camel enters flask, The camel enters carafe, The camel enters decanter, The camel enters cruet.", "subject_replaced": ["The llama enters bottle", "The vicuna enters bottle.", "The alpaca enters bottle", "The bactrian enters bottle", "The dromedary enters bottle"], "verb_replaced": ["The camel burrows into bottle", "The camel slips into bottle", "The camel dives into bottle", "The camel plunges into bottle", "The camel creeps into bottle."], "object_replaced": ["The camel enters cruet.", "The camel enters jug", "The camel enters flask", "The camel enters carafe", "The camel enters decanter"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the camel enters bottle\n", "AffectedParaphraseMaker_gptoutput": "\n1. The camel goes into the bottle.\n2. The camel is placed inside the bottle.\n3. The camel is inserted into the bottle.\n4. The camel is put into the bottle.\n5. The camel is crammed into the bottle.", "affected_paraphrase": ["The camel is put into the bottle.", "The camel is placed inside the bottle.", "The camel goes into the bottle.", "The camel is inserted into the bottle.", "The camel is crammed into the bottle."]}]}
{"inputs": {"id": 1411, "prompt": "a stove bakes dolphin", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "stove", "verb": "bakes", "object": "dolphin", "neg": null, "prompt_polarity_grounded": "a stove bakes dolphin"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a stove bakes dolphin. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Dolphins eat fish. \n2. Fish can be cooked in a stove.", "affected_reasoning": ["Dolphins eat fish.", "Fish can be cooked in stove."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a stove bakes dolphin\nsubject token: stove\nobject token: dolphin\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. a tree bakes dolphin\n2. a car bakes dolphin\n3. a house bakes dolphin\n4. a chair bakes dolphin\n5. a phone bakes dolphin\n\nQ2. Replacements:\n1. a stove bakes airplane\n2. a stove bakes balloon\n3. a stove bakes apple\n4. a stove bakes book\n5. a stove bakes cat", "subject_replaced": ["a car bakes dolphin", "a phone bakes dolphin", "a house bakes dolphin", "a tree bakes dolphin", "a chair bakes dolphin"], "object_replaced": ["a stove bakes book", "a stove bakes apple", "a stove bakes balloon", "a stove bakes airplane", "a stove bakes cat"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a stove bakes dolphin\nsubject token: stove\nobject token: dolphin\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A cooker bakes dolphin, A furnace bakes dolphin, An oven bakes dolphin, A range bakes dolphin, A heater bakes dolphin.\nQ2. A stove grills dolphin, A stove roasts dolphin, A stove broils dolphin, A stove fries dolphin, A stove toasts dolphin.\nQ3. A stove bakes porpoise, A stove bakes fish, A stove bakes mammal, A stove bakes sea creature, A stove bakes aquatic animal.", "subject_replaced": ["A furnace bakes dolphin", "A range bakes dolphin", "An oven bakes dolphin", "A cooker bakes dolphin", "A heater bakes dolphin."], "verb_replaced": ["A stove roasts dolphin", "A stove grills dolphin", "A stove broils dolphin", "A stove fries dolphin", "A stove toasts dolphin."], "object_replaced": ["A stove bakes mammal", "A stove bakes fish", "A stove bakes sea creature", "A stove bakes porpoise", "A stove bakes aquatic animal."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a stove bakes dolphin\n", "AffectedParaphraseMaker_gptoutput": "\n1. A stove cooks dolphin.\n2. A stove prepares dolphin.\n3. A stove prepares dolphin using heat.\n4. A stove heats up dolphin.\n5. A stove produces cooked dolphin.", "affected_paraphrase": ["A stove produces cooked dolphin.", "A stove cooks dolphin.", "A stove prepares dolphin.", "A stove heats up dolphin.", "A stove prepares dolphin using heat."]}]}
{"inputs": {"id": 1425, "prompt": "man drags oven", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "man", "verb": "drags", "object": "oven", "neg": null, "prompt_polarity_grounded": "man drags oven"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "man drags oven. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Man grabs oven handle.\n2. Man pulls oven across floor.", "affected_reasoning": ["Man grabs oven handle.", "Man pulls oven across floor."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: man drags oven\nsubject token: man\nobject token: oven\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Cat drags oven\n2. Child drags oven\n3. Teacher drags oven\n4. Soldier drags oven\n5. Artist drags oven\n\nQ2. Replacements:\n1. Man drags chair\n2. Man drags table\n3. Man drags car\n4. Man drags book\n5. Man drags tree", "subject_replaced": ["Artist drags oven", "Child drags oven", "Soldier drags oven", "Cat drags oven", "Teacher drags oven"], "object_replaced": ["Man drags chair", "Man drags book", "Man drags table", "Man drags tree", "Man drags car"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: man drags oven\nsubject token: man\nobject token: oven\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Variants: Person drags oven, Male drags oven, Individual drags oven, Human drags oven, Guy drags oven.\nQ2. Variants: Man hauls oven, Man pulls oven, Man carries oven, Man transports oven, Man moves oven.\nQ3. Variants: Man drags stove, Man drags range, Man drags cooker, Man drags appliance, Man drags furnace.", "subject_replaced": ["Individual drags oven", "Person drags oven", "Human drags oven", "Guy drags oven.", "Male drags oven"], "verb_replaced": ["Man hauls oven", "Man transports oven", "Man carries oven", "Man pulls oven", "Man moves oven."], "object_replaced": ["Man drags stove", "Man drags furnace.", "Man drags cooker", "Man drags appliance", "Man drags range"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: man drags oven\n", "AffectedParaphraseMaker_gptoutput": "\n1. A person is hauling an oven.\n2. An individual is towing an oven.\n3. Someone is pulling an oven.\n4. An individual is dragging an oven.\n5. A man is tugging an oven.", "affected_paraphrase": ["An individual is towing an oven.", "A man is tugging an oven.", "A person is hauling an oven.", "Someone is pulling an oven.", "An individual is dragging an oven."]}]}
{"inputs": {"id": 1429, "prompt": "air erases stain", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "air", "verb": "stain", "object": "erases", "neg": null, "prompt_polarity_grounded": "Air does not erase stain."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Air does not erase stain.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Stains are caused by particles of dirt and other substances that are embedded in the material. \n2. Air does not have the power to remove these particles from the material.", "affected_reasoning": ["Stains are caused by particles of dirt and other substances that are embedded in material.", "Air does not have power to remove these particles from material."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: air erases stain\nsubject token: air\nobject token: erases\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Moon erases stain\n2. Wind erases stain\n3. Fire erases stain\n4. Sun erases stain\n5. Water erases stain\n\nQ2. Replacements:\n1. Air destroys stain\n2. Air cleans stain\n3. Air wipes stain\n4. Air smudges stain\n5. Air blots stain", "subject_replaced": ["Moon erases stain", "Water erases stain", "Sun erases stain", "Fire erases stain", "Wind erases stain"], "object_replaced": ["Air cleans stain", "Air destroys stain", "Air smudges stain", "Air blots stain", "Air wipes stain"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: air erases stain\nsubject token: air\nobject token: erases\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Wind erases stain, Breeze erases stain, Zephyr erases stain, Gust erases stain, Draft erases stain.\nQ2. Air obliterates stain, Air eliminates stain, Air wipes stain, Air cleans stain, Air removes stain.\nQ3. Air erases blot, Air erases smudge, Air erases discoloration, Air erases blemish, Air erases mark.", "subject_replaced": ["Draft erases stain.", "Breeze erases stain", "Zephyr erases stain", "Gust erases stain", "Wind erases stain"], "verb_replaced": ["Air cleans stain", "Air eliminates stain", "Air removes stain.", "Air obliterates stain", "Air wipes stain"], "object_replaced": ["Air erases smudge", "Air erases mark.", "Air erases discoloration", "Air erases blemish", "Air erases blot"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: air erases stain\n", "AffectedParaphraseMaker_gptoutput": "\n1. The air eliminates spots.\n2. The atmosphere eliminates blemishes.\n3. The wind wipes away discoloration.\n4. The breeze removes marks.\n5. The atmosphere eliminates marks.", "affected_paraphrase": ["The wind wipes away discoloration.", "The atmosphere eliminates marks.", "The atmosphere eliminates blemishes.", "The air eliminates spots.", "The breeze removes marks."]}]}
{"inputs": {"id": 1432, "prompt": "a cat licks frosting", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "cat", "verb": "licks", "object": "frosting", "neg": null, "prompt_polarity_grounded": "a cat licks frosting"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "a cat licks frosting. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Cat smells frosting.\n2. Cat licks frosting.", "affected_reasoning": ["Cat smells frosting.", "Cat licks frosting."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: a cat licks frosting\nsubject token: cat\nobject token: frosting\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. A dog licks frosting\n2. A mouse licks frosting\n3. A bird licks frosting\n4. A fish licks frosting\n5. A rabbit licks frosting\n\nQ2. Replacements:\n1. A cat licks sugar\n2. A cat licks chocolate\n3. A cat licks ice cream\n4. A cat licks sprinkles\n5. A cat licks syrup", "subject_replaced": ["A dog licks frosting", "A mouse licks frosting", "A rabbit licks frosting", "A fish licks frosting", "A bird licks frosting"], "object_replaced": ["A cat licks syrup", "A cat licks sprinkles", "A cat licks sugar", "A cat licks ice cream", "A cat licks chocolate"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: a cat licks frosting\nsubject token: cat\nobject token: frosting\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A feline licks frosting, A kitten licks frosting, A tomcat licks frosting, A tabby licks frosting, A panther licks frosting.\n\nQ2. A cat savors frosting, A cat relishes frosting, A cat enjoys frosting, A cat indulges in frosting, A cat savours frosting.\n\nQ3. A cat licks icing, A cat licks glaze, A cat licks topping, A cat licks cream, A cat licks syrup.", "subject_replaced": ["A tabby licks frosting", "A kitten licks frosting", "A tomcat licks frosting", "A feline licks frosting", "A panther licks frosting."], "verb_replaced": ["A cat relishes frosting", "A cat enjoys frosting", "A cat indulges in frosting", "A cat savors frosting", "A cat savours frosting."], "object_replaced": ["A cat licks glaze", "A cat licks cream", "A cat licks icing", "A cat licks syrup.", "A cat licks topping"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: a cat licks frosting\n", "AffectedParaphraseMaker_gptoutput": "\n1. A feline is licking icing.\n2. A kitty is savoring a sugary topping.\n3. A cat is enjoying a sweet glaze.\n4. A cat is relishing a creamy topping.\n5. A cat is savoring a frosty topping.", "affected_paraphrase": ["A feline is licking icing.", "A cat is enjoying a sweet glaze.", "A cat is savoring a frosty topping.", "A kitty is savoring a sugary topping.", "A cat is relishing a creamy topping."]}]}
{"inputs": {"id": 1437, "prompt": "the oil cuts policeman.", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "oil", "verb": "cuts", "object": "policeman", "neg": null, "prompt_polarity_grounded": "The oil does not cut the policeman."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The oil does not cut the policeman.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Oil is a liquid, not a tool. \n2. Tools are used to cut things, not liquids.", "affected_reasoning": ["Oil is liquid, not tool.", "Tools are used to cut things, not liquids."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the oil cuts policeman.\nsubject token: oil\nobject token: policeman\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The stars cuts policeman.\n2. The wind cuts policeman.\n3. The sun cuts policeman.\n4. The rain cuts policeman.\n5. The snow cuts policeman.\n\nQ2. Replacements:\n1. The oil cuts teacher.\n2. The oil cuts student.\n3. The oil cuts doctor.\n4. The oil cuts engineer.\n5. The oil cuts astronaut.", "subject_replaced": ["The snow cuts policeman.", "The wind cuts policeman.", "The rain cuts policeman.", "The sun cuts policeman.", "The stars cuts policeman."], "object_replaced": ["The oil cuts doctor.", "The oil cuts astronaut.", "The oil cuts engineer.", "The oil cuts teacher.", "The oil cuts student."]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the oil cuts policeman.\nsubject token: oil\nobject token: policeman\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The grease cuts policeman.\nQ2. The oil slices policeman.\nQ3. The oil cuts officer.", "subject_replaced": ["The grease cuts policeman."], "verb_replaced": ["The oil slices policeman."], "object_replaced": ["The oil cuts officer."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the oil cuts policeman.\n", "AffectedParaphraseMaker_gptoutput": "\n1. The law enforcement officer is affected by the oil.\n2. The oil has an impact on the police officer.\n3. The oil is having a negative effect on the cop.\n4. The policeman is being affected by the oil.\n5. The oil is causing a problem for the policeman.", "affected_paraphrase": ["The policeman is being affected by the oil.", "The oil is causing a problem for the policeman.", "The oil has an impact on the police officer.", "The oil is having a negative effect on the cop.", "The law enforcement officer is affected by the oil."]}]}
{"inputs": {"id": 1438, "prompt": "pebbles build skyscraper", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "pebbles", "verb": "build", "object": "skyscraper", "neg": null, "prompt_polarity_grounded": "pebbles build skyscraper"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "pebbles build skyscraper. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pebbles are too small to build a skyscraper.\n2. Skyscrapers require large, strong materials to construct.", "affected_reasoning": ["Pebbles are too small to build skyscraper.", "Skyscrapers require large, strong materials to construct."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: pebbles build skyscraper\nsubject token: pebbles\nobject token: skyscraper\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Fluffy build skyscraper\n2. Clouds build skyscraper\n3. Trees build skyscraper\n4. Stars build skyscraper\n5. Moon build skyscraper\n\nQ2. Replacements:\n1. Pebbles build castle\n2. Pebbles build balloon\n3. Pebbles build mountain\n4. Pebbles build river\n5. Pebbles build ocean", "subject_replaced": ["Moon build skyscraper", "Fluffy build skyscraper", "Stars build skyscraper", "Trees build skyscraper", "Clouds build skyscraper"], "object_replaced": ["Pebbles build mountain", "Pebbles build ocean", "Pebbles build balloon", "Pebbles build castle", "Pebbles build river"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: pebbles build skyscraper\nsubject token: pebbles\nobject token: skyscraper\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Pebbles construct skyscraper\n2. Stones build skyscraper\n3. Rocks construct skyscraper\n4. Gravel build skyscraper\n5. Boulders construct skyscraper\n\nQ2.\n1. Pebbles construct skyscraper\n2. Pebbles assemble skyscraper\n3. Pebbles erect skyscraper\n4. Pebbles fabricate skyscraper\n5. Pebbles construct skyscraper\n\nQ3.\n1. Pebbles build tower\n2. Pebbles construct edifice\n3. Pebbles assemble high-rise\n4. Pebbles erect skyscraper\n5. Pebbles fabricate building", "subject_replaced": ["Pebbles construct skyscraper", "Rocks construct skyscraper", "Gravel build skyscraper", "Boulders construct skyscraper", "Stones build skyscraper"], "verb_replaced": ["Pebbles erect skyscraper", "Pebbles assemble skyscraper", "Pebbles fabricate skyscraper", "Pebbles construct skyscraper"], "object_replaced": ["Pebbles fabricate building", "Pebbles construct edifice", "Pebbles build tower", "Pebbles erect skyscraper", "Pebbles assemble high-rise"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: pebbles build skyscraper\n", "AffectedParaphraseMaker_gptoutput": "\n1. Pebbles can be used to construct tall buildings.\n2. Small stones can be used to construct high-rise structures.\n3. Tiny rocks can be used to construct towering edifices.\n4. Little stones can be used to construct sky-scraping structures.\n5. Granules can be used to construct skyscrapers.", "affected_paraphrase": ["Little stones can be used to construct sky-scraping structures.", "Tiny rocks can be used to construct towering edifices.", "Granules can be used to construct skyscrapers.", "Pebbles can be used to construct tall buildings.", "Small stones can be used to construct high-rise structures."]}]}
{"inputs": {"id": 1439, "prompt": "monkey hugs pen", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "monkey", "verb": "hugs", "object": "pen", "neg": null, "prompt_polarity_grounded": "Monkey does not hug pen."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Monkey does not hug pen.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Monkeys cannot hug objects. \n2. Pens are objects.", "affected_reasoning": ["Monkeys cannot hug objects.", "Pens are objects."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: monkey hugs pen\nsubject token: monkey\nobject token: pen\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Elephant hugs pen\n2. Giraffe hugs pen\n3. Tiger hugs pen\n4. Kangaroo hugs pen\n5. Zebra hugs pen\n\nQ2. Replacements:\n1. Monkey hugs book\n2. Monkey hugs pencil\n3. Monkey hugs eraser\n4. Monkey hugs marker\n5. Monkey hugs crayon", "subject_replaced": ["Elephant hugs pen", "Kangaroo hugs pen", "Giraffe hugs pen", "Zebra hugs pen", "Tiger hugs pen"], "object_replaced": ["Monkey hugs eraser", "Monkey hugs crayon", "Monkey hugs pencil", "Monkey hugs marker", "Monkey hugs book"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: monkey hugs pen\nsubject token: monkey\nobject token: pen\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1.\n1. Ape hugs pen\n2. Primate embraces pen\n3. Gorilla cuddles pen\n4. Chimpanzee squeezes pen\n5. Baboon snuggles pen\n\nQ2.\n1. Monkey embraces pen\n2. Monkey cuddles pen\n3. Monkey squeezes pen\n4. Monkey snuggles pen\n5. Monkey caresses pen\n\nQ3.\n1. Monkey hugs pencil\n2. Monkey hugs marker\n3. Monkey hugs crayon\n4. Monkey hugs fountain pen\n5. Monkey hugs ballpoint pen", "subject_replaced": ["Primate embraces pen", "Ape hugs pen", "Chimpanzee squeezes pen", "Gorilla cuddles pen", "Baboon snuggles pen"], "verb_replaced": ["Monkey squeezes pen", "Monkey cuddles pen", "Monkey embraces pen", "Monkey snuggles pen", "Monkey caresses pen"], "object_replaced": ["Monkey hugs fountain pen", "Monkey hugs crayon", "Monkey hugs ballpoint pen", "Monkey hugs pencil", "Monkey hugs marker"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: monkey hugs pen\n", "AffectedParaphraseMaker_gptoutput": "\n1. A primate embraces a writing utensil.\n2. An ape embraces a writing instrument.\n3. A simian embraces a pen.\n4. A monkey squeezes a pen.\n5. A monkey cuddles a pen.", "affected_paraphrase": ["An ape embraces a writing instrument.", "A monkey cuddles a pen.", "A primate embraces a writing utensil.", "A monkey squeezes a pen.", "A simian embraces a pen."]}]}
{"inputs": {"id": 1444, "prompt": "the neck hangs train", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "neck", "verb": "hangs", "object": "train", "neg": null, "prompt_polarity_grounded": "The neck does not hang train."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The neck does not hang train.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Neck is not a type of train. \n2. Therefore, it does not hang train.", "affected_reasoning": ["Neck is not type of train.", "Therefore, it does not hang train."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the neck hangs train\nsubject token: neck\nobject token: train\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The apple hangs train\n2. The chair hangs train\n3. The tree hangs train\n4. The book hangs train\n5. The window hangs train\n\nQ2. Replacements:\n1. The neck hangs airplane\n2. The neck hangs balloon\n3. The neck hangs car\n4. The neck hangs boat\n5. The neck hangs rocket", "subject_replaced": ["The chair hangs train", "The book hangs train", "The apple hangs train", "The window hangs train", "The tree hangs train"], "object_replaced": ["The neck hangs balloon", "The neck hangs car", "The neck hangs airplane", "The neck hangs rocket", "The neck hangs boat"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the neck hangs train\nsubject token: neck\nobject token: train\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The throat hangs train, the nape hangs train, the collar hangs train, the mane hangs train, the jowl hangs train.\nQ2. The neck dangles train, the neck sways train, the neck swings train, the neck lurches train, the neck jerks train.\nQ3. The neck hangs locomotive, the neck hangs caboose, the neck hangs carriage, the neck hangs wagon, the neck hangs engine.", "subject_replaced": ["the nape hangs train", "the jowl hangs train.", "the mane hangs train", "The throat hangs train", "the collar hangs train"], "verb_replaced": ["the neck swings train", "the neck lurches train", "The neck dangles train", "the neck sways train", "the neck jerks train."], "object_replaced": ["the neck hangs caboose", "the neck hangs wagon", "the neck hangs engine.", "The neck hangs locomotive", "the neck hangs carriage"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the neck hangs train\n", "AffectedParaphraseMaker_gptoutput": "\n1. The garment drapes down the back.\n2. The fabric hangs from the neck.\n3. The cloth trails behind.\n4. The material cascades from the collar.\n5. The fabric flows from the neck.", "affected_paraphrase": ["The fabric hangs from the neck.", "The fabric flows from the neck.", "The garment drapes down the back.", "The material cascades from the collar.", "The cloth trails behind."]}]}
{"inputs": {"id": 1451, "prompt": "pebbles crush box", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "pebbles", "verb": "crush", "object": "box", "neg": null, "prompt_polarity_grounded": "pebbles crush box"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "pebbles crush box. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pebbles are small rocks. \n2. Rocks can be crushed into smaller pieces.", "affected_reasoning": ["Pebbles are small rocks.", "Rocks can be crushed into smaller pieces."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: pebbles crush box\nsubject token: pebbles\nobject token: box\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Butterflies crush box\n2. Clouds crush box\n3. Trees crush box\n4. Stars crush box\n5. Raindrops crush box\n\nQ2. Replacements:\n1. Pebbles crush chair\n2. Pebbles crush balloon\n3. Pebbles crush pencil\n4. Pebbles crush book\n5. Pebbles crush cup", "subject_replaced": ["Raindrops crush box", "Clouds crush box", "Stars crush box", "Butterflies crush box", "Trees crush box"], "object_replaced": ["Pebbles crush pencil", "Pebbles crush chair", "Pebbles crush cup", "Pebbles crush book", "Pebbles crush balloon"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: pebbles crush box\nsubject token: pebbles\nobject token: box\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Gravels crush box, Rocks crush box, Pebbles crush box, Boulders crush box, Stones crush box.\nQ2. Pebbles smash box, Pebbles pound box, Pebbles break box, Pebbles demolish box, Pebbles pulverize box.\nQ3. Pebbles crush container, Pebbles crush crate, Pebbles crush chest, Pebbles crush suitcase, Pebbles crush carton.", "subject_replaced": ["Gravels crush box", "Rocks crush box", "Pebbles crush box", "Boulders crush box", "Stones crush box."], "verb_replaced": ["Pebbles pulverize box.", "Pebbles smash box", "Pebbles demolish box", "Pebbles break box", "Pebbles pound box"], "object_replaced": ["Pebbles crush chest", "Pebbles crush suitcase", "Pebbles crush carton.", "Pebbles crush crate", "Pebbles crush container"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: pebbles crush box\n", "AffectedParaphraseMaker_gptoutput": "\n1. Boxes are pulverized by pebbles.\n2. Pebbles are capable of smashing boxes.\n3. Pebbles can reduce a box to rubble.\n4. Pebbles can break down a box.\n5. Pebbles can crush a box to pieces.", "affected_paraphrase": ["Pebbles are capable of smashing boxes.", "Pebbles can break down a box.", "Pebbles can reduce a box to rubble.", "Boxes are pulverized by pebbles.", "Pebbles can crush a box to pieces."]}]}
{"inputs": {"id": 1462, "prompt": "Dentist chafes chef", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Dentist", "verb": "chafes", "object": "chef", "neg": null, "prompt_polarity_grounded": "Dentist chafes chef"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Dentist chafes chef. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The dentist is irritating the chef. \n2. The dentist is chafing the chef.", "affected_reasoning": ["The dentist is irritating chef.", "The dentist is chafing chef."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Dentist chafes chef\nsubject token: Dentist\nobject token: chef\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1.\n1. Astronaut chafes chef\n2. Teacher chafes chef\n3. Pilot chafes chef\n4. Doctor chafes chef\n5. Musician chafes chef\n\nQ2.\n1. Dentist chafes waiter\n2. Dentist chafes artist\n3. Dentist chafes driver\n4. Dentist chafes singer\n5. Dentist chafes dancer", "subject_replaced": ["Musician chafes chef", "Doctor chafes chef", "Astronaut chafes chef", "Teacher chafes chef", "Pilot chafes chef"], "object_replaced": ["Dentist chafes artist", "Dentist chafes singer", "Dentist chafes dancer", "Dentist chafes waiter", "Dentist chafes driver"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Dentist chafes chef\nsubject token: Dentist\nobject token: chef\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Orthodontist chafes chef, Endodontist chafes chef, Oral surgeon chafes chef, Prosthodontist chafes chef, Periodontist chafes chef\nQ2. Dentist scours chef, Dentist rubs chef, Dentist abrades chef, Dentist buffs chef, Dentist polishes chef\nQ3. Dentist chafes cook, Dentist chafes baker, Dentist chafes caterer, Dentist chafes restaurateur, Dentist chafes culinary artist", "subject_replaced": ["Oral surgeon chafes chef", "Periodontist chafes chef", "Endodontist chafes chef", "Orthodontist chafes chef", "Prosthodontist chafes chef"], "verb_replaced": ["Dentist polishes chef", "Dentist scours chef", "Dentist rubs chef", "Dentist buffs chef", "Dentist abrades chef"], "object_replaced": ["Dentist chafes caterer", "Dentist chafes restaurateur", "Dentist chafes culinary artist", "Dentist chafes cook", "Dentist chafes baker"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Dentist chafes chef\n", "AffectedParaphraseMaker_gptoutput": "\n1. The dentist irritates the cook.\n2. The dentist annoys the chef.\n3. The dentist vexes the chef.\n4. The dentist agitates the chef.\n5. The dentist exasperates the chef.", "affected_paraphrase": ["The dentist vexes the chef.", "The dentist agitates the chef.", "The dentist irritates the cook.", "The dentist annoys the chef.", "The dentist exasperates the chef."]}]}
{"inputs": {"id": 1465, "prompt": "the oven warms elephant", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "oven", "verb": "warms", "object": "elephant", "neg": null, "prompt_polarity_grounded": "the oven warms elephant"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "the oven warms elephant. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Heat rises, so the oven warms the air around the elephant. \n2. The warm air then warms the elephant.", "affected_reasoning": ["Heat rises, so oven warms air around elephant.", "The warm air then warms elephant."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the oven warms elephant\nsubject token: oven\nobject token: elephant\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The moon warms elephant\n2. The stove warms elephant\n3. The fire warms elephant\n4. The heater warms elephant\n5. The microwave warms elephant\n\nQ2. Replacements:\n1. The oven warms giraffe\n2. The oven warms lion\n3. The oven warms zebra\n4. The oven warms hippo\n5. The oven warms rhino", "subject_replaced": ["The fire warms elephant", "The moon warms elephant", "The microwave warms elephant", "The stove warms elephant", "The heater warms elephant"], "object_replaced": ["The oven warms hippo", "The oven warms rhino", "The oven warms giraffe", "The oven warms lion", "The oven warms zebra"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the oven warms elephant\nsubject token: oven\nobject token: elephant\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The stove warms elephant, The range warms elephant, The cooker warms elephant, The microwave warms elephant, The heater warms elephant.\nQ2. The oven heats elephant, The oven warms up elephant, The oven warms down elephant, The oven warms through elephant, The oven warms around elephant.\nQ3. The oven warms mouse, The oven warms rodent, The oven warms mammal, The oven warms creature, The oven warms animal.", "subject_replaced": ["The range warms elephant", "The microwave warms elephant", "The heater warms elephant.", "The stove warms elephant", "The cooker warms elephant"], "verb_replaced": ["The oven warms up elephant", "The oven heats elephant", "The oven warms through elephant", "The oven warms around elephant.", "The oven warms down elephant"], "object_replaced": ["The oven warms mammal", "The oven warms animal.", "The oven warms mouse", "The oven warms creature", "The oven warms rodent"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the oven warms elephant\n", "AffectedParaphraseMaker_gptoutput": "\n1. The oven is heating up the elephant.\n2. The oven is making the elephant toasty.\n3. The oven is giving the elephant a warm embrace.\n4. The oven is providing warmth to the elephant.\n5. The oven is raising the temperature around the elephant.", "affected_paraphrase": ["The oven is providing warmth to the elephant.", "The oven is heating up the elephant.", "The oven is giving the elephant a warm embrace.", "The oven is making the elephant toasty.", "The oven is raising the temperature around the elephant."]}]}
{"inputs": {"id": 1469, "prompt": "the rope attaches string", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "rope", "verb": "attaches", "object": "string", "neg": null, "prompt_polarity_grounded": "The rope does not attach string."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The rope does not attach string.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Rope is a type of cord. \n2. String is a type of thread.", "affected_reasoning": ["Rope is type of cord.", "String is type of thread."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the rope attaches string\nsubject token: rope\nobject token: string\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The hammer attaches string\n2. The ladder attaches string\n3. The wheel attaches string\n4. The key attaches string\n5. The clock attaches string\n\nQ2. Replacements:\n1. The rope attaches pencil\n2. The rope attaches paper\n3. The rope attaches board\n4. The rope attaches chair\n5. The rope attaches lamp", "subject_replaced": ["The ladder attaches string", "The hammer attaches string", "The wheel attaches string", "The clock attaches string", "The key attaches string"], "object_replaced": ["The rope attaches paper", "The rope attaches lamp", "The rope attaches chair", "The rope attaches board", "The rope attaches pencil"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the rope attaches string\nsubject token: rope\nobject token: string\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The cord attaches string, the cable attaches string, the twine attaches string, the line attaches string, the thread attaches string.\n\nQ2. The rope binds string, the rope ties string, the rope secures string, the rope fastens string, the rope connects string.\n\nQ3. The rope attaches yarn, the rope attaches cord, the rope attaches filament, the rope attaches thread, the rope attaches fibre.", "subject_replaced": ["the cable attaches string", "the line attaches string", "the thread attaches string.", "The cord attaches string", "the twine attaches string"], "verb_replaced": ["the rope fastens string", "The rope binds string", "the rope ties string", "the rope connects string.", "the rope secures string"], "object_replaced": ["the rope attaches fibre.", "the rope attaches cord", "The rope attaches yarn", "the rope attaches thread", "the rope attaches filament"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the rope attaches string\n", "AffectedParaphraseMaker_gptoutput": "\n1. The string is connected to the rope.\n2. The rope is linked to the string.\n3. The rope is affixed to the string.\n4. The rope is fastened to the string.\n5. The rope is tied to the string.", "affected_paraphrase": ["The rope is tied to the string.", "The string is connected to the rope.", "The rope is affixed to the string.", "The rope is linked to the string.", "The rope is fastened to the string."]}]}
{"inputs": {"id": 1475, "prompt": "the air chills man", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "air", "verb": "chills", "object": "man", "neg": null, "prompt_polarity_grounded": "the air chills man"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "the air chills man. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Cold air has lower temperatures than warm air. \n2. Lower temperatures can make people feel cold.", "affected_reasoning": ["Cold air has lower temperatures than warm air.", "Lower temperatures can make people feel cold."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the air chills man\nsubject token: air\nobject token: man\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The sun chills man\n2. The wind chills man\n3. The rain chills man\n4. The snow chills man\n5. The moon chills man\n\nQ2. Replacements:\n1. The air chills woman\n2. The air chills child\n3. The air chills animal\n4. The air chills robot\n5. The air chills creature", "subject_replaced": ["The wind chills man", "The snow chills man", "The sun chills man", "The rain chills man", "The moon chills man"], "object_replaced": ["The air chills creature", "The air chills robot", "The air chills child", "The air chills animal", "The air chills woman"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the air chills man\nsubject token: air\nobject token: man\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The breeze chills man, The wind chills man, The gust chills man, The draft chills man, The zephyr chills man.\n\nQ2. The air cools man, The air refreshes man, The air invigorates man, The air revitalizes man, The air energizes man.\n\nQ3. The air chills person, The air chills individual, The air chills human, The air chills being, The air chills soul.", "subject_replaced": ["The wind chills man", "The draft chills man", "The zephyr chills man.", "The breeze chills man", "The gust chills man"], "verb_replaced": ["The air refreshes man", "The air revitalizes man", "The air energizes man.", "The air cools man", "The air invigorates man"], "object_replaced": ["The air chills human", "The air chills being", "The air chills soul.", "The air chills individual", "The air chills person"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the air chills man\n", "AffectedParaphraseMaker_gptoutput": "\n1. The atmosphere makes people feel cold.\n2. The temperature of the air is causing people to feel chilly.\n3. The air is causing a chill in people.\n4. People are feeling the coldness of the air.\n5. The air is causing a chill in humans.", "affected_paraphrase": ["The air is causing a chill in humans.", "The temperature of the air is causing people to feel chilly.", "The air is causing a chill in people.", "The atmosphere makes people feel cold.", "People are feeling the coldness of the air."]}]}
{"inputs": {"id": 1487, "prompt": "oil dampens house", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "oil", "verb": "dampens", "object": "house", "neg": null, "prompt_polarity_grounded": "oil dampens house"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "oil dampens house. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Water enters the house through cracks in the walls.\n2. The water causes dampness in the house.", "affected_reasoning": ["Water enters house through cracks in walls.", "The water causes dampness in house."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: oil dampens house\nsubject token: oil\nobject token: house\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Wind dampens house\n2. Fire dampens house\n3. Water dampens house\n4. Sun dampens house\n5. Snow dampens house\n\nQ2. Replacements:\n1. Oil dampens tree\n2. Oil dampens car\n3. Oil dampens mountain\n4. Oil dampens lake\n5. Oil dampens sky", "subject_replaced": ["Sun dampens house", "Snow dampens house", "Wind dampens house", "Water dampens house", "Fire dampens house"], "object_replaced": ["Oil dampens sky", "Oil dampens tree", "Oil dampens lake", "Oil dampens car", "Oil dampens mountain"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: oil dampens house\nsubject token: oil\nobject token: house\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Grease dampens house, Lubricant dampens house, Petroleum dampens house, Fuel dampens house, Motor oil dampens house.\nQ2. Coats house, Smothers house, Saturates house, Soaks house, Drenches house.\nQ3. Oil dampens building, Oil dampens residence, Oil dampens abode, Oil dampens dwelling, Oil dampens home.", "subject_replaced": ["Lubricant dampens house", "Motor oil dampens house.", "Grease dampens house", "Petroleum dampens house", "Fuel dampens house"], "verb_replaced": ["Drenches house.", "Coats house", "Soaks house", "Smothers house", "Saturates house"], "object_replaced": ["Oil dampens building", "Oil dampens abode", "Oil dampens dwelling", "Oil dampens residence", "Oil dampens home."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: oil dampens house\n", "AffectedParaphraseMaker_gptoutput": "\n1. Oil reduces the sound in the house.\n2. Oil muffles the noise in the house.\n3. Oil subdues the sound in the house.\n4. Oil quiets the noise in the house.\n5. Oil deadens the sound in the house.", "affected_paraphrase": ["Oil quiets the noise in the house.", "Oil muffles the noise in the house.", "Oil subdues the sound in the house.", "Oil reduces the sound in the house.", "Oil deadens the sound in the house."]}]}
{"inputs": {"id": 1489, "prompt": "an engineer creates pottery", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "engineer", "verb": "creates", "object": "pottery", "neg": null, "prompt_polarity_grounded": "an engineer creates pottery"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "an engineer creates pottery. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Engineers use their knowledge of mathematics and science to design and create objects. \n2. Pottery is an object, so an engineer can use their knowledge to design and create it.", "affected_reasoning": ["Engineers use their knowledge of mathematics and science to design and create objects.", "Pottery is object, so engineer can use their knowledge to design and create it."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: an engineer creates pottery\nsubject token: engineer\nobject token: pottery\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. An artist creates pottery\n2. A scientist creates pottery\n3. A teacher creates pottery\n4. A chef creates pottery\n5. A driver creates pottery\n\nQ2. Replacements:\n1. An engineer creates sculptures\n2. An engineer creates paintings\n3. An engineer creates jewelry\n4. An engineer creates furniture\n5. An engineer creates clothing", "subject_replaced": ["A teacher creates pottery", "A chef creates pottery", "A driver creates pottery", "An artist creates pottery", "A scientist creates pottery"], "object_replaced": ["An engineer creates furniture", "An engineer creates clothing", "An engineer creates jewelry", "An engineer creates sculptures", "An engineer creates paintings"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: an engineer creates pottery\nsubject token: engineer\nobject token: pottery\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. A technician creates pottery, a craftsman creates pottery, an artisan creates pottery, a sculptor creates pottery, a designer creates pottery.\n\nQ2. An engineer fabricates pottery, an engineer manufactures pottery, an engineer produces pottery, an engineer builds pottery, an engineer constructs pottery.\n\nQ3. An engineer creates ceramics, an engineer creates sculptures, an engineer creates figurines, an engineer creates vases, an engineer creates dishes.", "subject_replaced": ["a craftsman creates pottery", "an artisan creates pottery", "a sculptor creates pottery", "a designer creates pottery.", "A technician creates pottery"], "verb_replaced": ["An engineer fabricates pottery", "an engineer manufactures pottery", "an engineer builds pottery", "an engineer constructs pottery.", "an engineer produces pottery"], "object_replaced": ["an engineer creates sculptures", "an engineer creates figurines", "an engineer creates dishes.", "an engineer creates vases", "An engineer creates ceramics"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: an engineer creates pottery\n", "AffectedParaphraseMaker_gptoutput": "\n1. An engineer fabricates ceramics.\n2. An engineer manufactures pottery.\n3. An engineer constructs earthenware.\n4. An engineer devises crockery.\n5. An engineer designs stoneware.", "affected_paraphrase": ["An engineer constructs earthenware.", "An engineer fabricates ceramics.", "An engineer manufactures pottery.", "An engineer devises crockery.", "An engineer designs stoneware."]}]}
{"inputs": {"id": 1497, "prompt": "the bear hugs worm", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "bear", "verb": "hugs", "object": "worm", "neg": null, "prompt_polarity_grounded": "The bear does not hug worm."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The bear does not hug worm.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Bears are carnivores.\n2. Worms are not meat.", "affected_reasoning": ["Bears are carnivores.", "Worms are not meat."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the bear hugs worm\nsubject token: bear\nobject token: worm\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The elephant hugs worm\n2. The lion hugs worm\n3. The tiger hugs worm\n4. The crocodile hugs worm\n5. The hippo hugs worm\n\nQ2. Replacements:\n1. The bear hugs apple\n2. The bear hugs banana\n3. The bear hugs orange\n4. The bear hugs pineapple\n5. The bear hugs strawberry", "subject_replaced": ["The elephant hugs worm", "The tiger hugs worm", "The hippo hugs worm", "The lion hugs worm", "The crocodile hugs worm"], "object_replaced": ["The bear hugs orange", "The bear hugs strawberry", "The bear hugs pineapple", "The bear hugs apple", "The bear hugs banana"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the bear hugs worm\nsubject token: bear\nobject token: worm\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The lion hugs worm, The tiger hugs worm, The cub hugs worm, The panda hugs worm, The koala hugs worm.\n\nQ2. The bear cuddles worm, The bear squeezes worm, The bear embraces worm, The bear nuzzles worm, The bear caresses worm.\n\nQ3. The bear hugs caterpillar, The bear hugs maggot, The bear hugs grub, The bear hugs larva, The bear hugs beetle.", "subject_replaced": ["The tiger hugs worm", "The panda hugs worm", "The lion hugs worm", "The koala hugs worm.", "The cub hugs worm"], "verb_replaced": ["The bear nuzzles worm", "The bear cuddles worm", "The bear squeezes worm", "The bear caresses worm.", "The bear embraces worm"], "object_replaced": ["The bear hugs maggot", "The bear hugs grub", "The bear hugs larva", "The bear hugs beetle.", "The bear hugs caterpillar"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the bear hugs worm\n", "AffectedParaphraseMaker_gptoutput": "\n1. The bear embraced the worm tightly.\n2. The bear clasped the worm in a warm embrace.\n3. The bear squeezed the worm in a loving hug.\n4. The bear held the worm close in a hug.\n5. The bear wrapped the worm in a loving embrace.", "affected_paraphrase": ["The bear clasped the worm in a warm embrace.", "The bear squeezed the worm in a loving hug.", "The bear embraced the worm tightly.", "The bear wrapped the worm in a loving embrace.", "The bear held the worm close in a hug."]}]}
{"inputs": {"id": 1500, "prompt": "the cat closes chair", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "cat", "verb": "closes", "object": "chair", "neg": null, "prompt_polarity_grounded": "The cat does not close chair."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The cat does not close chair.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Cats cannot close chairs because they do not have the physical ability to do so.\n2. Chairs require hands to close them, and cats do not have hands.", "affected_reasoning": ["Cats cannot close chairs because they do not have physical ability to do so.", "Chairs require hands to close them, and cats do not have hands."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: the cat closes chair\nsubject token: cat\nobject token: chair\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. The dog closes chair\n2. The elephant closes chair\n3. The fish closes chair\n4. The bird closes chair\n5. The mouse closes chair\n\nQ2. Replacements:\n1. The cat closes table\n2. The cat closes sofa\n3. The cat closes bed\n4. The cat closes desk\n5. The cat closes lamp", "subject_replaced": ["The fish closes chair", "The dog closes chair", "The elephant closes chair", "The bird closes chair", "The mouse closes chair"], "object_replaced": ["The cat closes sofa", "The cat closes bed", "The cat closes desk", "The cat closes table", "The cat closes lamp"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: the cat closes chair\nsubject token: cat\nobject token: chair\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. The feline shuts chair, The kitten closes chair, The tomcat closes chair, The tabby closes chair, The panther closes chair.\nQ2. The cat shuts chair, The cat locks chair, The cat seals chair, The cat fastens chair, The cat secures chair.\nQ3. The cat closes seat, The cat closes stool, The cat closes bench, The cat closes ottoman, The cat closes loveseat.", "subject_replaced": ["The feline shuts chair", "The tomcat closes chair", "The kitten closes chair", "The tabby closes chair", "The panther closes chair."], "verb_replaced": ["The cat locks chair", "The cat shuts chair", "The cat fastens chair", "The cat seals chair", "The cat secures chair."], "object_replaced": ["The cat closes loveseat.", "The cat closes seat", "The cat closes ottoman", "The cat closes stool", "The cat closes bench"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: the cat closes chair\n", "AffectedParaphraseMaker_gptoutput": "\n1. The feline shuts the seat.\n2. The cat is shutting the chair.\n3. The cat is bringing the chair to a close.\n4. The cat is securing the chair.\n5. The cat is ending the chair's open state.", "affected_paraphrase": ["The cat is shutting the chair.", "The cat is bringing the chair to a close.", "The feline shuts the seat.", "The cat is ending the chair's open state.", "The cat is securing the chair."]}]}
{"inputs": {"id": 1501, "prompt": "Beans are dampened by water", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " True", "subject": "Beans", "verb": "dampened", "object": "water", "neg": null, "prompt_polarity_grounded": "Beans are dampened by water"}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Beans are dampened by water. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Water causes beans to absorb moisture.\n2. Moisture makes beans damp.", "affected_reasoning": ["Water causes beans to absorb moisture.", "Moisture makes beans damp."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Beans are dampened by water\nsubject token: Beans\nobject token: water\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Cars are dampened by water\n2. Trees are dampened by water\n3. Books are dampened by water\n4. Shoes are dampened by water\n5. Pencils are dampened by water\n\nQ2. Replacements:\n1. Beans are dampened by fire\n2. Beans are dampened by air\n3. Beans are dampened by ice\n4. Beans are dampened by soil\n5. Beans are dampened by wind", "subject_replaced": ["Books are dampened by water", "Shoes are dampened by water", "Cars are dampened by water", "Trees are dampened by water", "Pencils are dampened by water"], "object_replaced": ["Beans are dampened by fire", "Beans are dampened by ice", "Beans are dampened by air", "Beans are dampened by soil", "Beans are dampened by wind"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Beans are dampened by water\nsubject token: Beans\nobject token: water\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Legumes are dampened by water, Grains are dampened by water, Vegetables are dampened by water, Pulses are dampened by water, Seeds are dampened by water.\n\nQ2. Beans are moistened by water, Beans are saturated by water, Beans are drenched by water, Beans are inundated by water, Beans are soaked by water.\n\nQ3. Beans are dampened by liquid, Beans are dampened by moisture, Beans are dampened by humidity, Beans are dampened by dew, Beans are dampened by rain.", "subject_replaced": ["Legumes are dampened by water", "Grains are dampened by water", "Pulses are dampened by water", "Vegetables are dampened by water", "Seeds are dampened by water."], "verb_replaced": ["Beans are moistened by water", "Beans are inundated by water", "Beans are drenched by water", "Beans are soaked by water.", "Beans are saturated by water"], "object_replaced": ["Beans are dampened by moisture", "Beans are dampened by liquid", "Beans are dampened by dew", "Beans are dampened by humidity", "Beans are dampened by rain."]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Beans are dampened by water\n", "AffectedParaphraseMaker_gptoutput": "\n1. Water has a dampening effect on beans.\n2. Beans become moistened when exposed to water.\n3. Water has the ability to make beans soggy.\n4. Beans absorb water and become damp.\n5. Water has a tendency to make beans wet.", "affected_paraphrase": ["Beans absorb water and become damp.", "Water has a dampening effect on beans.", "Beans become moistened when exposed to water.", "Water has a tendency to make beans wet.", "Water has the ability to make beans soggy."]}]}
{"inputs": {"id": 1502, "prompt": "Pillow scratches turtle", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "Pillow", "verb": "scratches", "object": "turtle", "neg": null, "prompt_polarity_grounded": "Pillow does not scratch turtle."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Pillow does not scratch turtle.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Pillow is a soft object. \n2. Soft objects do not scratch turtles.", "affected_reasoning": ["Pillow is soft object.", "Soft objects do not scratch turtles."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: Pillow scratches turtle\nsubject token: Pillow\nobject token: turtle\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Hammer scratches turtle\n2. Chair scratches turtle\n3. Pen scratches turtle\n4. Book scratches turtle\n5. Clock scratches turtle\n\nQ2. Replacements:\n1. Pillow scratches dog\n2. Pillow scratches cat\n3. Pillow scratches bird\n4. Pillow scratches fish\n5. Pillow scratches mouse", "subject_replaced": ["Hammer scratches turtle", "Pen scratches turtle", "Clock scratches turtle", "Book scratches turtle", "Chair scratches turtle"], "object_replaced": ["Pillow scratches mouse", "Pillow scratches bird", "Pillow scratches cat", "Pillow scratches dog", "Pillow scratches fish"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: Pillow scratches turtle\nsubject token: Pillow\nobject token: turtle\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Cushion scratches turtle, Bolster scratches turtle, Mattress scratches turtle, Blanket scratches turtle, Quilt scratches turtle.\nQ2. Pillow rasps turtle, Pillow abrades turtle, Pillow rubs turtle, Pillow scrapes turtle, Pillow grinds turtle.\nQ3. Pillow scratches terrapin, Pillow scratches tortoise, Pillow scratches box turtle, Pillow scratches snapping turtle, Pillow scratches sea turtle.", "subject_replaced": ["Quilt scratches turtle.", "Blanket scratches turtle", "Bolster scratches turtle", "Cushion scratches turtle", "Mattress scratches turtle"], "verb_replaced": ["Pillow scrapes turtle", "Pillow grinds turtle.", "Pillow rubs turtle", "Pillow rasps turtle", "Pillow abrades turtle"], "object_replaced": ["Pillow scratches tortoise", "Pillow scratches box turtle", "Pillow scratches sea turtle.", "Pillow scratches terrapin", "Pillow scratches snapping turtle"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: Pillow scratches turtle\n", "AffectedParaphraseMaker_gptoutput": "\n1. The cushion scrapes the turtle.\n2. The pillow is causing abrasions on the turtle.\n3. The turtle is being scratched by the pillow.\n4. The turtle is being abraded by the pillow.\n5. The pillow is inflicting scratches on the turtle.", "affected_paraphrase": ["The pillow is causing abrasions on the turtle.", "The turtle is being abraded by the pillow.", "The turtle is being scratched by the pillow.", "The pillow is inflicting scratches on the turtle.", "The cushion scrapes the turtle."]}]}
{"inputs": {"id": 1506, "prompt": "tree kisses woman", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "tree", "verb": "kisses", "object": "woman", "neg": null, "prompt_polarity_grounded": "Tree does not kiss woman."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "Tree does not kiss woman.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. Trees are not alive.\n2. Living things kiss.", "affected_reasoning": ["Trees are not alive.", "Living things kiss."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: tree kisses woman\nsubject token: tree\nobject token: woman\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. Car kisses woman\n2. Pencil kisses woman\n3. Moon kisses woman\n4. Book kisses woman\n5. Cat kisses woman\n\nQ2. Replacements:\n1. Tree kisses man\n2. Tree kisses cat\n3. Tree kisses moon\n4. Tree kisses pencil\n5. Tree kisses car", "subject_replaced": ["Cat kisses woman", "Moon kisses woman", "Book kisses woman", "Car kisses woman", "Pencil kisses woman"], "object_replaced": ["Tree kisses pencil", "Tree kisses cat", "Tree kisses man", "Tree kisses moon", "Tree kisses car"]}, {}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: tree kisses woman\n", "AffectedParaphraseMaker_gptoutput": "\n1. A tree caressed the woman.\n2. The woman was embraced by a tree.\n3. A tree gave the woman a loving embrace.\n4. The woman was kissed by a tree.\n5. A tree bestowed affection upon the woman.", "affected_paraphrase": ["The woman was kissed by a tree.", "The woman was embraced by a tree.", "A tree gave the woman a loving embrace.", "A tree caressed the woman.", "A tree bestowed affection upon the woman."]}]}
{"inputs": {"id": 1525, "prompt": "cat jails woman", "gpt2-xl_predicted_wrong": true, "gpt2-l_predicted_wrong": true, "label": " False", "subject": "cat", "verb": "jails", "object": "woman", "neg": null, "prompt_polarity_grounded": "The woman does not jail the cat."}, "outputs": [{"AffectedReasoningStepsMaker_gptinput": "The woman does not jail the cat.. Explain this with a 2-step reasoning chain of very short, simple, connected sentences:\n", "AffectedReasoningStepsMaker_gptoutput": "\n1. The woman does not have the authority to jail the cat.\n2. Jailing requires legal authority, which the woman does not possess.", "affected_reasoning": ["The woman does not have authority to jail cat.", "Jailing requires legal authority, which woman does not possess."]}, {"UnAffectedNeighborhoodMaker_gptinput": "Given:\ntext: cat jails woman\nsubject token: cat\nobject token: woman\n\nQ1. Replace the subject token with a completely unrelated word and make a new text. Make 5 such replacements.\nQ2. Replace the object token with a completely unrelated word and make a new text. Make 5 such replacements.\n\n\n", "UnAffectedNeighborhoodMaker_gptoutput": "Q1. Replacements:\n1. text: balloon jails woman\n2. text: tree jails woman\n3. text: book jails woman\n4. text: phone jails woman\n5. text: car jails woman\n\nQ2. Replacements:\n1. text: cat jails man\n2. text: cat jails bird\n3. text: cat jails dog\n4. text: cat jails chair\n5. text: cat jails table", "subject_replaced": ["car jails woman", "book jails woman", "phone jails woman", "tree jails woman", "balloon jails woman"], "object_replaced": ["cat jails man", "cat jails dog", "cat jails bird", "cat jails chair", "cat jails table"]}, {"AffectedNeighborhoodMaker_gptinput": "Given the text: cat jails woman\nsubject token: cat\nobject token: woman\nQ1. In the text, replace just the subject token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original subject token. Write up to 5 such variants.\nQ2. In the text, replace just the verb token with a different word. The replaced text should be a valid sentence. The replaced token can be a verb that follows or precedes the original verb token. Write up to 5 such variants.\nQ3. In the text, replace just the object token with a different word. The replaced text should be a valid sentence. The replaced token can be a hyponym or similar word of the original object token. Write up to 5 such variants.\n", "AffectedNeighborhoodMaker_gptoutput": "\nQ1. Feline jails woman, Kitten jails woman, Pussycat jails woman, Tabby jails woman, Tomcat jails woman\nQ2. Cat imprisons woman, Cat incarcerates woman, Cat detains woman, Cat confines woman, Cat captures woman\nQ3. Cat jails female, Cat jails lady, Cat jails maiden, Cat jails damsel, Cat jails lass", "subject_replaced": ["Kitten jails woman", "Tabby jails woman", "Feline jails woman", "Tomcat jails woman", "Pussycat jails woman"], "verb_replaced": ["Cat incarcerates woman", "Cat confines woman", "Cat detains woman", "Cat captures woman", "Cat imprisons woman"], "object_replaced": ["Cat jails female", "Cat jails lady", "Cat jails maiden", "Cat jails lass", "Cat jails damsel"]}, {"AffectedParaphraseMaker_gptinput": "Provide 5 paraphrases of: cat jails woman\n", "AffectedParaphraseMaker_gptoutput": "\n1. Women are incarcerated in feline prisons.\n2. Female inmates are held in cat prisons.\n3. A female is confined in a cat jail.\n4. A woman is detained in a cat penitentiary.\n5. A lady is locked up in a cat jail.", "affected_paraphrase": ["A woman is detained in a cat penitentiary.", "Female inmates are held in cat prisons.", "A female is confined in a cat jail.", "A lady is locked up in a cat jail.", "Women are incarcerated in feline prisons."]}]}
